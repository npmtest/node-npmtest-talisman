{"/home/travis/build/npmtest/node-npmtest-talisman/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_talisman */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-talisman/lib.npmtest_talisman.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/lib.npmtest_talisman.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":53}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":59}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_talisman */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_talisman = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_talisman = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-talisman/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":52}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":66},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-talisman && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_talisman */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_talisman","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_talisman.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_talisman.rollup.js'] =","            local.assetsDict['/assets.npmtest_talisman.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_talisman.__dirname + '/lib.npmtest_talisman.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/babel-plugin.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/babel-plugin.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":35}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":12},"end":{"line":7,"column":19}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":35},"end":{"line":14,"column":47}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":42},"end":{"line":29,"column":62}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":34},"end":{"line":38,"column":49}}},"6":{"name":"(anonymous_6)","line":69,"loc":{"start":{"line":69,"column":35},"end":{"line":69,"column":50}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":16}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":101,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":26}},"3":{"start":{"line":4,"column":2},"end":{"line":100,"column":4}},"4":{"start":{"line":8,"column":10},"end":{"line":10,"column":11}},"5":{"start":{"line":9,"column":12},"end":{"line":9,"column":19}},"6":{"start":{"line":12,"column":10},"end":{"line":12,"column":39}},"7":{"start":{"line":13,"column":10},"end":{"line":13,"column":41}},"8":{"start":{"line":14,"column":10},"end":{"line":57,"column":13}},"9":{"start":{"line":16,"column":12},"end":{"line":19,"column":13}},"10":{"start":{"line":17,"column":14},"end":{"line":17,"column":38}},"11":{"start":{"line":18,"column":14},"end":{"line":18,"column":21}},"12":{"start":{"line":21,"column":12},"end":{"line":34,"column":13}},"13":{"start":{"line":22,"column":14},"end":{"line":32,"column":15}},"14":{"start":{"line":23,"column":16},"end":{"line":23,"column":40}},"15":{"start":{"line":25,"column":19},"end":{"line":32,"column":15}},"16":{"start":{"line":26,"column":16},"end":{"line":26,"column":61}},"17":{"start":{"line":29,"column":16},"end":{"line":31,"column":19}},"18":{"start":{"line":30,"column":18},"end":{"line":30,"column":60}},"19":{"start":{"line":33,"column":14},"end":{"line":33,"column":21}},"20":{"start":{"line":37,"column":12},"end":{"line":56,"column":13}},"21":{"start":{"line":38,"column":14},"end":{"line":55,"column":17}},"22":{"start":{"line":40,"column":16},"end":{"line":46,"column":17}},"23":{"start":{"line":45,"column":18},"end":{"line":45,"column":77}},"24":{"start":{"line":48,"column":16},"end":{"line":54,"column":17}},"25":{"start":{"line":53,"column":18},"end":{"line":53,"column":60}},"26":{"start":{"line":59,"column":10},"end":{"line":87,"column":11}},"27":{"start":{"line":60,"column":12},"end":{"line":66,"column":15}},"28":{"start":{"line":68,"column":12},"end":{"line":86,"column":13}},"29":{"start":{"line":69,"column":14},"end":{"line":83,"column":17}},"30":{"start":{"line":70,"column":16},"end":{"line":82,"column":19}},"31":{"start":{"line":85,"column":14},"end":{"line":85,"column":60}},"32":{"start":{"line":89,"column":10},"end":{"line":89,"column":54}},"33":{"start":{"line":94,"column":6},"end":{"line":95,"column":15}},"34":{"start":{"line":95,"column":8},"end":{"line":95,"column":15}},"35":{"start":{"line":97,"column":6},"end":{"line":97,"column":53}},"36":{"start":{"line":98,"column":6},"end":{"line":98,"column":84}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":10},"end":{"line":8,"column":10}},{"start":{"line":8,"column":10},"end":{"line":8,"column":10}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":12}},{"start":{"line":16,"column":12},"end":{"line":16,"column":12}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":21,"column":12}},{"start":{"line":21,"column":12},"end":{"line":21,"column":12}}]},"4":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":14},"end":{"line":22,"column":14}},{"start":{"line":22,"column":14},"end":{"line":22,"column":14}}]},"5":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":18},"end":{"line":22,"column":48}},{"start":{"line":22,"column":52},"end":{"line":22,"column":100}}]},"6":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":19},"end":{"line":25,"column":19}},{"start":{"line":25,"column":19},"end":{"line":25,"column":19}}]},"7":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":41}},{"start":{"line":25,"column":45},"end":{"line":25,"column":88}}]},"8":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":12}},{"start":{"line":37,"column":12},"end":{"line":37,"column":12}}]},"9":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":16},"end":{"line":40,"column":16}},{"start":{"line":40,"column":16},"end":{"line":40,"column":16}}]},"10":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":18},"end":{"line":41,"column":50}},{"start":{"line":42,"column":18},"end":{"line":42,"column":34}},{"start":{"line":43,"column":18},"end":{"line":43,"column":47}}]},"11":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":16}},{"start":{"line":48,"column":16},"end":{"line":48,"column":16}}]},"12":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":18},"end":{"line":49,"column":50}},{"start":{"line":50,"column":18},"end":{"line":50,"column":34}},{"start":{"line":51,"column":18},"end":{"line":51,"column":59}}]},"13":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":10},"end":{"line":59,"column":10}},{"start":{"line":59,"column":10},"end":{"line":59,"column":10}}]},"14":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":12}},{"start":{"line":68,"column":12},"end":{"line":68,"column":12}}]},"15":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":6},"end":{"line":94,"column":6}},{"start":{"line":94,"column":6},"end":{"line":94,"column":6}}]}},"code":["module.exports = function(context) {","  const t = context.types;","","  return {","    visitor: {","      Program: {","        exit(path) {","          if (path.BABEL_PLUGIN_ADD_MODULE_EXPORTS) {","            return;","          }","","          let hasExportDefault = false;","          const namedExports = new Set();","          path.get('body').forEach(function(p) {","","            if (p.isExportDefaultDeclaration()) {","              hasExportDefault = true;","              return;","            }","","            if (p.isExportNamedDeclaration()) {","              if (p.node.specifiers.length === 1 && p.node.specifiers[0].exported.name === 'default') {","                hasExportDefault = true;","              }","              else if (p.node.declaration && t.isFunctionDeclaration(p.node.declaration)) {","                namedExports.add(p.node.declaration.id.name);","              }","              else {","                p.node.specifiers.forEach(function(specifier) {","                  namedExports.add(specifier.exported.name);","                });","              }","              return;","            }","","            // NOTE: this is not ideal & kinda loops on Punkt","            if (p.isVariableDeclaration()) {","              p.container.forEach(function(node) {","","                if (","                  t.isExportNamedDeclaration(node) &&","                  node.declaration &&","                  node.declaration.declarations","                ) {","                  namedExports.add(node.declaration.declarations[0].id.name);","                }","","                if (","                  t.isExportNamedDeclaration(node) &&","                  node.declaration &&","                  t.isFunctionDeclaration(node.declaration)","                ) {","                  namedExports.add(node.declaration.id.name)","                }","              });","            }","          });","","          if (hasExportDefault) {","            path.pushContainer('body', [","              t.expressionStatement(t.assignmentExpression(","                '=',","                t.memberExpression(t.identifier('module'), t.identifier('exports')),","                t.memberExpression(t.identifier('exports'), t.stringLiteral('default'), true)","              ))","            ]);","","            if (namedExports.size) {","              namedExports.forEach(function(name) {","                path.pushContainer('body', [","                  t.expressionStatement(t.assignmentExpression(","                    '=',","                    t.memberExpression(","                      t.memberExpression(t.identifier('exports'), t.stringLiteral('default'), true),","                      t.identifier(name)","                    ),","                    t.memberExpression(","                      t.identifier('exports'),","                      t.identifier(name)","                    )","                  ))","                ]);","              });","","              path.BABEL_PLUGIN_NEED_TO_SHIFT_MODULE = true;","            }","          }","","          path.BABEL_PLUGIN_ADD_MODULE_EXPORTS = true;","        }","      }","    },","    post(state) {","      if (!state.path.BABEL_PLUGIN_NEED_TO_SHIFT_MODULE)","        return;","","      const program = state.path.get('body')[0].node;","      program.expression.arguments[2].properties[0].value = t.booleanLiteral(false);","    }","  };","};",""],"l":{"1":1,"2":0,"4":0,"8":0,"9":0,"12":0,"13":0,"14":0,"16":0,"17":0,"18":0,"21":0,"22":0,"23":0,"25":0,"26":0,"29":0,"30":0,"33":0,"37":0,"38":0,"40":0,"45":0,"48":0,"53":0,"59":0,"60":0,"68":0,"69":0,"70":0,"85":0,"89":0,"94":0,"95":0,"97":0,"98":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/classification/perceptron.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/classification/perceptron.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"2":{"name":"_classCallCheck","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}}},"3":{"name":"step","line":28,"loc":{"start":{"line":28,"column":11},"end":{"line":28,"column":28}}},"4":{"name":"randomIndex","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":27}}},"5":{"name":"(anonymous_5)","line":45,"loc":{"start":{"line":45,"column":17},"end":{"line":45,"column":29}}},"6":{"name":"Perceptron","line":46,"loc":{"start":{"line":46,"column":2},"end":{"line":46,"column":31}}},"7":{"name":"reset","line":70,"loc":{"start":{"line":70,"column":31},"end":{"line":70,"column":48}}},"8":{"name":"fit","line":86,"loc":{"start":{"line":86,"column":29},"end":{"line":86,"column":60}}},"9":{"name":"predict","line":128,"loc":{"start":{"line":128,"column":33},"end":{"line":128,"column":58}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":47}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":95}},"6":{"start":{"line":13,"column":39},"end":{"line":13,"column":93}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":153}},"8":{"start":{"line":15,"column":50},"end":{"line":15,"column":151}},"9":{"start":{"line":15,"column":92},"end":{"line":15,"column":149}},"10":{"start":{"line":28,"column":0},"end":{"line":30,"column":2}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":23}},"12":{"start":{"line":35,"column":0},"end":{"line":37,"column":1}},"13":{"start":{"line":36,"column":2},"end":{"line":36,"column":51}},"14":{"start":{"line":45,"column":0},"end":{"line":138,"column":4}},"15":{"start":{"line":46,"column":2},"end":{"line":61,"column":3}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":38}},"17":{"start":{"line":49,"column":4},"end":{"line":53,"column":73}},"18":{"start":{"line":55,"column":4},"end":{"line":55,"column":163}},"19":{"start":{"line":55,"column":47},"end":{"line":55,"column":163}},"20":{"start":{"line":57,"column":4},"end":{"line":60,"column":6}},"21":{"start":{"line":70,"column":2},"end":{"line":73,"column":4}},"22":{"start":{"line":71,"column":4},"end":{"line":71,"column":24}},"23":{"start":{"line":72,"column":4},"end":{"line":72,"column":24}},"24":{"start":{"line":86,"column":2},"end":{"line":115,"column":4}},"25":{"start":{"line":87,"column":4},"end":{"line":87,"column":135}},"26":{"start":{"line":87,"column":43},"end":{"line":87,"column":135}},"27":{"start":{"line":90,"column":4},"end":{"line":90,"column":17}},"28":{"start":{"line":92,"column":4},"end":{"line":92,"column":40}},"29":{"start":{"line":94,"column":4},"end":{"line":94,"column":40}},"30":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"31":{"start":{"line":97,"column":6},"end":{"line":97,"column":33}},"32":{"start":{"line":99,"column":4},"end":{"line":109,"column":5}},"33":{"start":{"line":100,"column":6},"end":{"line":104,"column":42}},"34":{"start":{"line":107,"column":6},"end":{"line":107,"column":86}},"35":{"start":{"line":108,"column":6},"end":{"line":108,"column":55}},"36":{"start":{"line":111,"column":4},"end":{"line":111,"column":33}},"37":{"start":{"line":112,"column":4},"end":{"line":112,"column":27}},"38":{"start":{"line":114,"column":4},"end":{"line":114,"column":16}},"39":{"start":{"line":128,"column":2},"end":{"line":135,"column":4}},"40":{"start":{"line":130,"column":4},"end":{"line":130,"column":121}},"41":{"start":{"line":130,"column":23},"end":{"line":130,"column":121}},"42":{"start":{"line":132,"column":4},"end":{"line":132,"column":213}},"43":{"start":{"line":132,"column":43},"end":{"line":132,"column":213}},"44":{"start":{"line":134,"column":4},"end":{"line":134,"column":57}},"45":{"start":{"line":137,"column":2},"end":{"line":137,"column":20}},"46":{"start":{"line":140,"column":0},"end":{"line":140,"column":29}},"47":{"start":{"line":141,"column":0},"end":{"line":141,"column":36}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":70},"end":{"line":13,"column":73}},{"start":{"line":13,"column":76},"end":{"line":13,"column":92}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":49}},{"start":{"line":13,"column":53},"end":{"line":13,"column":67}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":50},"end":{"line":15,"column":50}},{"start":{"line":15,"column":50},"end":{"line":15,"column":50}}]},"4":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":17},"end":{"line":29,"column":18}},{"start":{"line":29,"column":21},"end":{"line":29,"column":22}}]},"5":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":15},"end":{"line":49,"column":22}},{"start":{"line":49,"column":26},"end":{"line":49,"column":28}}]},"6":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":57},"end":{"line":51,"column":58}},{"start":{"line":51,"column":61},"end":{"line":51,"column":78}}]},"7":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":53},"end":{"line":53,"column":54}},{"start":{"line":53,"column":57},"end":{"line":53,"column":72}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"9":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":25}},{"start":{"line":55,"column":29},"end":{"line":55,"column":45}}]},"10":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"11":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"12":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _vectors = require('../helpers/vectors');","","var _random = require('lodash/random');","","var _random2 = _interopRequireDefault(_random);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**","                                                                                                                                                           * Talisman classification/perceptronmplementation of the Perceptron linear classifier.","                                                                                                                                                           *","                                                                                                                                                           * [Reference]: https://en.wikipedia.org/wiki/Perceptron","                                                                                                                                                           */","","","/**"," * The Heaviside step function."," */","var step = function step(x) {","  return x < 0 ? 0 : 1;","};","","/**"," * Getting a random index from the given list."," */","function randomIndex(list) {","  return (0, _random2.default)(0, list.length - 1);","}","","/**"," * The Perceptron classifier."," *"," * @constructor"," */","","var Perceptron = function () {","  function Perceptron(options) {","    _classCallCheck(this, Perceptron);","","    var _ref = options || {},","        _ref$learningRate = _ref.learningRate,","        learningRate = _ref$learningRate === undefined ? 1 : _ref$learningRate,","        _ref$iterations = _ref.iterations,","        iterations = _ref$iterations === undefined ? 5 : _ref$iterations;","","    if (learningRate <= 0 || learningRate > 1) throw Error('talisman/classification/perceptron: the learning rate should be comprised between 0 and 1 inclusive.');","","    this.options = {","      learningRate: learningRate,","      iterations: iterations","    };","  }","","  /**","   * Method used to reset the internal state of the Perceptron.","   *","   * @return {Perceptron}           - Returns itself for chaining purposes.","   */","","","  Perceptron.prototype.reset = function reset() {","    this.dimensions = 0;","    this.weights = null;","  };","","  /**","   * Method used to train the Perceptron.","   *","   * @param  {array}       features - Training vectors.","   * @param  {array}       labels   - Target value (0 or 1).","   * @return {Perceptron}           - Returns itself for chaining purposes.","   *","   * @throws {Error} - Will throw if features and labels are not of same length.","   */","","","  Perceptron.prototype.fit = function fit(features, labels) {","    if (features.length !== labels.length) throw Error('talisman/classification/perceptron.fit: given arrays have different lengths.');","","    // Resetting internal state","    this.reset();","","    var dimensions = features[0].length;","","    var weights = new Array(dimensions);","","    for (var i = 0; i < dimensions; i++) {","      weights[i] = Math.random();","    } // Performing iterations","    for (var _i = 0, l = this.options.iterations; _i < l; _i++) {","      var index = randomIndex(features),","          vector = features[index],","          expected = +!!labels[index],","          result = (0, _vectors.dot)(weights, vector),","          error = expected - step(result);","","      // Adjusting weights","      var adjustment = (0, _vectors.scale)(vector, this.options.learningRate * error);","      weights = (0, _vectors.add)(weights, adjustment);","    }","","    this.dimensions = dimensions;","    this.weights = weights;","","    return this;","  };","","  /**","   * Method used to classify a new vector.","   *","   * @param  {array} vector - The vector to classify.","   * @return {number}       - The predicted label (0 or 1).","   *","   * @throw {Error} - The classifier cannot predict if not yet fitted.","   * @throw {Error} - The classifier expects a vector of correct dimension.","   */","","","  Perceptron.prototype.predict = function predict(vector) {","","    if (!this.weights) throw Error('talisman/classification/perceptron.probabilities: the classifier is not yet fitted');","","    if (vector.length !== this.dimensions) throw Error('talisman/classification/perceptron.probabilities: the given vector is not of correct dimension (' + vector.length + ' instead of ' + this.dimensions + ').');","","    return step((0, _vectors.dot)(vector, this.weights));","  };","","  return Perceptron;","}();","","exports.default = Perceptron;","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"28":1,"29":0,"35":1,"36":0,"45":1,"46":1,"47":0,"49":0,"55":0,"57":0,"70":1,"71":0,"72":0,"86":1,"87":0,"90":0,"92":0,"94":0,"96":0,"97":0,"99":0,"100":0,"107":0,"108":0,"111":0,"112":0,"114":0,"128":1,"130":0,"132":0,"134":0,"137":1,"140":1,"141":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/helpers/vectors.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/helpers/vectors.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"vec","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":22}}},"2":{"name":"add","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":19}}},"3":{"name":"scale","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":21}}},"4":{"name":"mean","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":23}}},"5":{"name":"dot","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":19}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":18}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":22}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":20}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":18}},"7":{"start":{"line":26,"column":0},"end":{"line":36,"column":1}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":28}},"9":{"start":{"line":29,"column":2},"end":{"line":33,"column":3}},"10":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"11":{"start":{"line":31,"column":6},"end":{"line":31,"column":23}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":16}},"13":{"start":{"line":45,"column":0},"end":{"line":52,"column":1}},"14":{"start":{"line":46,"column":2},"end":{"line":47,"column":31}},"15":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":28}},"17":{"start":{"line":51,"column":3},"end":{"line":51,"column":17}},"18":{"start":{"line":61,"column":0},"end":{"line":68,"column":1}},"19":{"start":{"line":62,"column":2},"end":{"line":63,"column":31}},"20":{"start":{"line":65,"column":2},"end":{"line":67,"column":3}},"21":{"start":{"line":66,"column":4},"end":{"line":66,"column":25}},"22":{"start":{"line":67,"column":3},"end":{"line":67,"column":17}},"23":{"start":{"line":76,"column":0},"end":{"line":90,"column":1}},"24":{"start":{"line":77,"column":2},"end":{"line":77,"column":38}},"25":{"start":{"line":79,"column":2},"end":{"line":85,"column":3}},"26":{"start":{"line":80,"column":4},"end":{"line":80,"column":28}},"27":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"28":{"start":{"line":83,"column":6},"end":{"line":83,"column":26}},"29":{"start":{"line":87,"column":2},"end":{"line":89,"column":3}},"30":{"start":{"line":88,"column":4},"end":{"line":88,"column":30}},"31":{"start":{"line":89,"column":3},"end":{"line":89,"column":14}},"32":{"start":{"line":99,"column":0},"end":{"line":105,"column":1}},"33":{"start":{"line":100,"column":2},"end":{"line":100,"column":18}},"34":{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},"35":{"start":{"line":103,"column":4},"end":{"line":103,"column":27}},"36":{"start":{"line":104,"column":3},"end":{"line":104,"column":18}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.vec = vec;","exports.add = add;","exports.scale = scale;","exports.mean = mean;","exports.dot = dot;","/**"," * Talisman helpers/vectors"," * ========================="," *"," * Compilation of various helpers to deal with vectors."," */","","/**"," * Function creating a vector of n dimensions and filling it with a single"," * value if required."," *"," * @param  {number} n    - Dimensions of the vector to create."," * @param  {mixed}  fill - Value to be used to fill the vector."," * @return {array}       - The resulting vector."," */","function vec(n, fill) {","  var vector = new Array(n);","","  if (arguments.length > 1) {","    for (var i = 0; i < n; i++) {","      vector[i] = fill;","    }","  }","","  return vector;","}","","/**"," * Function adding two vectors."," *"," * @param  {array} a - The first vector."," * @param  {array} b - The second vector."," * @return {array}   - The resulting vector."," */","function add(a, b) {","  var dimensions = a.length,","      vector = vec(dimensions);","","  for (var i = 0; i < dimensions; i++) {","    vector[i] = a[i] + b[i];","  }return vector;","}","","/**"," * Function multiplying a vector & a scalar."," *"," * @param  {array} v - The first vector."," * @param  {array} s - The scalar."," * @return {array}   - The resulting vector."," */","function scale(v, s) {","  var dimensions = v.length,","      vector = vec(dimensions);","","  for (var i = 0; i < dimensions; i++) {","    vector[i] = v[i] * s;","  }return vector;","}","","/**"," * Function returning the mean of a list of vectors."," *"," * @param  {array} vectors - The list of vectors to process."," * @return {array}         - A mean vector."," */","function mean(vectors) {","  var sum = vec(vectors[0].length, 0);","","  for (var i = 0, l = vectors.length; i < l; i++) {","    var vector = vectors[i];","","    for (var j = 0, m = vector.length; j < m; j++) {","      sum[j] += vector[j];","    }","  }","","  for (var _i = 0, _l = sum.length; _i < _l; _i++) {","    sum[_i] /= vectors.length;","  }return sum;","}","","/**"," * Function returning the scalar product of two vectors."," *"," * @param  {array}  a - The first vector."," * @param  {array}  b - The second vector."," * @return {number}   - The scalar product."," */","function dot(a, b) {","  var product = 0;","","  for (var i = 0, l = a.length; i < l; i++) {","    product += a[i] * b[i];","  }return product;","}"],"l":{"3":1,"6":1,"7":1,"8":1,"9":1,"10":1,"26":1,"27":0,"29":0,"30":0,"31":0,"35":0,"45":1,"46":0,"49":0,"50":0,"51":0,"61":1,"62":0,"65":0,"66":0,"67":0,"76":1,"77":0,"79":0,"80":0,"82":0,"83":0,"87":0,"88":0,"89":0,"99":1,"100":0,"102":0,"103":0,"104":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/k-means.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/k-means.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":1,"117":0,"118":0,"119":0,"120":1,"121":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}}},"2":{"name":"_classCallCheck","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}}},"3":{"name":"compareCentroids","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":32}}},"4":{"name":"(anonymous_4)","line":73,"loc":{"start":{"line":73,"column":30},"end":{"line":73,"column":42}}},"5":{"name":"KMeans","line":74,"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":24}}},"6":{"name":"(anonymous_6)","line":141,"loc":{"start":{"line":141,"column":32},"end":{"line":141,"column":52}}},"7":{"name":"iterate","line":155,"loc":{"start":{"line":155,"column":29},"end":{"line":155,"column":48}}},"8":{"name":"run","line":244,"loc":{"start":{"line":244,"column":25},"end":{"line":244,"column":40}}},"9":{"name":"kMeans","line":271,"loc":{"start":{"line":271,"column":0},"end":{"line":271,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":58}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":53}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":45}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":44}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":95}},"10":{"start":{"line":19,"column":39},"end":{"line":19,"column":93}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":153}},"12":{"start":{"line":21,"column":50},"end":{"line":21,"column":151}},"13":{"start":{"line":21,"column":92},"end":{"line":21,"column":149}},"14":{"start":{"line":34,"column":0},"end":{"line":41,"column":2}},"15":{"start":{"line":46,"column":0},"end":{"line":54,"column":1}},"16":{"start":{"line":47,"column":2},"end":{"line":51,"column":3}},"17":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"18":{"start":{"line":49,"column":6},"end":{"line":49,"column":44}},"19":{"start":{"line":49,"column":31},"end":{"line":49,"column":44}},"20":{"start":{"line":53,"column":2},"end":{"line":53,"column":14}},"21":{"start":{"line":73,"column":0},"end":{"line":260,"column":4}},"22":{"start":{"line":74,"column":2},"end":{"line":146,"column":3}},"23":{"start":{"line":75,"column":4},"end":{"line":75,"column":21}},"24":{"start":{"line":77,"column":4},"end":{"line":77,"column":89}},"25":{"start":{"line":79,"column":4},"end":{"line":79,"column":34}},"26":{"start":{"line":82,"column":4},"end":{"line":82,"column":113}},"27":{"start":{"line":82,"column":30},"end":{"line":82,"column":113}},"28":{"start":{"line":85,"column":4},"end":{"line":85,"column":21}},"29":{"start":{"line":86,"column":4},"end":{"line":86,"column":41}},"30":{"start":{"line":87,"column":4},"end":{"line":87,"column":24}},"31":{"start":{"line":88,"column":4},"end":{"line":88,"column":26}},"32":{"start":{"line":89,"column":4},"end":{"line":89,"column":34}},"33":{"start":{"line":92,"column":4},"end":{"line":92,"column":42}},"34":{"start":{"line":94,"column":4},"end":{"line":94,"column":111}},"35":{"start":{"line":94,"column":35},"end":{"line":94,"column":111}},"36":{"start":{"line":96,"column":4},"end":{"line":96,"column":67}},"37":{"start":{"line":98,"column":4},"end":{"line":98,"column":139}},"38":{"start":{"line":98,"column":60},"end":{"line":98,"column":139}},"39":{"start":{"line":100,"column":4},"end":{"line":100,"column":55}},"40":{"start":{"line":100,"column":22},"end":{"line":100,"column":55}},"41":{"start":{"line":102,"column":4},"end":{"line":102,"column":37}},"42":{"start":{"line":103,"column":4},"end":{"line":103,"column":58}},"43":{"start":{"line":104,"column":4},"end":{"line":104,"column":73}},"44":{"start":{"line":105,"column":4},"end":{"line":105,"column":69}},"45":{"start":{"line":106,"column":4},"end":{"line":106,"column":92}},"46":{"start":{"line":109,"column":4},"end":{"line":109,"column":114}},"47":{"start":{"line":109,"column":51},"end":{"line":109,"column":114}},"48":{"start":{"line":111,"column":4},"end":{"line":111,"column":129}},"49":{"start":{"line":111,"column":35},"end":{"line":111,"column":129}},"50":{"start":{"line":113,"column":4},"end":{"line":113,"column":133}},"51":{"start":{"line":113,"column":45},"end":{"line":113,"column":133}},"52":{"start":{"line":115,"column":4},"end":{"line":115,"column":161}},"53":{"start":{"line":115,"column":75},"end":{"line":115,"column":161}},"54":{"start":{"line":117,"column":4},"end":{"line":117,"column":54}},"55":{"start":{"line":120,"column":4},"end":{"line":120,"column":52}},"56":{"start":{"line":122,"column":4},"end":{"line":134,"column":5}},"57":{"start":{"line":125,"column":6},"end":{"line":129,"column":9}},"58":{"start":{"line":125,"column":50},"end":{"line":129,"column":9}},"59":{"start":{"line":133,"column":6},"end":{"line":133,"column":49}},"60":{"start":{"line":137,"column":4},"end":{"line":137,"column":216}},"61":{"start":{"line":137,"column":42},"end":{"line":137,"column":216}},"62":{"start":{"line":139,"column":4},"end":{"line":139,"column":184}},"63":{"start":{"line":139,"column":44},"end":{"line":139,"column":184}},"64":{"start":{"line":141,"column":4},"end":{"line":143,"column":136}},"65":{"start":{"line":142,"column":6},"end":{"line":142,"column":76}},"66":{"start":{"line":143,"column":8},"end":{"line":143,"column":136}},"67":{"start":{"line":145,"column":4},"end":{"line":145,"column":38}},"68":{"start":{"line":155,"column":2},"end":{"line":235,"column":4}},"69":{"start":{"line":158,"column":4},"end":{"line":158,"column":36}},"70":{"start":{"line":158,"column":24},"end":{"line":158,"column":36}},"71":{"start":{"line":161,"column":4},"end":{"line":161,"column":47}},"72":{"start":{"line":164,"column":4},"end":{"line":185,"column":5}},"73":{"start":{"line":165,"column":6},"end":{"line":165,"column":32}},"74":{"start":{"line":168,"column":6},"end":{"line":169,"column":28}},"75":{"start":{"line":171,"column":6},"end":{"line":178,"column":7}},"76":{"start":{"line":172,"column":8},"end":{"line":172,"column":57}},"77":{"start":{"line":174,"column":8},"end":{"line":177,"column":9}},"78":{"start":{"line":175,"column":10},"end":{"line":175,"column":18}},"79":{"start":{"line":176,"column":10},"end":{"line":176,"column":28}},"80":{"start":{"line":181,"column":6},"end":{"line":181,"column":39}},"81":{"start":{"line":184,"column":6},"end":{"line":184,"column":39}},"82":{"start":{"line":188,"column":4},"end":{"line":188,"column":42}},"83":{"start":{"line":190,"column":4},"end":{"line":204,"column":5}},"84":{"start":{"line":191,"column":6},"end":{"line":203,"column":7}},"85":{"start":{"line":194,"column":8},"end":{"line":194,"column":39}},"86":{"start":{"line":195,"column":8},"end":{"line":197,"column":63}},"87":{"start":{"line":196,"column":10},"end":{"line":196,"column":55}},"88":{"start":{"line":199,"column":8},"end":{"line":199,"column":53}},"89":{"start":{"line":202,"column":8},"end":{"line":202,"column":46}},"90":{"start":{"line":207,"column":4},"end":{"line":207,"column":44}},"91":{"start":{"line":208,"column":4},"end":{"line":208,"column":39}},"92":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"93":{"start":{"line":211,"column":6},"end":{"line":211,"column":65}},"94":{"start":{"line":212,"column":5},"end":{"line":212,"column":54}},"95":{"start":{"line":214,"column":4},"end":{"line":221,"column":5}},"96":{"start":{"line":215,"column":6},"end":{"line":216,"column":44}},"97":{"start":{"line":218,"column":6},"end":{"line":220,"column":7}},"98":{"start":{"line":219,"column":8},"end":{"line":219,"column":56}},"99":{"start":{"line":220,"column":7},"end":{"line":220,"column":29}},"100":{"start":{"line":223,"column":4},"end":{"line":227,"column":5}},"101":{"start":{"line":224,"column":6},"end":{"line":226,"column":7}},"102":{"start":{"line":225,"column":8},"end":{"line":225,"column":47}},"103":{"start":{"line":229,"column":4},"end":{"line":229,"column":22}},"104":{"start":{"line":232,"column":4},"end":{"line":232,"column":78}},"105":{"start":{"line":234,"column":4},"end":{"line":234,"column":16}},"106":{"start":{"line":244,"column":2},"end":{"line":257,"column":4}},"107":{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},"108":{"start":{"line":248,"column":6},"end":{"line":248,"column":21}},"109":{"start":{"line":250,"column":4},"end":{"line":250,"column":37}},"110":{"start":{"line":252,"column":4},"end":{"line":254,"column":5}},"111":{"start":{"line":253,"column":6},"end":{"line":253,"column":23}},"112":{"start":{"line":254,"column":5},"end":{"line":256,"column":5}},"113":{"start":{"line":255,"column":6},"end":{"line":255,"column":56}},"114":{"start":{"line":256,"column":5},"end":{"line":256,"column":21}},"115":{"start":{"line":259,"column":2},"end":{"line":259,"column":16}},"116":{"start":{"line":271,"column":0},"end":{"line":277,"column":1}},"117":{"start":{"line":272,"column":2},"end":{"line":272,"column":44}},"118":{"start":{"line":274,"column":2},"end":{"line":274,"column":33}},"119":{"start":{"line":276,"column":2},"end":{"line":276,"column":18}},"120":{"start":{"line":278,"column":0},"end":{"line":278,"column":36}},"121":{"start":{"line":279,"column":0},"end":{"line":279,"column":43}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":70},"end":{"line":19,"column":73}},{"start":{"line":19,"column":76},"end":{"line":19,"column":92}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":46},"end":{"line":19,"column":49}},{"start":{"line":19,"column":53},"end":{"line":19,"column":67}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":50},"end":{"line":21,"column":50}},{"start":{"line":21,"column":50},"end":{"line":21,"column":50}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"5":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":71},"end":{"line":77,"column":83}},{"start":{"line":77,"column":86},"end":{"line":77,"column":88}}]},"6":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":18},"end":{"line":77,"column":38}},{"start":{"line":77,"column":42},"end":{"line":77,"column":68}}]},"7":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"8":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":14},"end":{"line":92,"column":25}},{"start":{"line":92,"column":29},"end":{"line":92,"column":41}}]},"9":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"10":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":45},"end":{"line":96,"column":59}},{"start":{"line":96,"column":62},"end":{"line":96,"column":66}}]},"11":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"12":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":20}},{"start":{"line":98,"column":24},"end":{"line":98,"column":58}}]},"13":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"14":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":13},"end":{"line":102,"column":22}},{"start":{"line":102,"column":26},"end":{"line":102,"column":36}}]},"15":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":20},"end":{"line":103,"column":36}},{"start":{"line":103,"column":40},"end":{"line":103,"column":57}}]},"16":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":25},"end":{"line":104,"column":46}},{"start":{"line":104,"column":50},"end":{"line":104,"column":72}}]},"17":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"18":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":34}},{"start":{"line":109,"column":38},"end":{"line":109,"column":49}}]},"19":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"20":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"21":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"22":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":46}},{"start":{"line":115,"column":50},"end":{"line":115,"column":73}}]},"23":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"24":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":6},"end":{"line":125,"column":6}},{"start":{"line":125,"column":6},"end":{"line":125,"column":6}}]},"25":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"26":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"27":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"28":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":13},"end":{"line":142,"column":36}},{"start":{"line":142,"column":40},"end":{"line":142,"column":75}}]},"29":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"30":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":8},"end":{"line":174,"column":8}},{"start":{"line":174,"column":8},"end":{"line":174,"column":8}}]},"31":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"32":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":11},"end":{"line":247,"column":26}},{"start":{"line":247,"column":30},"end":{"line":247,"column":66}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.KMeans = undefined;","exports.default = kMeans;","","var _euclidean = require('../metrics/distance/euclidean');","","var _euclidean2 = _interopRequireDefault(_euclidean);","","var _vectors = require('../helpers/vectors');","","var _random = require('pandemonium/random');","","var _sample = require('pandemonium/sample');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**","                                                                                                                                                           * Talisman clustering/k-meansunction related to k-means clustering.","                                                                                                                                                           *","                                                                                                                                                           * [Reference]: https://en.wikipedia.org/wiki/K-means_clustering","                                                                                                                                                           */","","","/**"," * Default options for k-means clustering."," */","var DEFAULTS = {","  k: 8,","  distance: _euclidean2.default,","  maxIterations: 300,","  initialCentroids: null,","  rng: Math.random,","  vector: null","};","","/**"," * Helpers."," */","function compareCentroids(a, b) {","  for (var i = 0, l = a.length; i < l; i++) {","    for (var j = 0, m = a[i].length; j < m; j++) {","      if (a[i][j] !== b[i][j]) return false;","    }","  }","","  return true;","}","","/**"," * KMeans class used to fine tune the clustering when needed & handling"," * the internal state of the process."," *"," * @constructor"," * @param {array}          data                       - Array of vectors."," * @param {object}         options                    - Possible options:"," * @param {number}            [k]                     - Number of clusters."," * @param {function}          [distance]              - Distance function."," * @param {number}            [maxIterations]"," *   - Maximum number of iterations."," * @param {array|function}    [initialCentroids]"," *   - Either an array of initial centroids or a function computing them."," * @param {function}          [rng]                   - RNG function to use."," * @param {function}          [vector]                - Returning the vector."," */","","var KMeans = exports.KMeans = function () {","  function KMeans(data) {","    var _this = this;","","    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","    _classCallCheck(this, KMeans);","","    // Enforcing data validity","    if (!Array.isArray(data)) throw Error('talisman/clustering/k-means: dataset should be an array of vectors.');","","    // Properties","    this.data = data;","    this.dimension = this.data[0].length;","    this.iterations = 0;","    this.centroids = null;","    this.previousCentroids = null;","","    // Options","    var rng = options.rng || DEFAULTS.rng;","","    if (typeof rng !== 'function') throw new Error('talisman/clustering/k-means: `rng` should be a function.');","","    var vectorGetter = 'vector' in options ? options.vector : null;","","    if (vectorGetter && typeof vectorGetter !== 'function') throw new Error('talisman/clustering/k-means: `vector` should be a function.');","","    if (vectorGetter) this.vectorGetter = vectorGetter;","","    this.k = options.k || DEFAULTS.k;","    this.distance = options.distance || DEFAULTS.distance;","    this.maxIterations = options.maxIterations || DEFAULTS.maxIterations;","    this.sampler = (0, _sample.createSample)(rng).bind(null, this.k);","    this.randomVectorIndex = (0, _random.createRandom)(rng).bind(null, 0, this.data.length);","","    // Enforcing correct options","    if (typeof this.k !== 'number' || this.k <= 0) throw Error('talisman/clustering/k-means: `k` should be > 0.');","","    if (this.data.length < this.k) throw Error('talisman/clustering/k-means: k is greater than the number of provided vectors.');","","    if (typeof this.distance !== 'function') throw Error('talisman/clustering/k-means: the `distance` option should be a function.');","","    if (typeof this.maxIterations !== 'number' || this.maxIterations <= 0) throw Error('talisman/clustering/k-means: the `maxIterations` option should be > 0.');","","    this.clusters = new Uint16Array(this.data.length);","","    // Computing initial centroids","    var initialCentroids = options.initialCentroids;","","    if (initialCentroids) {","","      // The user is giving the initial centroids:","      if (typeof initialCentroids === 'function') initialCentroids = initialCentroids(this.data, {","        k: this.k,","        distance: this.distance,","        maxIterations: this.maxIterations","      });","    } else {","","      // Else, we're gonna choose the initial centroids randomly","      initialCentroids = this.sampler(this.data);","    }","","    // Ensuring the starting centroids are correct","    if (!Array.isArray(initialCentroids)) throw Error('talisman/clustering/k-means: `initialCentroids` are not an array or the function you provided to compute them returned invalid data (could be your `sampler`).');","","    if (initialCentroids.length !== this.k) throw Error('talisman/clustering/k-means: you should provide k centroids (got ' + initialCentroids.length + ' instead of ' + this.k + ').');","","    if (!initialCentroids.every(function (centroid) {","      return Array.isArray(centroid) && centroid.length === _this.dimension;","    })) throw Error('talisman/clustering/k-means: at least one of the provided or computed centroids is not of the correct dimension.');","","    this.centroids = initialCentroids;","  }","","  /**","   * Method used to perform one iteration of the clustering algorithm.","   *","   * @return {KMeans} - Returns itself for chaining.","   */","","","  KMeans.prototype.iterate = function iterate() {","","    // If the clustering has already converged, we break","    if (this.converged) return this;","","    // Initializing clusters states","    var clusterStates = new Uint8Array(this.k);","","    // Iterating through the dataset's vectors","    for (var i = 0, l = this.data.length; i < l; i++) {","      var vector = this.data[i];","","      // Finding the closest centroid","      var min = Infinity,","          centroidIndex = 0;","","      for (var j = 0; j < this.k; j++) {","        var d = this.distance(vector, this.centroids[j]);","","        if (d < min) {","          min = d;","          centroidIndex = j;","        }","      }","","      // Mapping the vector to the correct centroid index","      this.clusters[i] = centroidIndex;","","      // Indicating our cluster isn't empty anymore","      clusterStates[centroidIndex] = 1;","    }","","    // If any of the clusters is empty, we need to give it a random vector","    var alreadyPluckedVectors = new Set();","","    for (var _i = 0; _i < this.k; _i++) {","      if (!clusterStates[_i]) {","","        // Finding a random vector","        var randomVectorIndex = void 0;","        do {","          randomVectorIndex = this.randomVectorIndex();","        } while (alreadyPluckedVectors.has(randomVectorIndex));","","        alreadyPluckedVectors.add(randomVectorIndex);","","        // Let's put it in our empty cluster","        this.clusters[randomVectorIndex] = _i;","      }","    }","","    // We now find the new centroids","    this.previousCentroids = this.centroids;","    this.centroids = new Array(this.k);","","    for (var _i2 = 0; _i2 < this.k; _i2++) {","      this.centroids[_i2] = (0, _vectors.vec)(this.dimension, 0);","    }var sizes = (0, _vectors.vec)(this.dimension, 0);","","    for (var _i3 = 0, _l = this.data.length; _i3 < _l; _i3++) {","      var _vector = this.data[_i3],","          clusterIndex = this.clusters[_i3];","","      for (var _j = 0; _j < this.dimension; _j++) {","        this.centroids[clusterIndex][_j] += _vector[_j];","      }sizes[clusterIndex]++;","    }","","    for (var _i4 = 0; _i4 < this.k; _i4++) {","      for (var _j2 = 0; _j2 < this.dimension; _j2++) {","        this.centroids[_i4][_j2] /= sizes[_i4];","      }","    }","","    this.iterations++;","","    // Checking if the clustering has converged","    this.converged = compareCentroids(this.previousCentroids, this.centroids);","","    return this;","  };","","  /**","   * Method used to start the clustering process.","   *","   * @return {array} - The resulting clusters.","   */","","","  KMeans.prototype.run = function run() {","","    // While we don't converge or haven't performed the allowed iterations:","    while (!this.converged && this.iterations < this.maxIterations) {","      this.iterate();","    } // Now we need to \"compile\" the clusters","    var clusters = new Array(this.k);","","    for (var i = 0; i < this.k; i++) {","      clusters[i] = [];","    }for (var _i5 = 0, l = this.data.length; _i5 < l; _i5++) {","      clusters[this.clusters[_i5]].push(this.data[_i5]);","    }return clusters;","  };","","  return KMeans;","}();","","/**"," * Exporting a convenient function to perform simple k-means clustering."," *"," * @param  {object} options - Clustering options."," * @param  {array}  data    - Target dataset."," * @param  {array}          - Resulting clusters."," */","","","function kMeans(options, data) {","  var clusterer = new KMeans(data, options);","","  var clusters = clusterer.run();","","  return clusters;","}","module.exports = exports['default'];","exports['default'].KMeans = exports.KMeans;"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"34":1,"46":1,"47":0,"48":0,"49":0,"53":0,"73":1,"74":1,"75":0,"77":0,"79":0,"82":0,"85":0,"86":0,"87":0,"88":0,"89":0,"92":0,"94":0,"96":0,"98":0,"100":0,"102":0,"103":0,"104":0,"105":0,"106":0,"109":0,"111":0,"113":0,"115":0,"117":0,"120":0,"122":0,"125":0,"133":0,"137":0,"139":0,"141":0,"142":0,"143":0,"145":0,"155":1,"158":0,"161":0,"164":0,"165":0,"168":0,"171":0,"172":0,"174":0,"175":0,"176":0,"181":0,"184":0,"188":0,"190":0,"191":0,"194":0,"195":0,"196":0,"199":0,"202":0,"207":0,"208":0,"210":0,"211":0,"212":0,"214":0,"215":0,"218":0,"219":0,"220":0,"223":0,"224":0,"225":0,"229":0,"232":0,"234":0,"244":1,"247":0,"248":0,"250":0,"252":0,"253":0,"254":0,"255":0,"256":0,"259":1,"271":1,"272":0,"274":0,"276":0,"278":1,"279":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/euclidean.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/euclidean.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"squared","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":23}}},"2":{"name":"euclidean","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"4":{"start":{"line":28,"column":0},"end":{"line":36,"column":1}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":130}},"6":{"start":{"line":29,"column":29},"end":{"line":29,"column":130}},"7":{"start":{"line":31,"column":2},"end":{"line":31,"column":19}},"8":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":41}},"10":{"start":{"line":35,"column":3},"end":{"line":35,"column":19}},"11":{"start":{"line":47,"column":0},"end":{"line":49,"column":1}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":34}},"13":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}},"14":{"start":{"line":51,"column":0},"end":{"line":51,"column":45}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.squared = squared;","exports.default = euclidean;","/**"," * Talisman metrics/distance/euclidean"," * ===================================="," *"," * Function computing the euclidean distance."," *"," * [Reference]: https://en.wikipedia.org/wiki/Euclidean_distance"," *"," * [Tags]: metric, string metric."," */","","/**"," * Function returning the squared euclidean distance between two vectors."," *"," * @param  {mixed}  a - The first vector."," * @param  {mixed}  b - The second vector."," * @return {number}   - The squared euclidean distance between a & b."," *"," * @throws {Error} The function expects vectors of same dimension."," */","function squared(a, b) {","  if (a.length !== b.length) throw Error('talisman/metrics/distance/euclidean: the given vectors are not of the same dimension.');","","  var distance = 0;","","  for (var i = 0, l = a.length; i < l; i++) {","    distance += Math.pow(a[i] - b[i], 2);","  }return distance;","}","","/**"," * Function returning the euclidean distance between two vectors."," *"," * @param  {mixed}  a - The first vector."," * @param  {mixed}  b - The second vector."," * @return {number}   - The euclidean distance between a & b."," *"," * @throws {Error} The function expects vector of same dimensions."," */","function euclidean(a, b) {","  return Math.sqrt(squared(a, b));","}","module.exports = exports['default'];","exports['default'].squared = exports.squared;"],"l":{"3":1,"6":1,"7":1,"28":1,"29":0,"31":0,"33":0,"34":0,"35":0,"47":1,"48":0,"50":1,"51":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/hash/crc32.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/hash/crc32.js","s":{"1":1,"2":1,"3":1,"4":1,"5":256,"6":256,"7":256,"8":256,"9":256,"10":256,"11":256,"12":256,"13":256,"14":256,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1},"b":{"1":[128,128],"2":[128,128],"3":[128,128],"4":[128,128],"5":[128,128],"6":[128,128],"7":[128,128],"8":[128,128],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"crc32","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"4":{"start":{"line":21,"column":0},"end":{"line":32,"column":1}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":8}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":45}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":45}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":45}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":45}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":45}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":45}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":45}},"13":{"start":{"line":30,"column":2},"end":{"line":30,"column":45}},"14":{"start":{"line":31,"column":2},"end":{"line":31,"column":15}},"15":{"start":{"line":40,"column":0},"end":{"line":66,"column":1}},"16":{"start":{"line":41,"column":2},"end":{"line":41,"column":13}},"17":{"start":{"line":43,"column":2},"end":{"line":63,"column":3}},"18":{"start":{"line":44,"column":4},"end":{"line":44,"column":32}},"19":{"start":{"line":46,"column":4},"end":{"line":62,"column":5}},"20":{"start":{"line":47,"column":6},"end":{"line":47,"column":43}},"21":{"start":{"line":48,"column":11},"end":{"line":62,"column":5}},"22":{"start":{"line":49,"column":6},"end":{"line":49,"column":61}},"23":{"start":{"line":50,"column":6},"end":{"line":50,"column":56}},"24":{"start":{"line":51,"column":11},"end":{"line":62,"column":5}},"25":{"start":{"line":52,"column":6},"end":{"line":52,"column":28}},"26":{"start":{"line":53,"column":6},"end":{"line":53,"column":40}},"27":{"start":{"line":54,"column":6},"end":{"line":54,"column":60}},"28":{"start":{"line":55,"column":6},"end":{"line":55,"column":61}},"29":{"start":{"line":56,"column":6},"end":{"line":56,"column":76}},"30":{"start":{"line":57,"column":6},"end":{"line":57,"column":55}},"31":{"start":{"line":59,"column":6},"end":{"line":59,"column":62}},"32":{"start":{"line":60,"column":6},"end":{"line":60,"column":61}},"33":{"start":{"line":61,"column":6},"end":{"line":61,"column":56}},"34":{"start":{"line":65,"column":2},"end":{"line":65,"column":16}},"35":{"start":{"line":67,"column":0},"end":{"line":67,"column":36}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":14},"end":{"line":23,"column":34}},{"start":{"line":23,"column":37},"end":{"line":23,"column":44}}]},"2":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":14},"end":{"line":24,"column":34}},{"start":{"line":24,"column":37},"end":{"line":24,"column":44}}]},"3":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":14},"end":{"line":25,"column":34}},{"start":{"line":25,"column":37},"end":{"line":25,"column":44}}]},"4":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":14},"end":{"line":26,"column":34}},{"start":{"line":26,"column":37},"end":{"line":26,"column":44}}]},"5":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":14},"end":{"line":27,"column":34}},{"start":{"line":27,"column":37},"end":{"line":27,"column":44}}]},"6":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":14},"end":{"line":28,"column":34}},{"start":{"line":28,"column":37},"end":{"line":28,"column":44}}]},"7":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":14},"end":{"line":29,"column":34}},{"start":{"line":29,"column":37},"end":{"line":29,"column":44}}]},"8":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":14},"end":{"line":30,"column":34}},{"start":{"line":30,"column":37},"end":{"line":30,"column":44}}]},"9":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"10":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":11},"end":{"line":48,"column":11}},{"start":{"line":48,"column":11},"end":{"line":48,"column":11}}]},"11":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":11},"end":{"line":51,"column":11}},{"start":{"line":51,"column":11},"end":{"line":51,"column":11}}]},"12":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":15},"end":{"line":51,"column":27}},{"start":{"line":51,"column":31},"end":{"line":51,"column":42}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = crc32;","/**"," * Talisman hash/crc32"," * ===================="," *"," * JavaScript implementation of the CRC32 hash for UTF-8 strings."," *"," * [Reference]: https://en.wikipedia.org/wiki/Cyclic_redundancy_check"," */","","/**"," * Constants."," */","var TABLE = new Int32Array(256);","","for (var c = 0, n = 0; n !== 256; n++) {","  c = n;","  c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;","  c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;","  c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;","  c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;","  c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;","  c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;","  c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;","  c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;","  TABLE[n] = c;","}","","/**"," * Computes the CRC32 hash for the given UTF-8 string."," *"," * @param  {string} string - The string to hash."," * @return {number}        - The signed CRC32 hash."," */","function crc32(string) {","  var C = -1;","","  for (var i = 0, l = string.length, _c, d; i < l;) {","    _c = string.charCodeAt(i++);","","    if (_c < 0x80) {","      C = C >>> 8 ^ TABLE[(C ^ _c) & 0xFF];","    } else if (_c < 0x800) {","      C = C >>> 8 ^ TABLE[(C ^ (192 | _c >> 6 & 31)) & 0xFF];","      C = C >>> 8 ^ TABLE[(C ^ (128 | _c & 63)) & 0xFF];","    } else if (_c >= 0xD800 && _c < 0xE000) {","      _c = (_c & 1023) + 64;","      d = string.charCodeAt(i++) & 1023;","      C = C >>> 8 ^ TABLE[(C ^ (240 | _c >> 8 & 7)) & 0xFF];","      C = C >>> 8 ^ TABLE[(C ^ (128 | _c >> 2 & 63)) & 0xFF];","      C = C >>> 8 ^ TABLE[(C ^ (128 | d >> 6 & 15 | (_c & 3) << 4)) & 0xFF];","      C = C >>> 8 ^ TABLE[(C ^ (128 | d & 63)) & 0xFF];","    } else {","      C = C >>> 8 ^ TABLE[(C ^ (224 | _c >> 12 & 15)) & 0xFF];","      C = C >>> 8 ^ TABLE[(C ^ (128 | _c >> 6 & 63)) & 0xFF];","      C = C >>> 8 ^ TABLE[(C ^ (128 | _c & 63)) & 0xFF];","    }","  }","","  return C ^ -1;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"19":1,"21":1,"22":256,"23":256,"24":256,"25":256,"26":256,"27":256,"28":256,"29":256,"30":256,"31":256,"40":1,"41":0,"43":0,"44":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"65":0,"67":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/hash/minhash.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/hash/minhash.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"createMinHash","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":32}}},"3":{"name":"(anonymous_3)","line":85,"loc":{"start":{"line":85,"column":9},"end":{"line":85,"column":29}}},"4":{"name":"binning","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":44}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"8":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"9":{"start":{"line":40,"column":0},"end":{"line":41,"column":28}},"10":{"start":{"line":46,"column":0},"end":{"line":49,"column":2}},"11":{"start":{"line":58,"column":0},"end":{"line":114,"column":1}},"12":{"start":{"line":59,"column":2},"end":{"line":59,"column":26}},"13":{"start":{"line":61,"column":2},"end":{"line":63,"column":46}},"14":{"start":{"line":66,"column":2},"end":{"line":67,"column":20}},"15":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"16":{"start":{"line":70,"column":4},"end":{"line":70,"column":30}},"17":{"start":{"line":71,"column":3},"end":{"line":73,"column":3}},"18":{"start":{"line":72,"column":4},"end":{"line":72,"column":30}},"19":{"start":{"line":73,"column":3},"end":{"line":73,"column":21}},"20":{"start":{"line":74,"column":2},"end":{"line":74,"column":20}},"21":{"start":{"line":85,"column":2},"end":{"line":113,"column":4}},"22":{"start":{"line":86,"column":4},"end":{"line":87,"column":48}},"23":{"start":{"line":90,"column":4},"end":{"line":94,"column":5}},"24":{"start":{"line":93,"column":6},"end":{"line":93,"column":123}},"25":{"start":{"line":93,"column":20},"end":{"line":93,"column":58}},"26":{"start":{"line":93,"column":63},"end":{"line":93,"column":123}},"27":{"start":{"line":97,"column":4},"end":{"line":97,"column":41}},"28":{"start":{"line":99,"column":4},"end":{"line":110,"column":5}},"29":{"start":{"line":100,"column":6},"end":{"line":100,"column":25}},"30":{"start":{"line":103,"column":6},"end":{"line":107,"column":7}},"31":{"start":{"line":104,"column":8},"end":{"line":104,"column":56}},"32":{"start":{"line":106,"column":8},"end":{"line":106,"column":35}},"33":{"start":{"line":106,"column":24},"end":{"line":106,"column":35}},"34":{"start":{"line":109,"column":6},"end":{"line":109,"column":26}},"35":{"start":{"line":112,"column":4},"end":{"line":112,"column":21}},"36":{"start":{"line":116,"column":0},"end":{"line":149,"column":1}},"37":{"start":{"line":117,"column":2},"end":{"line":118,"column":26}},"38":{"start":{"line":120,"column":2},"end":{"line":120,"column":120}},"39":{"start":{"line":120,"column":37},"end":{"line":120,"column":120}},"40":{"start":{"line":122,"column":2},"end":{"line":122,"column":43}},"41":{"start":{"line":124,"column":2},"end":{"line":124,"column":159}},"42":{"start":{"line":124,"column":44},"end":{"line":124,"column":159}},"43":{"start":{"line":126,"column":2},"end":{"line":128,"column":30}},"44":{"start":{"line":130,"column":2},"end":{"line":130,"column":18}},"45":{"start":{"line":132,"column":2},"end":{"line":146,"column":3}},"46":{"start":{"line":133,"column":4},"end":{"line":134,"column":34}},"47":{"start":{"line":136,"column":4},"end":{"line":145,"column":5}},"48":{"start":{"line":137,"column":6},"end":{"line":137,"column":29}},"49":{"start":{"line":139,"column":6},"end":{"line":141,"column":7}},"50":{"start":{"line":140,"column":8},"end":{"line":140,"column":53}},"51":{"start":{"line":141,"column":7},"end":{"line":141,"column":66}},"52":{"start":{"line":141,"column":34},"end":{"line":141,"column":66}},"53":{"start":{"line":143,"column":6},"end":{"line":143,"column":30}},"54":{"start":{"line":144,"column":6},"end":{"line":144,"column":41}},"55":{"start":{"line":148,"column":2},"end":{"line":148,"column":14}},"56":{"start":{"line":150,"column":0},"end":{"line":150,"column":36}},"57":{"start":{"line":151,"column":0},"end":{"line":151,"column":45}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"3":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":19}},{"start":{"line":59,"column":23},"end":{"line":59,"column":25}}]},"4":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":11},"end":{"line":61,"column":25}},{"start":{"line":61,"column":29},"end":{"line":61,"column":44}}]},"5":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":23}},{"start":{"line":62,"column":27},"end":{"line":62,"column":39}}]},"6":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":6}},{"start":{"line":93,"column":6},"end":{"line":93,"column":6}}]},"7":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":8}},{"start":{"line":106,"column":8},"end":{"line":106,"column":8}}]},"8":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":2},"end":{"line":120,"column":2}},{"start":{"line":120,"column":2},"end":{"line":120,"column":2}}]},"9":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"10":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":43},"end":{"line":140,"column":46}},{"start":{"line":140,"column":49},"end":{"line":140,"column":51}}]},"11":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":7},"end":{"line":141,"column":7}},{"start":{"line":141,"column":7},"end":{"line":141,"column":7}}]},"12":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":16},"end":{"line":143,"column":23}},{"start":{"line":143,"column":27},"end":{"line":143,"column":29}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.default = createMinHash;","exports.binning = binning;","","var _crc = require('./crc32');","","var _crc2 = _interopRequireDefault(_crc);","","var _random = require('pandemonium/random');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// TODO: cleanup the type specification to be able to return an Int32Array","// rather than what I feel seems to be buggy.","","// TODO: seems to be possible to use some XOR optimization to compute random","// hashes faster beyound first one.","","/**"," * Constants."," */","/**"," * Talisman hash/minhash"," * ======================"," *"," * JavaScript implementation of the MinHash signature."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/MinHash"," *"," * [Article]:"," * Broder, Andrei Z. (1997), \"On the resemblance and containment of documents\","," * Compression and Complexity of Sequences: Proceedings, Positano,"," * Amalfitan Coast, Salerno, Italy, June 11-13, 1997."," */","var MAX_I32 = Math.pow(2, 32) - 1,","    NEXT_PRIME = 4294967311;","","/**"," * Defaults."," */","var DEFAULTS = {","  hashes: 128,","  rng: Math.random","};","","/**"," * Factory creating the hashing function."," *"," * @param  {object}   options  - Options:"," * @param  {number}     hashes - Number of hashes of the produced signature."," * @return {function}          - The hash function."," */","function createMinHash(options) {","  options = options || {};","","  var pi = options.hashes || DEFAULTS.hashes,","      rng = options.rng || DEFAULTS.rng,","      random = (0, _random.createRandom)(rng);","","  // Picking random coefficient & numbers","  var A = new Set(),","      B = new Set();","","  while (A.size < pi) {","    A.add(random(0, MAX_I32));","  }while (B.size < pi) {","    B.add(random(0, MAX_I32));","  }A = Array.from(A);","  B = Array.from(B);","","  /**","   * Function returning the MinHash signature for the given sequence. If the","   * sequence is a string, tokens will be mapped to char codes while if the","   * sequence is an array of arbitrary strings, the tokens will be mapped to","   * CRC32 hashes.","   *","   * @param  {string|array} sequence - Target sequence.","   * @return {array}                 - The MinHash signature.","   */","  return function (sequence) {","    var tokens = {},","        isString = typeof sequence === 'string';","","    // Keeping track of unique tokens","    for (var i = 0, l = sequence.length; i < l; i++) {","","      // Using char code if hashing","      if (isString) tokens[sequence.charCodeAt(i)] = true;else tokens[(0, _crc2.default)(sequence[i]) & 0xffffffff] = true;","    }","","    // Creating the signature","    var signature = new Float64Array(pi);","","    for (var _i = 0; _i < pi; _i++) {","      var min = Infinity;","","      // Iterating over tokens & keeping track of min","      for (var token in tokens) {","        var hash = (A[_i] * token + B[_i]) % NEXT_PRIME;","","        if (hash < min) min = hash;","      }","","      signature[_i] = min;","    }","","    return signature;","  };","}","","function binning(options, items) {","  var minhash = options.minhash,","      rows = options.rows;","","  if (typeof minhash !== 'function') throw new Error('talisman/hash/minhash#binning: given minhash is not a function.');","","  var typicalSignature = minhash(items[0]);","","  if (typicalSignature.length % rows !== 0) throw new Error('talisman/hash/minhash#binning: the size of your minhash signatures should be divisible by rows.');","","  var bins = new Array(items.length),","      bands = typicalSignature.length / rows,","      identifiers = new Map();","","  var integer = 0;","","  for (var i = 0, l = items.length; i < l; i++) {","    var item = items[i],","        signature = minhash(item);","","    for (var j = 0; j < bands; j++) {","      var key = '' + j + '§';","","      for (var k = j * rows, m = (j + 1) * rows; k < m; k++) {","        key += signature[k] + (k < m - 1 ? '$' : '');","      }if (!identifiers.has(key)) identifiers.set(key, integer++);","","      bins[i] = bins[i] || [];","      bins[i].push(identifiers.get(key));","    }","  }","","  return bins;","}","module.exports = exports['default'];","exports['default'].binning = exports.binning;"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"40":1,"46":1,"58":1,"59":0,"61":0,"66":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"85":0,"86":0,"90":0,"93":0,"97":0,"99":0,"100":0,"103":0,"104":0,"106":0,"109":0,"112":0,"116":1,"117":0,"120":0,"122":0,"124":0,"126":0,"130":0,"132":0,"133":0,"136":0,"137":0,"139":0,"140":0,"141":0,"143":0,"144":0,"148":0,"150":1,"151":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/helpers/matrices.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/helpers/matrices.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"mat","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":19}}},"2":{"name":"transpose","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":18}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"4":{"start":{"line":22,"column":0},"end":{"line":28,"column":1}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":28}},"6":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":29}},"8":{"start":{"line":27,"column":3},"end":{"line":27,"column":17}},"9":{"start":{"line":36,"column":0},"end":{"line":51,"column":1}},"10":{"start":{"line":37,"column":2},"end":{"line":38,"column":27}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":32}},"12":{"start":{"line":42,"column":2},"end":{"line":48,"column":3}},"13":{"start":{"line":43,"column":4},"end":{"line":43,"column":33}},"14":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"15":{"start":{"line":46,"column":6},"end":{"line":46,"column":38}},"16":{"start":{"line":50,"column":2},"end":{"line":50,"column":20}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.mat = mat;","exports.transpose = transpose;","/**"," * Talisman helpers/matrices"," * =========================="," *"," * Compilation of various helpers to deal with matrices."," */","","/**"," * Function creating a matrix of m lines & n columns."," *"," * @param  {number} m    - Number of lines."," * @param  {number} n    - Number of columns."," * @return {array}       - The resulting matrix."," */","function mat(m, n) {","  var matrix = new Array(m);","","  for (var i = 0; i < m; i++) {","    matrix[i] = new Array(n);","  }return matrix;","}","","/**"," * Function transposing the given matrix."," *"," * @param  {array} target - The target matrix."," * @return {array}        - The transposed matrix."," */","function transpose(target) {","  var m = target.length,","      n = target[0].length;","","  var transposed = new Array(n);","","  for (var j = 0; j < n; j++) {","    transposed[j] = new Array(m);","","    for (var i = 0; i < m; i++) {","      transposed[j][i] = target[i][j];","    }","  }","","  return transposed;","}"],"l":{"3":1,"6":1,"7":1,"22":1,"23":0,"25":0,"26":0,"27":0,"36":1,"37":0,"40":0,"42":0,"43":0,"45":0,"46":0,"50":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyers/fingerprint.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyers/fingerprint.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":2,"11":2,"12":2,"13":1,"14":0,"15":1,"16":0,"17":1,"18":1,"19":1,"20":0,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1},"b":{"1":[0,1],"2":[1,1],"3":[2,1],"4":[1,1]},"f":{"1":1,"2":2,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"createKeyer","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":29},"end":{"line":28,"column":50}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":9},"end":{"line":32,"column":27}}},"5":{"name":"nameFingerprint","line":42,"loc":{"start":{"line":42,"column":22},"end":{"line":42,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":64}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":56}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":54}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"8":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"9":{"start":{"line":23,"column":0},"end":{"line":35,"column":1}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":26}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":61}},"12":{"start":{"line":28,"column":2},"end":{"line":30,"column":4}},"13":{"start":{"line":28,"column":22},"end":{"line":30,"column":4}},"14":{"start":{"line":29,"column":4},"end":{"line":29,"column":41}},"15":{"start":{"line":32,"column":2},"end":{"line":34,"column":4}},"16":{"start":{"line":33,"column":4},"end":{"line":33,"column":39}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":32}},"18":{"start":{"line":40,"column":0},"end":{"line":40,"column":54}},"19":{"start":{"line":42,"column":0},"end":{"line":44,"column":2}},"20":{"start":{"line":43,"column":2},"end":{"line":43,"column":45}},"21":{"start":{"line":46,"column":0},"end":{"line":46,"column":46}},"22":{"start":{"line":47,"column":0},"end":{"line":47,"column":42}},"23":{"start":{"line":48,"column":0},"end":{"line":48,"column":36}},"24":{"start":{"line":49,"column":0},"end":{"line":49,"column":53}},"25":{"start":{"line":50,"column":0},"end":{"line":50,"column":65}},"26":{"start":{"line":51,"column":0},"end":{"line":51,"column":61}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":19}},{"start":{"line":24,"column":23},"end":{"line":24,"column":25}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.nameFingerprint = exports.ngramsFingerprint = undefined;","exports.createKeyer = createKeyer;","","var _fingerprint = require('../tokenizers/fingerprint');","","var _name = require('../tokenizers/fingerprint/name');","","var _name2 = _interopRequireDefault(_name);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Talisman keyers/fingerprint"," * ============================"," *"," * Keyer based on the fingerprint tokenizer."," */","function createKeyer(options) {","  options = options || {};","","  var tokenizer = (0, _fingerprint.createTokenizer)(options);","","  if (options.ngrams) return function (n, string) {","    return tokenizer(n, string).join('');","  };","","  return function (string) {","    return tokenizer(string).join(' ');","  };","}","","exports.default = createKeyer();","","","var ngramsFingerprint = createKeyer({ ngrams: true });","","var nameFingerprint = function nameFingerprint(name) {","  return (0, _name2.default)(name).join(' ');","};","","exports.ngramsFingerprint = ngramsFingerprint;","exports.nameFingerprint = nameFingerprint;","module.exports = exports['default'];","exports['default'].createKeyer = exports.createKeyer;","exports['default'].ngramsFingerprint = exports.ngramsFingerprint;","exports['default'].nameFingerprint = exports.nameFingerprint;"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"23":1,"24":2,"26":2,"28":2,"29":0,"32":1,"33":0,"37":1,"40":1,"42":1,"43":0,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/fingerprint/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/fingerprint/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":3,"13":1,"14":1,"15":1,"16":5,"17":5,"18":5,"19":5,"20":1,"21":19,"22":5,"23":5,"24":1,"25":5,"26":5,"27":0,"28":5,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":1,"53":1,"54":1,"55":1},"b":{"1":[0,3],"2":[3,3],"3":[5,1],"4":[5,3],"5":[5,4],"6":[5,5],"7":[5,4],"8":[1,4],"9":[5,4],"10":[1,4],"11":[0,5],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":3,"2":5,"3":19,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"createTokenizer","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":34}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":62},"end":{"line":74,"column":78}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":87,"column":9},"end":{"line":87,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":47}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":35}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":35}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":47}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"12":{"start":{"line":23,"column":39},"end":{"line":23,"column":93}},"13":{"start":{"line":36,"column":0},"end":{"line":38,"column":145}},"14":{"start":{"line":43,"column":0},"end":{"line":50,"column":2}},"15":{"start":{"line":63,"column":0},"end":{"line":128,"column":1}},"16":{"start":{"line":64,"column":2},"end":{"line":64,"column":26}},"17":{"start":{"line":66,"column":2},"end":{"line":69,"column":40}},"18":{"start":{"line":71,"column":2},"end":{"line":71,"column":58}},"19":{"start":{"line":74,"column":2},"end":{"line":76,"column":28}},"20":{"start":{"line":74,"column":17},"end":{"line":76,"column":28}},"21":{"start":{"line":75,"column":4},"end":{"line":75,"column":59}},"22":{"start":{"line":78,"column":2},"end":{"line":78,"column":46}},"23":{"start":{"line":81,"column":2},"end":{"line":81,"column":92}},"24":{"start":{"line":81,"column":13},"end":{"line":81,"column":92}},"25":{"start":{"line":83,"column":2},"end":{"line":83,"column":26}},"26":{"start":{"line":84,"column":2},"end":{"line":84,"column":90}},"27":{"start":{"line":84,"column":24},"end":{"line":84,"column":90}},"28":{"start":{"line":87,"column":2},"end":{"line":127,"column":4}},"29":{"start":{"line":89,"column":4},"end":{"line":89,"column":36}},"30":{"start":{"line":89,"column":25},"end":{"line":89,"column":36}},"31":{"start":{"line":92,"column":4},"end":{"line":92,"column":51}},"32":{"start":{"line":92,"column":15},"end":{"line":92,"column":51}},"33":{"start":{"line":95,"column":4},"end":{"line":95,"column":58}},"34":{"start":{"line":95,"column":19},"end":{"line":95,"column":58}},"35":{"start":{"line":98,"column":4},"end":{"line":98,"column":57}},"36":{"start":{"line":98,"column":21},"end":{"line":98,"column":57}},"37":{"start":{"line":101,"column":4},"end":{"line":101,"column":34}},"38":{"start":{"line":104,"column":4},"end":{"line":104,"column":60}},"39":{"start":{"line":104,"column":20},"end":{"line":104,"column":60}},"40":{"start":{"line":107,"column":4},"end":{"line":107,"column":53}},"41":{"start":{"line":110,"column":4},"end":{"line":110,"column":43}},"42":{"start":{"line":113,"column":4},"end":{"line":113,"column":27}},"43":{"start":{"line":116,"column":4},"end":{"line":116,"column":24}},"44":{"start":{"line":118,"column":4},"end":{"line":118,"column":130}},"45":{"start":{"line":118,"column":25},"end":{"line":118,"column":59}},"46":{"start":{"line":118,"column":64},"end":{"line":118,"column":130}},"47":{"start":{"line":121,"column":4},"end":{"line":121,"column":41}},"48":{"start":{"line":124,"column":4},"end":{"line":124,"column":33}},"49":{"start":{"line":124,"column":19},"end":{"line":124,"column":33}},"50":{"start":{"line":126,"column":4},"end":{"line":126,"column":18}},"51":{"start":{"line":130,"column":0},"end":{"line":130,"column":36}},"52":{"start":{"line":131,"column":0},"end":{"line":131,"column":86}},"53":{"start":{"line":132,"column":0},"end":{"line":132,"column":36}},"54":{"start":{"line":133,"column":0},"end":{"line":133,"column":61}},"55":{"start":{"line":134,"column":0},"end":{"line":134,"column":65}}},"branchMap":{"1":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":92}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}]},"3":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":19}},{"start":{"line":64,"column":23},"end":{"line":64,"column":25}}]},"4":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":23},"end":{"line":66,"column":37}},{"start":{"line":66,"column":41},"end":{"line":66,"column":56}}]},"5":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":20},"end":{"line":67,"column":44}},{"start":{"line":67,"column":48},"end":{"line":67,"column":64}}]},"6":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":21},"end":{"line":68,"column":41}},{"start":{"line":68,"column":45},"end":{"line":68,"column":66}}]},"7":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":18},"end":{"line":71,"column":35}},{"start":{"line":71,"column":39},"end":{"line":71,"column":57}}]},"8":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"9":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":14},"end":{"line":78,"column":27}},{"start":{"line":78,"column":31},"end":{"line":78,"column":45}}]},"10":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"11":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"12":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"13":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"14":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"15":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"16":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"17":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"18":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.ngramsFingerprint = undefined;","exports.createTokenizer = createTokenizer;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","var _uniq = require('lodash/uniq');","","var _uniq2 = _interopRequireDefault(_uniq);","","var _ngrams = require('../ngrams');","","var _ngrams2 = _interopRequireDefault(_ngrams);","","var _regexp = require('../../regexp');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Constants."," */","/* eslint no-control-regex: 0 */","/**"," * Talisman tokenizers/fingerprint"," * ================================"," *"," * Fingerprint tokenizer aiming at outputing meaningful sorted tokens for the"," * given string which can later be used for similarity measures."," */","var WHITESPACE = /\\s+/g,","    DIGITS = /\\d/g,","    PUNCTUATION_CONTROL = new RegExp('[\\\\u2000-\\\\u206F\\\\u2E00-\\\\u2E7F\\'!\"#$%&()*+,\\\\-.\\\\/:;<=>?@\\\\[\\\\]^_`{|}~\\\\x00-\\\\x08\\\\x0A-\\\\x1F\\\\x7F]', 'g');","","/**"," * Defaults."," */","var DEFAULTS = {","  digits: true,","  minTokenSize: 1,","  ngrams: false,","  sort: true,","  split: null,","  stopwords: null","};","","/**"," * Tokenizer function factory aiming at building the required function."," *"," * @param  {object}   options        - Possible options:"," * @param  {boolean}    digits       - Whether to keep digits."," * @param  {number}     minTokenSize - Minimum token size."," * @param  {number}     ngrams       - Tokenize ngrams rather than words."," * @param  {array}      split        - List of token-splitting characters."," * @param  {array}      stopwords    - List of stopwords."," * @return {function}                - The tokenizer function."," */","function createTokenizer(options) {","  options = options || {};","","  var ngramsTokenize = options.ngrams || DEFAULTS.ngrams,","      stripDigits = options.digits === false || !DEFAULTS.digits,","      minTokenSize = options.minTokenSize || DEFAULTS.minTokenSize,","      dontSort = options.sort === false;","","  var stopwords = options.stopwords || DEFAULTS.stopwords;","","  // Compiling stopwords","  if (stopwords) stopwords = new RegExp('(?:' + stopwords.map(function (word) {","    return '\\\\b' + (0, _regexp.escapeRegexp)(word) + '\\\\b';","  }).join('|') + ')', 'gi');","","  var split = options.split || DEFAULTS.split;","","  // Compiling split","  if (split) split = new RegExp('[' + (0, _regexp.escapeRegexp)(split.join('')) + ']', 'g');","","  var sizeFilter = void 0;","  if (minTokenSize > 1) sizeFilter = new RegExp('\\\\b\\\\S{1,' + minTokenSize + '}\\\\b', 'g');","","  // Returning the function","  return function (n, string) {","","    if (!ngramsTokenize) string = n;","","    //-- Splitting","    if (split) string = string.replace(split, ' ');","","    //-- Stopwords","    if (stopwords) string = string.replace(stopwords, '');","","    //-- Digits","    if (stripDigits) string = string.replace(DIGITS, '');","","    //-- Case normalization","    string = string.toLowerCase();","","    //-- Minimum token size","    if (sizeFilter) string = string.replace(sizeFilter, '');","","    //-- Dropping punctuation & control characters","    string = string.replace(PUNCTUATION_CONTROL, '');","","    //-- Deburring","    string = (0, _deburr2.default)(string);","","    //-- Trimming","    string = string.trim();","","    //-- Tokenizing","    var tokens = void 0;","","    if (!ngramsTokenize) tokens = string.split(WHITESPACE);else tokens = (0, _ngrams2.default)(n, string.replace(WHITESPACE, ''));","","    //-- Keeping only unique tokens","    tokens = (0, _uniq2.default)(tokens);","","    //-- Sorting tokens","    if (!dontSort) tokens.sort();","","    return tokens;","  };","}","","exports.default = createTokenizer();","var ngramsFingerprint = exports.ngramsFingerprint = createTokenizer({ ngrams: true });","module.exports = exports['default'];","exports['default'].createTokenizer = exports.createTokenizer;","exports['default'].ngramsFingerprint = exports.ngramsFingerprint;"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":3,"36":1,"43":1,"63":1,"64":5,"66":5,"71":5,"74":5,"75":19,"78":5,"81":5,"83":5,"84":5,"87":5,"89":0,"92":0,"95":0,"98":0,"101":0,"104":0,"107":0,"110":0,"113":0,"116":0,"118":0,"121":0,"124":0,"126":0,"130":1,"131":1,"132":1,"133":1,"134":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/ngrams/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/ngrams/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"ngrams","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":25,"column":0},"end":{"line":41,"column":1}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":105}},"5":{"start":{"line":26,"column":13},"end":{"line":26,"column":105}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":46}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}},"8":{"start":{"line":32,"column":2},"end":{"line":38,"column":3}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":25}},"10":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"11":{"start":{"line":36,"column":6},"end":{"line":36,"column":40}},"12":{"start":{"line":37,"column":5},"end":{"line":37,"column":70}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":22}},"14":{"start":{"line":46,"column":0},"end":{"line":48,"column":39}},"15":{"start":{"line":50,"column":0},"end":{"line":50,"column":26}},"16":{"start":{"line":51,"column":0},"end":{"line":51,"column":28}},"17":{"start":{"line":52,"column":0},"end":{"line":52,"column":34}},"18":{"start":{"line":53,"column":0},"end":{"line":53,"column":36}},"19":{"start":{"line":54,"column":0},"end":{"line":54,"column":45}},"20":{"start":{"line":55,"column":0},"end":{"line":55,"column":47}},"21":{"start":{"line":56,"column":0},"end":{"line":56,"column":53}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":34},"end":{"line":37,"column":54}},{"start":{"line":37,"column":57},"end":{"line":37,"column":68}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.default = ngrams;","/**"," * Talisman tokenizers/ngrams"," * ==========================="," *"," * Functions related to ngrams' computation."," *"," * [Reference]: https://en.wikipedia.org/wiki/N-gram"," */","","/**"," * Function taking a sequence and computing its ngrams."," *"," * @param  {number}   n         - Nb of elements in the subsequence."," * @param  {mixed}    sequence  - The sequence to process."," * @return {array}              - The array of resulting ngrams."," *"," * @throws {Error} The function expects a positive n > 0."," */","function ngrams(n, sequence) {","  if (n < 1) throw Error('talisman/tokenizers/ngrams: first argument should be a positive integer > 0.');","","  var isString = typeof sequence === 'string';","","  var subsequences = [];","","  for (var i = 0, l = sequence.length; i < l - n + 1; i++) {","    var subsequence = [];","","    for (var j = 0; j < n; j++) {","      subsequence.push(sequence[i + j]);","    }subsequences.push(isString ? subsequence.join('') : subsequence);","  }","","  return subsequences;","}","","/**"," * Creating popular aliases."," */","var bigrams = ngrams.bind(null, 2),","    trigrams = ngrams.bind(null, 3),","    quadrigrams = ngrams.bind(null, 4);","","exports.bigrams = bigrams;","exports.trigrams = trigrams;","exports.quadrigrams = quadrigrams;","module.exports = exports['default'];","exports['default'].bigrams = exports.bigrams;","exports['default'].trigrams = exports.trigrams;","exports['default'].quadrigrams = exports.quadrigrams;"],"l":{"3":1,"6":1,"25":1,"26":0,"28":0,"30":0,"32":0,"33":0,"35":0,"36":0,"37":0,"40":0,"46":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/regexp/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/regexp/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":20,"7":1,"8":0,"9":0},"b":{},"f":{"1":20,"2":0,"3":0},"fnMap":{"1":{"name":"escapeRegexp","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}}},"2":{"name":"createFuzzyPattern","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":35}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":29},"end":{"line":34,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"4":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"5":{"start":{"line":23,"column":0},"end":{"line":25,"column":1}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":36}},"7":{"start":{"line":33,"column":0},"end":{"line":37,"column":1}},"8":{"start":{"line":34,"column":2},"end":{"line":36,"column":17}},"9":{"start":{"line":35,"column":4},"end":{"line":35,"column":47}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.escapeRegexp = escapeRegexp;","exports.createFuzzyPattern = createFuzzyPattern;","/**"," * Talisman regexp"," * ================"," *"," * Some RegExp-related helpers."," */","","/**"," * Function escaping a string for insertion in a regular expression."," *"," * @param  {string} string - The string to escape."," * @return {string}        - The escaped string."," */","var RE = /([|\\\\{}()[\\]^$+*?.\\-])/g;","","function escapeRegexp(string) {","  return string.replace(RE, '\\\\$1');","}","","/**"," * Function creating a fuzzy matching pattern from the given query."," *"," * @param  {string} string - The string to escape."," * @return {string}        - The created pattern."," */","function createFuzzyPattern(query) {","  return query.split('').map(function (character) {","    return '(' + escapeRegexp(character) + ')';","  }).join('.*?');","}"],"l":{"3":1,"6":1,"7":1,"21":1,"23":1,"24":20,"33":1,"34":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/fingerprint/name.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/fingerprint/name.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"nameFingerprint","line":62,"loc":{"start":{"line":62,"column":0},"end":{"line":62,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":22}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"5":{"start":{"line":19,"column":0},"end":{"line":37,"column":14}},"6":{"start":{"line":39,"column":0},"end":{"line":52,"column":2}},"7":{"start":{"line":54,"column":0},"end":{"line":54,"column":48}},"8":{"start":{"line":62,"column":0},"end":{"line":69,"column":1}},"9":{"start":{"line":63,"column":2},"end":{"line":63,"column":28}},"10":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"11":{"start":{"line":67,"column":4},"end":{"line":67,"column":50}},"12":{"start":{"line":68,"column":3},"end":{"line":68,"column":48}},"13":{"start":{"line":70,"column":0},"end":{"line":70,"column":36}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = nameFingerprint;","","var _ = require('./');","","var _helpers = require('../../helpers');","","/**"," * Talisman tokenizers/fingerprint/name"," * ====================================="," *"," * Variant of the fingerprint tokenizer but with opinionated options and"," * transformations known to work better with occidental names."," */","var RULES = [","","// McCallister / MacCallister","[/\\bmc(?=\\w)/g, 'mac'], [/\\b(ma?c\\s+)(?=\\w)/g, 'mac'],","","// Lee / Li","[/\\blee\\b/g, 'li'],","","// Moussorgski / Moussorgsky","[/ski\\b/g, 'sky'],","","// Van Hoff / Von Hoff","[/\\bvan\\b/g, 'von'],","","// Doerk / Dörk","[/ö/g, 'oe'],","","// Düring / Duering","[/ü/g, 'ue']];","","var OPTIONS = {","  digits: false,","  split: ['-'],","  stopwords: [","","  // Articles","  'the', 'le', 'la',","","  // Title","  'dr', 'mgr', 'prof', 'md', 'phd', 'sir', 'lord',","","  // Civility","  'mr', 'mrs', 'ms', 'mme', 'mlle', 'jr', 'junior', 'sr', 'senior']","};","","var tokenizer = (0, _.createTokenizer)(OPTIONS);","","/**"," * Function returning the fingerprint of the given name."," *"," * @param  {string} name - Target name."," * @param  {array}"," */","function nameFingerprint(name) {","  name = name.toLowerCase();","","  // Applying rules","  for (var i = 0, l = RULES.length; i < l; i++) {","    name = name.replace(RULES[i][0], RULES[i][1]);","  }return tokenizer(name).map(_helpers.squeeze);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"19":1,"39":1,"54":1,"62":1,"63":0,"66":0,"67":0,"68":0,"70":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/helpers/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/helpers/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":6,"28":6,"29":6,"30":6,"31":0,"32":6,"33":145,"34":6},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,6]},"f":{"1":0,"2":0,"3":0,"4":6},"fnMap":{"1":{"name":"findall","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":34}}},"2":{"name":"seq","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":21}}},"3":{"name":"squeeze","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":25}}},"4":{"name":"translation","line":84,"loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"6":{"start":{"line":26,"column":0},"end":{"line":44,"column":1}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":19}},"8":{"start":{"line":29,"column":2},"end":{"line":35,"column":3}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":38}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":37}},"11":{"start":{"line":32,"column":16},"end":{"line":32,"column":37}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":19}},"13":{"start":{"line":37,"column":2},"end":{"line":37,"column":21}},"14":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":24}},"16":{"start":{"line":41,"column":2},"end":{"line":41,"column":24}},"17":{"start":{"line":43,"column":2},"end":{"line":43,"column":17}},"18":{"start":{"line":52,"column":0},"end":{"line":54,"column":1}},"19":{"start":{"line":53,"column":2},"end":{"line":53,"column":64}},"20":{"start":{"line":65,"column":0},"end":{"line":75,"column":1}},"21":{"start":{"line":66,"column":2},"end":{"line":68,"column":31}},"22":{"start":{"line":70,"column":2},"end":{"line":72,"column":3}},"23":{"start":{"line":71,"column":4},"end":{"line":71,"column":68}},"24":{"start":{"line":71,"column":41},"end":{"line":71,"column":68}},"25":{"start":{"line":74,"column":2},"end":{"line":74,"column":49}},"26":{"start":{"line":84,"column":0},"end":{"line":95,"column":1}},"27":{"start":{"line":85,"column":2},"end":{"line":85,"column":17}},"28":{"start":{"line":87,"column":2},"end":{"line":87,"column":26}},"29":{"start":{"line":88,"column":2},"end":{"line":88,"column":28}},"30":{"start":{"line":90,"column":2},"end":{"line":90,"column":126}},"31":{"start":{"line":90,"column":38},"end":{"line":90,"column":126}},"32":{"start":{"line":92,"column":2},"end":{"line":94,"column":3}},"33":{"start":{"line":93,"column":4},"end":{"line":93,"column":32}},"34":{"start":{"line":94,"column":3},"end":{"line":94,"column":16}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"3":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":38},"end":{"line":53,"column":54}},{"start":{"line":53,"column":57},"end":{"line":53,"column":63}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"5":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":20},"end":{"line":74,"column":37}},{"start":{"line":74,"column":40},"end":{"line":74,"column":48}}]},"6":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.findall = findall;","exports.seq = seq;","exports.squeeze = squeeze;","exports.translation = translation;","/* eslint no-cond-assign: 0 */","/**"," * Talisman helpers"," * ================="," *"," * Miscellaneous helper functions."," */","","/**"," * Function returning all the matches of a regular expression over the given"," * string."," *"," * @param  {RegExp} pattern - The regular expression to apply."," * @param  {string} string  - The string to match."," * @return {array}          - An array of matches."," */","function findall(pattern, string) {","  var matches = [];","","  if (!pattern.global) {","    var result = pattern.exec(string);","","    if (result) matches.push(result);","","    return matches;","  }","","  var match = void 0;","  while (match = pattern.exec(string)) {","    matches.push(match);","  } // Resetting state of the Regex for safety","  pattern.lastIndex = 0;","","  return matches;","}","","/**"," * Function normalizing the given variable into a proper array sequence."," *"," * @param  {mixed} target - The variable to normalize as a sequence."," * @return {array}        - The resulting sequence."," */","function seq(target) {","  return typeof target === 'string' ? target.split('') : target;","}","","/**"," * Function squeezing the given sequence by dropping consecutive duplicates."," *"," * Note: the name was actually chosen to mimic Ruby's naming since I did not"," * find any equivalent in other standard libraries."," *"," * @param  {mixed} target - The sequence to squeeze."," * @return {array}        - The resulting sequence."," */","function squeeze(target) {","  var isString = typeof target === 'string',","      sequence = seq(target),","      squeezed = [sequence[0]];","","  for (var i = 1, l = sequence.length; i < l; i++) {","    if (sequence[i] !== sequence[i - 1]) squeezed.push(sequence[i]);","  }","","  return isString ? squeezed.join('') : squeezed;","}","","/**"," * Function creating an index of mapped letters."," *"," * @param  {string} first  - First letters."," * @param  {string} second - Second letters."," * @return {object}        - The resulting index."," */","function translation(first, second) {","  var index = {};","","  first = first.split('');","  second = second.split('');","","  if (first.length !== second.length) throw Error('talisman/helpers#translation: given strings don\\'t have the same length.');","","  for (var i = 0, l = first.length; i < l; i++) {","    index[first[i]] = second[i];","  }return index;","}"],"l":{"3":1,"6":1,"7":1,"8":1,"9":1,"26":1,"27":0,"29":0,"30":0,"32":0,"34":0,"37":0,"38":0,"39":0,"41":0,"43":0,"52":1,"53":0,"65":1,"66":0,"70":0,"71":0,"74":0,"84":1,"85":6,"87":6,"88":6,"90":6,"92":6,"93":145,"94":6}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyers/name-power-set.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyers/name-power-set.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":3,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0],"5":[0,3],"6":[3,3],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":3,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":84},"end":{"line":7,"column":99}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":124},"end":{"line":7,"column":139}}},"3":{"name":"_interopRequireDefault","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":37}}},"4":{"name":"expand","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":24}}},"5":{"name":"permutations","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":28}}},"6":{"name":"namePowerSet","line":100,"loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":28}}},"7":{"name":"(anonymous_7)","line":110,"loc":{"start":{"line":110,"column":82},"end":{"line":110,"column":97}}},"8":{"name":"(anonymous_8)","line":120,"loc":{"start":{"line":120,"column":24},"end":{"line":120,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":269}},"3":{"start":{"line":7,"column":101},"end":{"line":7,"column":119}},"4":{"start":{"line":7,"column":141},"end":{"line":7,"column":266}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":31}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":44}},"7":{"start":{"line":21,"column":0},"end":{"line":21,"column":59}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":43}},"10":{"start":{"line":27,"column":0},"end":{"line":27,"column":44}},"11":{"start":{"line":29,"column":0},"end":{"line":29,"column":45}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":95}},"13":{"start":{"line":31,"column":39},"end":{"line":31,"column":93}},"14":{"start":{"line":45,"column":0},"end":{"line":51,"column":1}},"15":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":68}},"17":{"start":{"line":47,"column":30},"end":{"line":47,"column":68}},"18":{"start":{"line":50,"column":2},"end":{"line":50,"column":16}},"19":{"start":{"line":59,"column":0},"end":{"line":92,"column":1}},"20":{"start":{"line":60,"column":2},"end":{"line":60,"column":19}},"21":{"start":{"line":62,"column":2},"end":{"line":89,"column":3}},"22":{"start":{"line":63,"column":4},"end":{"line":63,"column":26}},"23":{"start":{"line":65,"column":4},"end":{"line":88,"column":5}},"24":{"start":{"line":68,"column":6},"end":{"line":70,"column":7}},"25":{"start":{"line":69,"column":8},"end":{"line":69,"column":37}},"26":{"start":{"line":71,"column":6},"end":{"line":71,"column":49}},"27":{"start":{"line":73,"column":6},"end":{"line":82,"column":7}},"28":{"start":{"line":74,"column":8},"end":{"line":74,"column":35}},"29":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"30":{"start":{"line":77,"column":10},"end":{"line":77,"column":48}},"31":{"start":{"line":78,"column":10},"end":{"line":78,"column":14}},"32":{"start":{"line":81,"column":8},"end":{"line":81,"column":14}},"33":{"start":{"line":85,"column":6},"end":{"line":87,"column":7}},"34":{"start":{"line":86,"column":8},"end":{"line":86,"column":33}},"35":{"start":{"line":91,"column":2},"end":{"line":91,"column":15}},"36":{"start":{"line":100,"column":0},"end":{"line":127,"column":1}},"37":{"start":{"line":103,"column":2},"end":{"line":103,"column":66}},"38":{"start":{"line":103,"column":32},"end":{"line":103,"column":66}},"39":{"start":{"line":106,"column":2},"end":{"line":106,"column":48}},"40":{"start":{"line":108,"column":2},"end":{"line":108,"column":41}},"41":{"start":{"line":108,"column":25},"end":{"line":108,"column":41}},"42":{"start":{"line":110,"column":2},"end":{"line":112,"column":35}},"43":{"start":{"line":111,"column":4},"end":{"line":111,"column":26}},"44":{"start":{"line":114,"column":2},"end":{"line":114,"column":25}},"45":{"start":{"line":116,"column":2},"end":{"line":124,"column":3}},"46":{"start":{"line":117,"column":4},"end":{"line":117,"column":26}},"47":{"start":{"line":119,"column":4},"end":{"line":123,"column":5}},"48":{"start":{"line":120,"column":6},"end":{"line":122,"column":37}},"49":{"start":{"line":121,"column":8},"end":{"line":121,"column":32}},"50":{"start":{"line":122,"column":10},"end":{"line":122,"column":37}},"51":{"start":{"line":126,"column":2},"end":{"line":126,"column":23}},"52":{"start":{"line":128,"column":0},"end":{"line":128,"column":36}}},"branchMap":{"1":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":84},"end":{"line":7,"column":121}},{"start":{"line":7,"column":124},"end":{"line":7,"column":268}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":14},"end":{"line":7,"column":42}},{"start":{"line":7,"column":46},"end":{"line":7,"column":81}}]},"3":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":244},"end":{"line":7,"column":252}},{"start":{"line":7,"column":255},"end":{"line":7,"column":265}}]},"4":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":148},"end":{"line":7,"column":151}},{"start":{"line":7,"column":155},"end":{"line":7,"column":183}},{"start":{"line":7,"column":187},"end":{"line":7,"column":213}},{"start":{"line":7,"column":217},"end":{"line":7,"column":241}}]},"5":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":70},"end":{"line":31,"column":73}},{"start":{"line":31,"column":76},"end":{"line":31,"column":92}}]},"6":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":46},"end":{"line":31,"column":49}},{"start":{"line":31,"column":53},"end":{"line":31,"column":67}}]},"7":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"8":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"9":{"line":65,"type":"cond-expr","locations":[{"start":{"line":65,"column":42},"end":{"line":65,"column":53}},{"start":{"line":65,"column":56},"end":{"line":65,"column":72}}]},"10":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"11":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"12":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":6}},{"start":{"line":120,"column":6},"end":{"line":120,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**","                                                                                                                                                                                                                                                                               * Talisman keyers/name-power-seteyer returning an opinionated power set of what might be the ways to","                                                                                                                                                                                                                                                                               * write the given name so that one can try to perform fuzzy matching on","                                                                                                                                                                                                                                                                               * partial names such as \"P. Henry\" & \"Philip Henry\", for instance.","                                                                                                                                                                                                                                                                               */","","","exports.default = namePowerSet;","","var _generatorics = require('generatorics');","","var _generatorics2 = _interopRequireDefault(_generatorics);","","var _uniq = require('lodash/uniq');","","var _uniq2 = _interopRequireDefault(_uniq);","","var _words = require('../tokenizers/words');","","var _words2 = _interopRequireDefault(_words);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// TODO: option for full initials? (else if solution involves only abbrev, we skip)","// TODO: disallow single token (on option)","// TODO: option to skip or not","// TODO: possibility to pass tokens rather than a string","// TODO: tweak power set token number threshold (heuristic function genre n or n - 1 etc.)","","/**"," * Function expanding token by multiplexing tokens that are not initials."," *"," * @param  {array} tokens - List of tokens."," * @param  {array}"," */","function expand(tokens) {","  for (var i = 0, l = tokens.length; i < l; i++) {","    if (tokens[i].length > 1) tokens[i] = [tokens[i], tokens[i][0]];","  }","","  return tokens;","}","","/**"," * Permutation helper that will expand token possibilities."," *"," * @param  {array} code - List of possibly expanded tokens."," * @param  {array}"," */","function permutations(code) {","  var codes = [[]];","","  for (var i = 0, l = code.length; i < l; i++) {","    var current = code[i];","","    if ((typeof current === 'undefined' ? 'undefined' : _typeof(current)) === 'object') {","","      // Doubling the codes","      for (var j = 0, m = codes.length * (current.length - 1); j < m; j++) {","        codes.push(codes[j].slice());","      } // Filling the codes","      var offset = codes.length / current.length;","","      for (var _j = 0, k = 0, _m = current.length; _j < _m; _j++) {","        var encoding = current[_j];","","        while (k < offset) {","          codes[k + _j * offset].push(encoding);","          k++;","        }","","        k = 0;","      }","    } else {","","      for (var _j2 = 0, _m2 = codes.length; _j2 < _m2; _j2++) {","        codes[_j2].push(current);","      }","    }","  }","","  return codes;","}","","/**"," * Function returning the name power set."," *"," * @param  {string|array} name - Target name."," * @param  {array}"," */","function namePowerSet(name) {","","  // If the name is not yet tokenized, we do so","  if (typeof name === 'string') name = (0, _words2.default)(name);","","  // Gathering items which are the sorted unique tokens of the name","  var tokens = (0, _uniq2.default)(name).sort();","","  if (tokens.length < 2) return [tokens];","","  var powerSet = Array.from(_generatorics2.default.clone.powerSet(tokens)).filter(function (set) {","    return set.length > 1;","  }).map(expand).map(permutations);","","  var possibilities = [];","","  for (var i = 0, l = powerSet.length; i < l; i++) {","    var set = powerSet[i];","","    for (var j = 0, m = set.length; j < m; j++) {","      if (!set[j].every(function (token) {","        return token.length < 2;","      })) possibilities.push(set[j]);","    }","  }","","  return possibilities;","}","module.exports = exports['default'];"],"l":{"3":1,"7":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":3,"45":1,"46":0,"47":0,"50":0,"59":1,"60":0,"62":0,"63":0,"65":0,"68":0,"69":0,"71":0,"73":0,"74":0,"76":0,"77":0,"78":0,"81":0,"85":0,"86":0,"91":0,"100":1,"103":0,"106":0,"108":0,"110":0,"111":0,"114":0,"116":0,"117":0,"119":0,"120":0,"121":0,"122":0,"126":0,"128":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/words/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/words/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":45}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _naive = require('./naive');","","var _naive2 = _interopRequireDefault(_naive);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","exports.default = _naive2.default;","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"14":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/words/naive.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/words/naive.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":45}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":34}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":36}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _words = require('lodash/words');","","var _words2 = _interopRequireDefault(_words);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","exports.default = _words2.default; /**","                                    * Talisman tokenizers/words/naive","                                    * ================================","                                    *","                                    * Exporting the Lodash's words function for convenience.","                                    *","                                    * [Reference]: https://github.com/lodash/lodash","                                    */","","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"22":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyers/normalize.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyers/normalize.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":1},"b":{"1":[0,1],"2":[1,1],"3":[1,1],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":1,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"createNormalizer","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":34}}},"3":{"name":"normalizer","line":56,"loc":{"start":{"line":56,"column":9},"end":{"line":56,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":44}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":27,"column":0},"end":{"line":32,"column":36}},"9":{"start":{"line":34,"column":0},"end":{"line":34,"column":76}},"10":{"start":{"line":44,"column":0},"end":{"line":72,"column":1}},"11":{"start":{"line":45,"column":2},"end":{"line":45,"column":24}},"12":{"start":{"line":47,"column":2},"end":{"line":48,"column":42}},"13":{"start":{"line":56,"column":2},"end":{"line":71,"column":4}},"14":{"start":{"line":57,"column":4},"end":{"line":57,"column":49}},"15":{"start":{"line":57,"column":19},"end":{"line":57,"column":49}},"16":{"start":{"line":59,"column":4},"end":{"line":59,"column":196}},"17":{"start":{"line":61,"column":4},"end":{"line":66,"column":5}},"18":{"start":{"line":62,"column":6},"end":{"line":63,"column":42}},"19":{"start":{"line":65,"column":6},"end":{"line":65,"column":52}},"20":{"start":{"line":68,"column":4},"end":{"line":68,"column":61}},"21":{"start":{"line":68,"column":22},"end":{"line":68,"column":61}},"22":{"start":{"line":70,"column":4},"end":{"line":70,"column":18}},"23":{"start":{"line":74,"column":0},"end":{"line":74,"column":37}},"24":{"start":{"line":75,"column":0},"end":{"line":75,"column":36}},"25":{"start":{"line":76,"column":0},"end":{"line":76,"column":63}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":11},"end":{"line":45,"column":17}},{"start":{"line":45,"column":21},"end":{"line":45,"column":23}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.createNormalizer = createNormalizer;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","var _classes = require('../regexp/classes');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Regular expressions."," */","/* eslint no-control-regex: 0 */","/**"," * Talisman keyers/normalize"," * =========================="," *"," * Generic function used to normalize strings to make them a good basis for"," * fuzzy comparisons."," */","var CONTROL_CHARACTERS = new RegExp('[\\\\x00-\\\\x08\\\\x0A-\\\\x1F\\\\x7F]', 'g'),","    SINGLE_QUOTES = new RegExp('[' + _classes.SINGLE_QUOTES + ']', 'g'),","    DOUBLE_QUOTES = new RegExp('[' + _classes.DOUBLE_QUOTES + ']', 'g'),","    HYPHENS = new RegExp('[' + _classes.HYPHENS + ']', 'g'),","    COMMAS = new RegExp('[' + _classes.COMMAS + ']', 'g'),","    WHITESPACE_COMPRESSION = /\\s+/g;","","var CONVERSIONS = [[/…/g, '...'], [/æ/g, 'ae'], [/œ/g, 'oe'], [/ß/g, 'ss']];","","/**"," * Function creating a normalizer function."," *"," * @param  {object}  params        - Options:"," * @param  {boolean}   keepAccents - Whether to keep accents."," * @param  {boolean}   keepCase    - Whether to keep the case."," * @return {function}"," */","function createNormalizer(params) {","  params = params || {};","","  var keepAccents = params.keepAccents === true,","      keepCase = params.keepCase === true;","","  /**","   * Function returning a normalized string.","   *","   * @param  {string} string - String to normalize.","   * @return {string}","   */","  return function normalizer(string) {","    if (!keepCase) string = string.toLowerCase();","","    string = string.trim().replace(WHITESPACE_COMPRESSION, ' ').replace(CONTROL_CHARACTERS, '').replace(SINGLE_QUOTES, '\\'').replace(DOUBLE_QUOTES, '\"').replace(HYPHENS, '-').replace(COMMAS, ',');","","    for (var i = 0, l = CONVERSIONS.length; i < l; i++) {","      var pattern = CONVERSIONS[i][0],","          replacement = CONVERSIONS[i][1];","","      string = string.replace(pattern, replacement);","    }","","    if (!keepAccents) string = (0, _deburr2.default)(string);","","    return string;","  };","}","","exports.default = createNormalizer();","module.exports = exports['default'];","exports['default'].createNormalizer = exports.createNormalizer;"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"27":1,"34":1,"44":1,"45":1,"47":1,"56":1,"57":0,"59":0,"61":0,"62":0,"65":0,"68":0,"70":0,"74":1,"75":1,"76":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/regexp/classes.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/regexp/classes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":53}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":54}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":46}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","/**"," * Talisman regexp/classes"," * ========================"," *"," * A collection of handy character classes."," */","var SINGLE_QUOTES = exports.SINGLE_QUOTES = '’‘`‛\\'';","var DOUBLE_QUOTES = exports.DOUBLE_QUOTES = '«»„‟“”\"';","var HYPHENS = exports.HYPHENS = '\\\\-‐‒–—―−‑⁃';","var COMMAS = exports.COMMAS = ',،、';"],"l":{"3":1,"12":1,"13":1,"14":1,"15":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyers/omission.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyers/omission.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"omission","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":17,"column":0},"end":{"line":19,"column":41}},"8":{"start":{"line":42,"column":0},"end":{"line":77,"column":1}},"9":{"start":{"line":45,"column":2},"end":{"line":45,"column":32}},"10":{"start":{"line":48,"column":2},"end":{"line":48,"column":41}},"11":{"start":{"line":51,"column":2},"end":{"line":51,"column":44}},"12":{"start":{"line":54,"column":2},"end":{"line":54,"column":15}},"13":{"start":{"line":55,"column":2},"end":{"line":55,"column":25}},"14":{"start":{"line":58,"column":2},"end":{"line":58,"column":32}},"15":{"start":{"line":60,"column":2},"end":{"line":64,"column":3}},"16":{"start":{"line":61,"column":4},"end":{"line":61,"column":34}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":49}},"18":{"start":{"line":63,"column":32},"end":{"line":63,"column":49}},"19":{"start":{"line":67,"column":2},"end":{"line":74,"column":3}},"20":{"start":{"line":68,"column":4},"end":{"line":68,"column":28}},"21":{"start":{"line":70,"column":4},"end":{"line":73,"column":5}},"22":{"start":{"line":71,"column":6},"end":{"line":71,"column":25}},"23":{"start":{"line":72,"column":6},"end":{"line":72,"column":20}},"24":{"start":{"line":76,"column":2},"end":{"line":76,"column":13}},"25":{"start":{"line":78,"column":0},"end":{"line":78,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"4":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"5":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":35}},{"start":{"line":70,"column":39},"end":{"line":70,"column":58}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = omission;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Constants."," */","var UNDESIRABLES = /[^A-Z]/g,","    CONSONANTS = 'JKQXZVWYBFMGPDHCLNTSR',","    CONSONANTS_SET = new Set(CONSONANTS);","","/**"," * omission key function."," *"," * @param  {string} string - Target string."," * @return {string}        - The omission key."," */","/**"," * Talisman keyers/omission"," * ========================="," *"," * Keyer taking a string and normalizing it into a \"omission key\"."," *"," * [Reference]:"," * http://dl.acm.org/citation.cfm?id=358048"," * http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.12.385&rep=rep1&type=pdf"," *"," * [Article]:"," * Pollock, Joseph J. and Antonio Zamora. 1984. \"Automatic Spelling Correction"," * in Scientific and Scholarly Text.\" Communications of the ACM, 27(4)."," * 358--368."," */","function omission(string) {","","  // Normalizing case","  string = string.toUpperCase();","","  // Deburring","  string = (0, _deburr2.default)(string);","","  // Dropping useless characters","  string = string.replace(UNDESIRABLES, '');","","  // Composing the key","  var key = '';","  var vowels = new Set();","","  // Add consonants in order","  var letters = new Set(string);","","  for (var i = 0, l = CONSONANTS.length; i < l; i++) {","    var consonant = CONSONANTS[i];","","    if (letters.has(consonant)) key += consonant;","  }","","  // Add vowels in order they appeared in the word","  for (var _i = 0, _l = string.length; _i < _l; _i++) {","    var letter = string[_i];","","    if (!CONSONANTS_SET.has(letter) && !vowels.has(letter)) {","      vowels.add(letter);","      key += letter;","    }","  }","","  return key;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"17":1,"42":1,"45":0,"48":0,"51":0,"54":0,"55":0,"58":0,"60":0,"61":0,"63":0,"67":0,"68":0,"70":0,"71":0,"72":0,"76":0,"78":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyers/skeleton.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyers/skeleton.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"consume","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":22}}},"3":{"name":"skeleton","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":17,"column":0},"end":{"line":18,"column":30}},"8":{"start":{"line":38,"column":0},"end":{"line":40,"column":1}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":34}},"10":{"start":{"line":48,"column":0},"end":{"line":76,"column":1}},"11":{"start":{"line":51,"column":2},"end":{"line":51,"column":32}},"12":{"start":{"line":54,"column":2},"end":{"line":54,"column":41}},"13":{"start":{"line":57,"column":2},"end":{"line":57,"column":44}},"14":{"start":{"line":60,"column":2},"end":{"line":60,"column":30}},"15":{"start":{"line":62,"column":2},"end":{"line":62,"column":30}},"16":{"start":{"line":62,"column":20},"end":{"line":62,"column":30}},"17":{"start":{"line":64,"column":2},"end":{"line":65,"column":25}},"18":{"start":{"line":67,"column":2},"end":{"line":73,"column":3}},"19":{"start":{"line":68,"column":4},"end":{"line":68,"column":27}},"20":{"start":{"line":70,"column":4},"end":{"line":70,"column":41}},"21":{"start":{"line":70,"column":32},"end":{"line":70,"column":41}},"22":{"start":{"line":72,"column":4},"end":{"line":72,"column":75}},"23":{"start":{"line":72,"column":28},"end":{"line":72,"column":47}},"24":{"start":{"line":72,"column":52},"end":{"line":72,"column":75}},"25":{"start":{"line":75,"column":2},"end":{"line":75,"column":61}},"26":{"start":{"line":77,"column":0},"end":{"line":77,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"4":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"5":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = skeleton;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Constants."," */","var UNDESIRABLES = /[^A-Z]/g,","    VOWELS = new Set('AEIOU');","","/**"," * Helpers."," */","/**"," * Talisman keyers/skeleton"," * ========================="," *"," * Keyer taking a string and normalizing it into a \"skeleton key\"."," *"," * [Reference]:"," * http://dl.acm.org/citation.cfm?id=358048"," * http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.12.385&rep=rep1&type=pdf"," *"," * [Article]:"," * Pollock, Joseph J. and Antonio Zamora. 1984. \"Automatic Spelling Correction"," * in Scientific and Scholarly Text.\" Communications of the ACM, 27(4)."," * 358--368."," */","function consume(set) {","  return Array.from(set).join('');","}","","/**"," * Skeleton key function."," *"," * @param  {string} string - Target string."," * @return {string}        - The skeleton key."," */","function skeleton(string) {","","  // Normalizing case","  string = string.toUpperCase();","","  // Deburring","  string = (0, _deburr2.default)(string);","","  // Dropping useless characters","  string = string.replace(UNDESIRABLES, '');","","  // Composing the key","  var firstLetter = string[0];","","  if (!firstLetter) return '';","","  var consonants = new Set(),","      vowels = new Set();","","  for (var i = 1, l = string.length; i < l; i++) {","    var letter = string[i];","","    if (letter === firstLetter) continue;","","    if (VOWELS.has(letter)) vowels.add(letter);else consonants.add(letter);","  }","","  return firstLetter + consume(consonants) + consume(vowels);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"17":1,"38":1,"39":0,"48":1,"51":0,"54":0,"57":0,"60":0,"62":0,"64":0,"67":0,"68":0,"70":0,"72":0,"75":0,"77":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyword-extraction/rake.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/keyword-extraction/rake.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"comparator","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":26}}},"3":{"name":"createExtractor","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":34}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":9},"end":{"line":76,"column":24}}},"5":{"name":"(anonymous_5)","line":123,"loc":{"start":{"line":123,"column":30},"end":{"line":123,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":23,"column":0},"end":{"line":24,"column":28}},"8":{"start":{"line":44,"column":0},"end":{"line":48,"column":1}},"9":{"start":{"line":45,"column":2},"end":{"line":45,"column":35}},"10":{"start":{"line":45,"column":25},"end":{"line":45,"column":35}},"11":{"start":{"line":46,"column":2},"end":{"line":46,"column":34}},"12":{"start":{"line":46,"column":25},"end":{"line":46,"column":34}},"13":{"start":{"line":47,"column":2},"end":{"line":47,"column":11}},"14":{"start":{"line":56,"column":0},"end":{"line":144,"column":1}},"15":{"start":{"line":57,"column":2},"end":{"line":57,"column":26}},"16":{"start":{"line":59,"column":2},"end":{"line":59,"column":36}},"17":{"start":{"line":61,"column":2},"end":{"line":61,"column":117}},"18":{"start":{"line":61,"column":33},"end":{"line":61,"column":117}},"19":{"start":{"line":63,"column":2},"end":{"line":63,"column":40}},"20":{"start":{"line":76,"column":2},"end":{"line":143,"column":4}},"21":{"start":{"line":79,"column":4},"end":{"line":81,"column":25}},"22":{"start":{"line":83,"column":4},"end":{"line":117,"column":5}},"23":{"start":{"line":84,"column":6},"end":{"line":84,"column":28}},"24":{"start":{"line":86,"column":6},"end":{"line":86,"column":23}},"25":{"start":{"line":88,"column":6},"end":{"line":116,"column":7}},"26":{"start":{"line":89,"column":8},"end":{"line":89,"column":31}},"27":{"start":{"line":91,"column":8},"end":{"line":115,"column":9}},"28":{"start":{"line":92,"column":10},"end":{"line":106,"column":11}},"29":{"start":{"line":95,"column":12},"end":{"line":95,"column":64}},"30":{"start":{"line":98,"column":12},"end":{"line":98,"column":44}},"31":{"start":{"line":100,"column":12},"end":{"line":103,"column":13}},"32":{"start":{"line":101,"column":14},"end":{"line":101,"column":69}},"33":{"start":{"line":102,"column":14},"end":{"line":102,"column":48}},"34":{"start":{"line":105,"column":12},"end":{"line":105,"column":25}},"35":{"start":{"line":110,"column":10},"end":{"line":110,"column":61}},"36":{"start":{"line":111,"column":10},"end":{"line":111,"column":34}},"37":{"start":{"line":114,"column":10},"end":{"line":114,"column":29}},"38":{"start":{"line":120,"column":4},"end":{"line":121,"column":43}},"39":{"start":{"line":123,"column":4},"end":{"line":135,"column":7}},"40":{"start":{"line":124,"column":6},"end":{"line":124,"column":48}},"41":{"start":{"line":125,"column":6},"end":{"line":125,"column":20}},"42":{"start":{"line":127,"column":6},"end":{"line":130,"column":7}},"43":{"start":{"line":128,"column":8},"end":{"line":128,"column":30}},"44":{"start":{"line":129,"column":8},"end":{"line":129,"column":61}},"45":{"start":{"line":132,"column":6},"end":{"line":132,"column":50}},"46":{"start":{"line":134,"column":6},"end":{"line":134,"column":36}},"47":{"start":{"line":134,"column":25},"end":{"line":134,"column":36}},"48":{"start":{"line":138,"column":4},"end":{"line":138,"column":30}},"49":{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},"50":{"start":{"line":141,"column":6},"end":{"line":141,"column":39}},"51":{"start":{"line":142,"column":5},"end":{"line":142,"column":19}},"52":{"start":{"line":145,"column":0},"end":{"line":145,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"5":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":19}},{"start":{"line":57,"column":23},"end":{"line":57,"column":25}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"7":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":8}},{"start":{"line":91,"column":8},"end":{"line":91,"column":8}}]},"8":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":12},"end":{"line":91,"column":34}},{"start":{"line":91,"column":38},"end":{"line":91,"column":60}}]},"9":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":10},"end":{"line":92,"column":10}},{"start":{"line":92,"column":10},"end":{"line":92,"column":10}}]},"10":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":40},"end":{"line":101,"column":63}},{"start":{"line":101,"column":67},"end":{"line":101,"column":68}}]},"11":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":34},"end":{"line":110,"column":55}},{"start":{"line":110,"column":59},"end":{"line":110,"column":60}}]},"12":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":6},"end":{"line":134,"column":6}},{"start":{"line":134,"column":6},"end":{"line":134,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = createExtractor;","","var _heap = require('mnemonist/heap');","","var _heap2 = _interopRequireDefault(_heap);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// TODO: mitigation strategy to implement","// TODO: tokenizer option, stemmer option","// TODO: option for keyword merging","// TODO: configure T","// TODO: handle numbers","","/**"," * Constants."," */","var PUNCTUATION = /^[^\\w\\s]+$/,","    HASH_DELIMITER = '\\x01';","","/**"," * Helpers."," */","/**"," * Talisman keyword-extraction/rake"," * ================================="," *"," * JavaScript implementation of the \"Rapid Automatic Keyword Extraction\" (RAKE)."," *"," * [Article]:"," * Rose, S., Engel, D., Cramer, N., & Cowley, W. (2010). Automatic Keyword"," * Extraction from Individual Documents. In M. W. Berry & J. Kogan (Eds.),"," * Text Mining: Theory and Applications: John Wiley & Sons."," *"," * [Notes]:"," * The article use the term \"degree\" in a somewhat incorrect way. It's more"," * of the propension of a given word to find itself in a long keyword."," */","function comparator(a, b) {","  if (a.score < b.score) return -1;","  if (a.score > b.score) return 1;","  return 0;","}","","/**"," * Factory function taking some options & returning a custom RAKE function."," *"," * @param  {object} options     - Options:"," * @param  {array}    stopwords - List of stopwords to use."," */","function createExtractor(options) {","  options = options || {};","","  var stopwords = options.stopwords;","","  if (!Array.isArray(stopwords)) throw new Error('talisman/keyword-extraction/rake: expecting a list of stopwords.');","","  var stopwordsSet = new Set(stopwords);","","  /**","   * RAKE function taking an array of sentences being tokenized as words.","   * Note that the tokenization must keep punctuation in order to be able","   * to extract keywords.","   *","   * Alternatively, one can also stem the given tokens beforehand to minimize","   * the number of distinct keyword words.","   *","   * @param  {array}  doc - Target document.","   * @return {array}      - Resulting keywords.","   */","  return function (doc) {","","    // First we need to find candidate keywords & score individual words","    var candidateKeywords = new Set(),","        wordFrequencies = {},","        wordDegrees = {};","","    for (var i = 0, l = doc.length; i < l; i++) {","      var sentence = doc[i];","","      var keyword = [];","","      for (var j = 0, m = sentence.length; j < m; j++) {","        var word = sentence[j];","","        if (stopwordsSet.has(word) || PUNCTUATION.test(word)) {","          if (keyword.length) {","","            // Storing the hashed keyword for later","            candidateKeywords.add(keyword.join(HASH_DELIMITER));","","            // Updating the degrees","            var degree = keyword.length - 1;","","            for (var k = 0, n = keyword.length; k < n; k++) {","              wordDegrees[keyword[k]] = wordDegrees[keyword[k]] || 0;","              wordDegrees[keyword[k]] += degree;","            }","","            keyword = [];","          }","        } else {","","          // Updating word frequency","          wordFrequencies[word] = wordFrequencies[word] || 0;","          wordFrequencies[word]++;","","          // Adding the word to the current keyword","          keyword.push(word);","        }","      }","    }","","    // Now we need to score the keywords and retrieve the best one","    var heap = new _heap2.default(comparator),","        T = candidateKeywords.size / 3 | 0;","","    candidateKeywords.forEach(function (keyword) {","      var words = keyword.split(HASH_DELIMITER);","      var score = 0;","","      for (var _i = 0, _l = words.length; _i < _l; _i++) {","        var _word = words[_i];","        score += wordDegrees[_word] / wordFrequencies[_word];","      }","","      heap.push({ score: score, keyword: words });","","      if (heap.size > T) heap.pop();","    });","","    // Returning the results","    var result = new Array(T);","","    for (var _i2 = heap.size - 1; _i2 >= 0; _i2--) {","      result[_i2] = heap.pop().keyword;","    }return result;","  };","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"23":1,"44":1,"45":0,"46":0,"47":0,"56":1,"57":0,"59":0,"61":0,"63":0,"76":0,"79":0,"83":0,"84":0,"86":0,"88":0,"89":0,"91":0,"92":0,"95":0,"98":0,"100":0,"101":0,"102":0,"105":0,"110":0,"111":0,"114":0,"120":0,"123":0,"124":0,"125":0,"127":0,"128":0,"129":0,"132":0,"134":0,"138":0,"140":0,"141":0,"142":0,"145":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/parsers/brown.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/parsers/brown.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"brown","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"4":{"start":{"line":22,"column":0},"end":{"line":33,"column":1}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":21}},"7":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":38}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":28}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":16}},"11":{"start":{"line":34,"column":0},"end":{"line":34,"column":36}}},"branchMap":{},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = brown;","/**"," * Talisman parsers/brown"," * ======================="," *"," * A parser for Brown corpus files."," */","var TOKEN_REGEX = /([^/\\n\\t\\r\\s]+)\\/([^\\s\\n]+)/g;","","/**"," * Function taking text from the Brown corpus and outputting an array of"," * (word, tag) tuples."," *"," * @param  {string} text - The text to parse."," * @return {array}       - The tokens."," */","function brown(text) {","  var tokens = [];","  var match = void 0;","","  while (match = TOKEN_REGEX.exec(text)) {","    tokens.push([match[1], match[2]]);","  }","","  TOKEN_REGEX.lastIndex = 0;","","  return tokens;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"13":1,"22":1,"23":0,"24":0,"26":0,"27":0,"30":0,"32":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/parsers/conll.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/parsers/conll.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"conll","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":21,"column":0},"end":{"line":42,"column":1}},"4":{"start":{"line":22,"column":2},"end":{"line":23,"column":31}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":20}},"6":{"start":{"line":26,"column":2},"end":{"line":37,"column":3}},"7":{"start":{"line":27,"column":4},"end":{"line":27,"column":24}},"8":{"start":{"line":29,"column":4},"end":{"line":36,"column":5}},"9":{"start":{"line":30,"column":6},"end":{"line":33,"column":7}},"10":{"start":{"line":31,"column":8},"end":{"line":31,"column":33}},"11":{"start":{"line":32,"column":8},"end":{"line":32,"column":22}},"12":{"start":{"line":35,"column":6},"end":{"line":35,"column":37}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":48}},"14":{"start":{"line":39,"column":23},"end":{"line":39,"column":48}},"15":{"start":{"line":41,"column":2},"end":{"line":41,"column":19}},"16":{"start":{"line":43,"column":0},"end":{"line":43,"column":36}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":6}},{"start":{"line":30,"column":6},"end":{"line":30,"column":6}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = conll;","/**"," * Talisman parsers/conll"," * ======================="," *"," * A parser for the CONLL corpus files."," */","","/**"," * Function taking a CONLL corpus' text and returning an array of sentences"," * being arrays of (word, brill_tag, wsj_tag)."," *"," * @param  {string} text - The text to parse."," * @return {array}       - The tokens."," */","function conll(text) {","  var sentences = [],","      lines = text.split('\\n');","","  var sentence = [];","  for (var i = 0, l = lines.length; i < l; i++) {","    var line = lines[i];","","    if (!line) {","      if (sentence.length) {","        sentences.push(sentence);","        sentence = [];","      }","    } else {","      sentence.push(line.split(' '));","    }","  }","","  if (sentence.length) sentences.push(sentence);","","  return sentences;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"21":1,"22":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"35":0,"39":0,"41":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/alpha-sis.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/alpha-sis.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0],"5":[0,1],"6":[1,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":84},"end":{"line":7,"column":99}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":124},"end":{"line":7,"column":139}}},"3":{"name":"_interopRequireDefault","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}}},"4":{"name":"pad","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":19}}},"5":{"name":"permutations","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":28}}},"6":{"name":"alphaSis","line":91,"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":24}}},"7":{"name":"(anonymous_7)","line":139,"loc":{"start":{"line":139,"column":32},"end":{"line":139,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":269}},"3":{"start":{"line":7,"column":101},"end":{"line":7,"column":119}},"4":{"start":{"line":7,"column":141},"end":{"line":7,"column":266}},"5":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}},"6":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":47}},"8":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":95}},"10":{"start":{"line":32,"column":39},"end":{"line":32,"column":93}},"11":{"start":{"line":37,"column":0},"end":{"line":37,"column":236}},"12":{"start":{"line":39,"column":0},"end":{"line":39,"column":492}},"13":{"start":{"line":44,"column":0},"end":{"line":46,"column":1}},"14":{"start":{"line":45,"column":2},"end":{"line":45,"column":48}},"15":{"start":{"line":48,"column":0},"end":{"line":81,"column":1}},"16":{"start":{"line":49,"column":2},"end":{"line":49,"column":19}},"17":{"start":{"line":51,"column":2},"end":{"line":78,"column":3}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":26}},"19":{"start":{"line":54,"column":4},"end":{"line":77,"column":5}},"20":{"start":{"line":57,"column":6},"end":{"line":59,"column":7}},"21":{"start":{"line":58,"column":8},"end":{"line":58,"column":29}},"22":{"start":{"line":60,"column":6},"end":{"line":60,"column":49}},"23":{"start":{"line":62,"column":6},"end":{"line":71,"column":7}},"24":{"start":{"line":63,"column":8},"end":{"line":63,"column":35}},"25":{"start":{"line":65,"column":8},"end":{"line":68,"column":9}},"26":{"start":{"line":66,"column":10},"end":{"line":66,"column":45}},"27":{"start":{"line":67,"column":10},"end":{"line":67,"column":14}},"28":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"29":{"start":{"line":74,"column":6},"end":{"line":76,"column":7}},"30":{"start":{"line":75,"column":8},"end":{"line":75,"column":30}},"31":{"start":{"line":80,"column":2},"end":{"line":80,"column":15}},"32":{"start":{"line":91,"column":0},"end":{"line":142,"column":1}},"33":{"start":{"line":92,"column":2},"end":{"line":92,"column":109}},"34":{"start":{"line":92,"column":32},"end":{"line":92,"column":109}},"35":{"start":{"line":94,"column":2},"end":{"line":94,"column":74}},"36":{"start":{"line":96,"column":2},"end":{"line":96,"column":16}},"37":{"start":{"line":98,"column":2},"end":{"line":98,"column":19}},"38":{"start":{"line":101,"column":2},"end":{"line":112,"column":3}},"39":{"start":{"line":102,"column":4},"end":{"line":104,"column":34}},"40":{"start":{"line":107,"column":4},"end":{"line":111,"column":5}},"41":{"start":{"line":108,"column":6},"end":{"line":108,"column":26}},"42":{"start":{"line":109,"column":6},"end":{"line":109,"column":35}},"43":{"start":{"line":110,"column":6},"end":{"line":110,"column":12}},"44":{"start":{"line":115,"column":2},"end":{"line":115,"column":31}},"45":{"start":{"line":115,"column":16},"end":{"line":115,"column":31}},"46":{"start":{"line":118,"column":2},"end":{"line":118,"column":27}},"47":{"start":{"line":120,"column":2},"end":{"line":137,"column":3}},"48":{"start":{"line":120,"column":8},"end":{"line":137,"column":3}},"49":{"start":{"line":122,"column":4},"end":{"line":133,"column":5}},"50":{"start":{"line":123,"column":6},"end":{"line":125,"column":35}},"51":{"start":{"line":128,"column":6},"end":{"line":132,"column":7}},"52":{"start":{"line":129,"column":8},"end":{"line":129,"column":28}},"53":{"start":{"line":130,"column":8},"end":{"line":130,"column":37}},"54":{"start":{"line":131,"column":8},"end":{"line":131,"column":22}},"55":{"start":{"line":135,"column":4},"end":{"line":135,"column":19}},"56":{"start":{"line":136,"column":4},"end":{"line":136,"column":15}},"57":{"start":{"line":139,"column":2},"end":{"line":141,"column":5}},"58":{"start":{"line":140,"column":4},"end":{"line":140,"column":59}},"59":{"start":{"line":143,"column":0},"end":{"line":143,"column":36}}},"branchMap":{"1":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":84},"end":{"line":7,"column":121}},{"start":{"line":7,"column":124},"end":{"line":7,"column":268}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":14},"end":{"line":7,"column":42}},{"start":{"line":7,"column":46},"end":{"line":7,"column":81}}]},"3":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":244},"end":{"line":7,"column":252}},{"start":{"line":7,"column":255},"end":{"line":7,"column":265}}]},"4":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":148},"end":{"line":7,"column":151}},{"start":{"line":7,"column":155},"end":{"line":7,"column":183}},{"start":{"line":7,"column":187},"end":{"line":7,"column":213}},{"start":{"line":7,"column":217},"end":{"line":7,"column":241}}]},"5":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":70},"end":{"line":32,"column":73}},{"start":{"line":32,"column":76},"end":{"line":32,"column":92}}]},"6":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":46},"end":{"line":32,"column":49}},{"start":{"line":32,"column":53},"end":{"line":32,"column":67}}]},"7":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"8":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":42},"end":{"line":54,"column":53}},{"start":{"line":54,"column":56},"end":{"line":54,"column":72}}]},"9":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"10":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"12":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":6},"end":{"line":128,"column":6}},{"start":{"line":128,"column":6},"end":{"line":128,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**","                                                                                                                                                                                                                                                                               * Talisman phonetics/alpha-sislpha Search Inquiry Systemeference]:","                                                                                                                                                                                                                                                                               * https://archive.org/stream/accessingindivid00moor#page/15/mode/1uprticle]:","                                                                                                                                                                                                                                                                               * Accessing individual records from personal data files using non-unique","                                                                                                                                                                                                                                                                               * identifiers\" / Gwendolyn B. Moore, et al.; prepared for the Institute for","                                                                                                                                                                                                                                                                               * Computer Sciences and Technology, National Bureau of Standards,","                                                                                                                                                                                                                                                                               * Washington, D.C (1977)","                                                                                                                                                                                                                                                                               */","","","exports.default = alphaSis;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","var _helpers = require('../helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Constants."," */","var INITIALS = [['GF', '08'], ['GM', '03'], ['GN', '02'], ['KN', '02'], ['PF', '08'], ['PN', '02'], ['PS', '00'], ['WR', '04'], ['A', '1'], ['E', '1'], ['H', '2'], ['I', '1'], ['J', '3'], ['O', '1'], ['U', '1'], ['W', '4'], ['Y', '5']];","","var BASICS = [['SCH', '6'], ['CZ', ['70', '6', '0']], ['CH', ['6', '70', '0']], ['CK', ['7', '6']], ['DS', ['0', '10']], ['DZ', ['0', '10']], ['TS', ['0', '10']], ['TZ', ['0', '10']], ['CI', '0'], ['CY', '0'], ['CE', '0'], ['SH', '6'], ['DG', '7'], ['PH', '8'], ['C', ['7', '6']], ['K', ['7', '6']], ['Z', '0'], ['S', '0'], ['D', '1'], ['T', '1'], ['N', '2'], ['M', '3'], ['R', '4'], ['L', '5'], ['J', '6'], ['G', '7'], ['Q', '7'], ['X', '7'], ['F', '8'], ['V', '8'], ['B', '9'], ['P', '9']];","","/**"," * Helpers."," */","function pad(code) {","  return (code + '00000000000000').slice(0, 14);","}","","function permutations(code) {","  var codes = [''];","","  for (var i = 0, l = code.length; i < l; i++) {","    var current = code[i];","","    if ((typeof current === 'undefined' ? 'undefined' : _typeof(current)) === 'object') {","","      // Doubling the codes","      for (var j = 0, m = codes.length * (current.length - 1); j < m; j++) {","        codes.push(codes[j]);","      } // Filling the codes","      var offset = codes.length / current.length;","","      for (var _j = 0, k = 0, _m = current.length; _j < _m; _j++) {","        var encoding = current[_j];","","        while (k < offset) {","          codes[k + _j * offset] += encoding;","          k++;","        }","","        k = 0;","      }","    } else {","","      for (var _j2 = 0, _m2 = codes.length; _j2 < _m2; _j2++) {","        codes[_j2] += current;","      }","    }","  }","","  return codes;","}","","/**"," * Function taking a single name and computing its Alpha SIS value."," *"," * @param  {string}  name - The name to process."," * @return {array}        - List of the possible Alpha SIS values."," *"," * @throws {Error} The function expects the name to be a string."," */","function alphaSis(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/alpha-sis: the given name is not a string.');","","  name = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-Z]/g, '');","","  var code = [];","","  var position = 0;","","  // Handling inital substring","  for (var i = 0, l = INITIALS.length; i < l; i++) {","    var _INITIALS$i = INITIALS[i],","        substring = _INITIALS$i[0],","        encoding = _INITIALS$i[1];","","","    if (name.startsWith(substring)) {","      code.push(encoding);","      position += substring.length;","      break;","    }","  }","","  // If the beginning of the string is not present in initial, we put '0'","  if (!code[0]) code.push('0');","","  // Encoding the remaining","  var length = name.length;","","  main: while (position < length) {","","    for (var _i = 0, _l = BASICS.length; _i < _l; _i++) {","      var _BASICS$_i = BASICS[_i],","          substring = _BASICS$_i[0],","          encoding = _BASICS$_i[1];","","","      if (name.slice(position).startsWith(substring)) {","        code.push(encoding);","        position += substring.length;","        continue main;","      }","    }","","    code.push('_');","    position++;","  }","","  return permutations(code).map(function (c) {","    return pad((0, _helpers.squeeze)(c).replace(/_/g, ''));","  });","}","module.exports = exports['default'];"],"l":{"3":1,"7":1,"24":1,"26":1,"28":1,"30":1,"32":1,"37":1,"39":1,"44":1,"45":0,"48":1,"49":0,"51":0,"52":0,"54":0,"57":0,"58":0,"60":0,"62":0,"63":0,"65":0,"66":0,"67":0,"70":0,"74":0,"75":0,"80":0,"91":1,"92":0,"94":0,"96":0,"98":0,"101":0,"102":0,"107":0,"108":0,"109":0,"110":0,"115":0,"118":0,"120":0,"122":0,"123":0,"128":0,"129":0,"130":0,"131":0,"135":0,"136":0,"139":0,"140":0,"143":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/caverphone.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/caverphone.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"pad","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":19}}},"3":{"name":"caverphone","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":17,"column":0},"end":{"line":20,"column":2}},"8":{"start":{"line":43,"column":0},"end":{"line":47,"column":1}},"9":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"10":{"start":{"line":45,"column":4},"end":{"line":45,"column":16}},"11":{"start":{"line":46,"column":3},"end":{"line":46,"column":28}},"12":{"start":{"line":58,"column":0},"end":{"line":76,"column":1}},"13":{"start":{"line":60,"column":2},"end":{"line":60,"column":110}},"14":{"start":{"line":60,"column":32},"end":{"line":60,"column":110}},"15":{"start":{"line":63,"column":2},"end":{"line":63,"column":74}},"16":{"start":{"line":66,"column":2},"end":{"line":72,"column":3}},"17":{"start":{"line":67,"column":4},"end":{"line":69,"column":34}},"18":{"start":{"line":71,"column":4},"end":{"line":71,"column":44}},"19":{"start":{"line":75,"column":2},"end":{"line":75,"column":19}},"20":{"start":{"line":81,"column":0},"end":{"line":82,"column":55}},"21":{"start":{"line":84,"column":0},"end":{"line":84,"column":27}},"22":{"start":{"line":85,"column":0},"end":{"line":85,"column":28}},"23":{"start":{"line":86,"column":0},"end":{"line":86,"column":30}},"24":{"start":{"line":87,"column":0},"end":{"line":87,"column":36}},"25":{"start":{"line":88,"column":0},"end":{"line":88,"column":47}},"26":{"start":{"line":89,"column":0},"end":{"line":89,"column":49}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.revisited = exports.original = undefined;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Rules."," */","var RULES = {","  original: [[/e$/g, ''], [/^(cou|rou|tou|enou|trou)gh/g, '$12f'], [/^gn/g, '2n'], [/^mb/g, 'm2'], [/cq/g, '2q'], [/ci/g, 'si'], [/ce/g, 'se'], [/cy/g, 'sy'], [/tch/g, '2ch'], [/c/g, 'k'], [/q/g, 'k'], [/x/g, 'k'], [/v/g, 'f'], [/dg/g, '2g'], [/tio/g, 'sio'], [/tia/g, 'sia'], [/d/g, 't'], [/ph/g, 'fh'], [/b/g, 'p'], [/sh/g, 's2'], [/z/g, 's'], [/^[aieou]/g, 'A'], [/[aeiou]/g, '3'], [/i/g, 'y'], [/^y3/g, 'Y3'], [/^y/g, 'A'], [/y/g, '3'], [/3gh3/g, '3kh3'], [/gh/g, '22'], [/g/g, 'k'], [/s+/g, 'S'], [/t+/g, 'T'], [/p+/g, 'P'], [/k+/g, 'K'], [/f+/g, 'F'], [/m+/g, 'M'], [/n+/g, 'N'], [/w3/g, 'W3'], [/wh3/g, 'Wh3'], [/w$/g, '3'], [/w/g, '2'], [/^h/g, 'A'], [/h/g, '2'], [/r3/g, 'R3'], [/r$/g, '3'], [/r/g, '2'], [/l3/g, 'L3'], [/l$/g, '3'], [/l/g, '2'], [/2/g, ''], [/3$/g, 'A'], [/3/g, '']],","  revisited: [[/e$/g, ''], [/^(cou|rou|tou|enou|trou)gh/g, '$12f'], [/^gn/g, '2n'], [/mb$/g, 'mb'], [/cq/g, '2q'], [/c([iey])/g, 's$1'], [/tch/g, '2ch'], [/[cqx]/g, 'k'], [/v/g, 'f'], [/dg/g, '2g'], [/ti([oa])/g, 'si$1'], [/d/g, 't'], [/ph/g, 'fh'], [/b/g, 'p'], [/sh/g, 's2'], [/z/g, 's'], [/^[aeiou]/g, 'A'], [/[aeiou]/g, '3'], [/j/g, 'y'], [/^y3/g, 'Y3'], [/^y/g, 'A'], [/y/g, '3'], [/3gh3/g, '3kh3'], [/gh/g, '22'], [/g/g, 'k'], [/s+/g, 'S'], [/t+/g, 'T'], [/p+/g, 'P'], [/k+/g, 'K'], [/f+/g, 'F'], [/m+/g, 'M'], [/n+/g, 'N'], [/w3/g, 'W3'], [/wh3/g, 'Wh3'], [/w$/g, '3'], [/w/g, '2'], [/^h/g, 'A'], [/h/g, '2'], [/r3/g, 'R3'], [/r$/g, '3'], [/r/g, '2'], [/l3/g, 'L3'], [/l$/g, '3'], [/l/g, '2'], [/2/g, ''], [/3$/g, 'A'], [/3/g, '']]","};","","/**"," * Helpers."," */","/**"," * Talisman phonetics/caverphone"," * =============================="," *"," * The caverphone algorithm, original & revisited."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Caverphone"," *"," * Original algorithm:"," * http://caversham.otago.ac.nz/files/working/ctp060902.pdf"," * Revisited algorithm:"," * http://caversham.otago.ac.nz/files/working/ctp150804.pdf"," *"," * [Author]:"," * David Hood (Caversham project)"," * http://caversham.otago.ac.nz/"," */","function pad(code) {","  while (code.length < 10) {","    code += '1';","  }return code.slice(0, 10);","}","","/**"," * Function taking a single name and computing its caverphone code."," *"," * @param  {array}  rules - The rules to use."," * @param  {string} name  - The name to process."," * @return {string}       - The caverphone code."," *"," * @throws {Error} The function expects the name to be a string."," */","function caverphone(rules, name) {","","  if (typeof name !== 'string') throw Error('talisman/phonetics/caverphone: the given name is not a string.');","","  // Preparing the name","  name = (0, _deburr2.default)(name).toLowerCase().replace(/[^a-z]/g, '');","","  // Applying the rules","  for (var i = 0, l = rules.length; i < l; i++) {","    var _rules$i = rules[i],","        match = _rules$i[0],","        replacement = _rules$i[1];","","    name = name.replace(match, replacement);","  }","","  // Returning the padded code","  return pad(name);","}","","/**"," * Exporting functions."," */","var original = caverphone.bind(null, RULES.original),","    revisited = caverphone.bind(null, RULES.revisited);","","exports.default = original;","exports.original = original;","exports.revisited = revisited;","module.exports = exports['default'];","exports['default'].original = exports.original;","exports['default'].revisited = exports.revisited;"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"17":1,"43":1,"44":0,"45":0,"46":0,"58":1,"60":0,"63":0,"66":0,"67":0,"71":0,"75":0,"81":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/daitch-mokotoff.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/daitch-mokotoff.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0],"5":[0,1],"6":[1,1],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":1,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":84},"end":{"line":7,"column":99}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":124},"end":{"line":7,"column":139}}},"3":{"name":"_interopRequireDefault","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}}},"4":{"name":"pad","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":19}}},"5":{"name":"permutations","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":28}}},"6":{"name":"daitchMokotoff","line":113,"loc":{"start":{"line":113,"column":0},"end":{"line":113,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":269}},"3":{"start":{"line":7,"column":101},"end":{"line":7,"column":119}},"4":{"start":{"line":7,"column":141},"end":{"line":7,"column":266}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":33}},"6":{"start":{"line":20,"column":0},"end":{"line":20,"column":39}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":47}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":95}},"9":{"start":{"line":24,"column":39},"end":{"line":24,"column":93}},"10":{"start":{"line":34,"column":0},"end":{"line":35,"column":18}},"11":{"start":{"line":37,"column":0},"end":{"line":67,"column":2}},"12":{"start":{"line":72,"column":0},"end":{"line":74,"column":1}},"13":{"start":{"line":73,"column":2},"end":{"line":73,"column":39}},"14":{"start":{"line":76,"column":0},"end":{"line":101,"column":1}},"15":{"start":{"line":77,"column":2},"end":{"line":77,"column":19}},"16":{"start":{"line":79,"column":2},"end":{"line":98,"column":3}},"17":{"start":{"line":80,"column":4},"end":{"line":80,"column":26}},"18":{"start":{"line":82,"column":4},"end":{"line":97,"column":5}},"19":{"start":{"line":85,"column":6},"end":{"line":87,"column":7}},"20":{"start":{"line":86,"column":8},"end":{"line":86,"column":29}},"21":{"start":{"line":88,"column":6},"end":{"line":91,"column":7}},"22":{"start":{"line":89,"column":8},"end":{"line":89,"column":45}},"23":{"start":{"line":90,"column":8},"end":{"line":90,"column":41}},"24":{"start":{"line":94,"column":6},"end":{"line":96,"column":7}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":30}},"26":{"start":{"line":100,"column":2},"end":{"line":100,"column":15}},"27":{"start":{"line":103,"column":0},"end":{"line":103,"column":53}},"28":{"start":{"line":113,"column":0},"end":{"line":161,"column":1}},"29":{"start":{"line":115,"column":2},"end":{"line":115,"column":115}},"30":{"start":{"line":115,"column":32},"end":{"line":115,"column":115}},"31":{"start":{"line":117,"column":2},"end":{"line":117,"column":16}},"32":{"start":{"line":119,"column":2},"end":{"line":119,"column":84}},"33":{"start":{"line":121,"column":2},"end":{"line":122,"column":27}},"34":{"start":{"line":125,"column":2},"end":{"line":158,"column":3}},"35":{"start":{"line":128,"column":4},"end":{"line":129,"column":35}},"36":{"start":{"line":131,"column":4},"end":{"line":155,"column":5}},"37":{"start":{"line":132,"column":6},"end":{"line":136,"column":30}},"38":{"start":{"line":139,"column":6},"end":{"line":139,"column":67}},"39":{"start":{"line":141,"column":6},"end":{"line":154,"column":7}},"40":{"start":{"line":142,"column":8},"end":{"line":142,"column":37}},"41":{"start":{"line":144,"column":8},"end":{"line":144,"column":32}},"42":{"start":{"line":146,"column":8},"end":{"line":146,"column":116}},"43":{"start":{"line":146,"column":19},"end":{"line":146,"column":47}},"44":{"start":{"line":146,"column":52},"end":{"line":146,"column":116}},"45":{"start":{"line":146,"column":92},"end":{"line":146,"column":116}},"46":{"start":{"line":148,"column":8},"end":{"line":148,"column":84}},"47":{"start":{"line":148,"column":61},"end":{"line":148,"column":84}},"48":{"start":{"line":150,"column":8},"end":{"line":150,"column":45}},"49":{"start":{"line":152,"column":8},"end":{"line":152,"column":40}},"50":{"start":{"line":153,"column":8},"end":{"line":153,"column":14}},"51":{"start":{"line":157,"column":4},"end":{"line":157,"column":18}},"52":{"start":{"line":160,"column":2},"end":{"line":160,"column":37}},"53":{"start":{"line":162,"column":0},"end":{"line":162,"column":36}}},"branchMap":{"1":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":84},"end":{"line":7,"column":121}},{"start":{"line":7,"column":124},"end":{"line":7,"column":268}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":14},"end":{"line":7,"column":42}},{"start":{"line":7,"column":46},"end":{"line":7,"column":81}}]},"3":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":244},"end":{"line":7,"column":252}},{"start":{"line":7,"column":255},"end":{"line":7,"column":265}}]},"4":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":148},"end":{"line":7,"column":151}},{"start":{"line":7,"column":155},"end":{"line":7,"column":183}},{"start":{"line":7,"column":187},"end":{"line":7,"column":213}},{"start":{"line":7,"column":217},"end":{"line":7,"column":241}}]},"5":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":70},"end":{"line":24,"column":73}},{"start":{"line":24,"column":76},"end":{"line":24,"column":92}}]},"6":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":46},"end":{"line":24,"column":49}},{"start":{"line":24,"column":53},"end":{"line":24,"column":67}}]},"7":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"8":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":42},"end":{"line":82,"column":53}},{"start":{"line":82,"column":56},"end":{"line":82,"column":72}}]},"9":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":38},"end":{"line":89,"column":39}},{"start":{"line":89,"column":42},"end":{"line":89,"column":43}}]},"10":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":34},"end":{"line":90,"column":35}},{"start":{"line":90,"column":38},"end":{"line":90,"column":40}}]},"11":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"12":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":28},"end":{"line":139,"column":50}},{"start":{"line":139,"column":53},"end":{"line":139,"column":66}}]},"13":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":6},"end":{"line":141,"column":6}},{"start":{"line":141,"column":6},"end":{"line":141,"column":6}}]},"14":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":8}},{"start":{"line":146,"column":8},"end":{"line":146,"column":8}}]},"15":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":52},"end":{"line":146,"column":52}},{"start":{"line":146,"column":52},"end":{"line":146,"column":52}}]},"16":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"17":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":12},"end":{"line":148,"column":35}},{"start":{"line":148,"column":39},"end":{"line":148,"column":59}}]},"18":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":22},"end":{"line":150,"column":29}},{"start":{"line":150,"column":33},"end":{"line":150,"column":44}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**","                                                                                                                                                                                                                                                                               * Talisman phonetics/daitch-mokotoffhe Daitch-Mokotoff Soundex.","                                                                                                                                                                                                                                                                               *","                                                                                                                                                                                                                                                                               * [Reference]:","                                                                                                                                                                                                                                                                               * https://en.wikipedia.org/wiki/Daitch%E2%80%93Mokotoff_Soundex","                                                                                                                                                                                                                                                                               */","","","exports.default = daitchMokotoff;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Rules."," *"," * [Note]:"," * For the (RS|RZ) part, the original algo says (94, 4) but most"," * implementations drop it to only (94). This implementation follows the"," * original algo."," */","var MNNM = /^(MN|NM)/,","    MN = /^(M|N)/;","","var RULES = {","  A: [[/^(AI|AJ|AY)/, 0, 1, null], [/^AU/, 0, 7, null], [null, 0, null, null]],","  Ą: [[null, null, null, [6, null]]],","  B: [[null, 7, 7, 7]],","  C: [[/^CHS/, 5, 54, 54], [/^CH/, [5, 4], [5, 4], [5, 4]], [/^CK/, [5, 45], [5, 45], [5, 45]], [/^(CSZ|CZS|CZ|CS)/, 4, 4, 4], [null, [5, 4], [5, 4], [5, 4]]],","  D: [[/^(DRZ|DRS|DSH|DSZ|DZH|DZS|DS|DZ)/, 4, 4, 4], [/^(DT|D)/, 3, 3, 3]],","  E: [[/^(EI|EJ|EY)/, 0, 1, null], [/^EU/, 1, 1, null], [null, 0, null, null]],","  Ę: [[null, null, null, [6, null]]],","  F: [[/^(FB|F)/, 7, 7, 7]],","  G: [[null, 5, 5, 5]],","  H: [[null, 5, 5, null]],","  I: [[/^(IA|IE|IO|IU)/, 1, null, null], [null, 0, null, null]],","  J: [[null, [1, 4], [null, 4], [null, 4]]],","  K: [[/^KS/, 5, 54, 54], [/^(KH|K)/, 5, 5, 5]],","  L: [[null, 8, 8, 8]],","  M: [[MNNM, null, 66, 66], [MN, 6, 6, 6]],","  N: [[MNNM, null, 66, 66], [MN, 6, 6, 6]],","  O: [[/^(OI|OJ|OY)/, 0, 1, null], [null, 0, null, null]],","  P: [[/^(PF|PH|P)/, 7, 7, 7]],","  Q: [[null, 5, 5, 5]],","  R: [[/^(RZ|RS)/, [94, 4], [94, 4], [94, 4]], [null, 9, 9, 9]],","  S: [[/^(SCHTSCH|SCHTSH|SCHTCH|SHTCH|SHCH|SHTSH)/, 2, 4, 4], [/^SCH/, 4, 4, 4], [/^(SHT|SCHT|SCHD)/, 2, 43, 43], [/^SH/, 4, 4, 4], [/^(STCH|STSCH|SC|STRZ|STRS|STSH)/, 2, 4, 4], [/^ST/, 2, 43, 43], [/^(SZCZ|SZCS)/, 2, 4, 4], [/^(SZT|SHD|SZD|SD)/, 2, 43, 43], [/^(SZ|S)/, 4, 4, 4]],","  T: [[/^(TCH|TTCH|TTSCH)/, 4, 4, 4], [/^TH/, 3, 3, 3], [/^(TRZ|TRS|TSCH|TSH|TS|TTS|TTSZ|TC|TZ|TTZ|TZS|TSZ)/, 4, 4, 4], [null, 3, 3, 3]],","  Ţ: [[null, [3, 4], [3, 4], [3, 4]]],","  U: [[/^(UI|UJ|UY)/, 0, 1, null], [/^(UE|U)/, 0, null, null]],","  V: [[null, 7, 7, 7]],","  W: [[null, 7, 7, 7]],","  X: [[null, 5, 54, 54]],","  Y: [[null, 1, null, null]],","  Z: [[/^(ZHDZH|ZDZH|ZDZ)/, 2, 4, 4], [/^(ZHD|ZD)/, 2, 43, 43], [/^(ZSCH|ZSH|ZH|ZS|Z)/, 4, 4, 4]]","};","","/**"," * Helpers."," */","function pad(code) {","  return (code + '000000').slice(0, 6);","}","","function permutations(code) {","  var codes = [''];","","  for (var i = 0, l = code.length; i < l; i++) {","    var current = code[i];","","    if ((typeof current === 'undefined' ? 'undefined' : _typeof(current)) === 'object') {","","      // Doubling the codes","      for (var j = 0, m = codes.length; j < m; j++) {","        codes.push(codes[j]);","      } // Filling the codes","      for (var _j = 0, _m = codes.length; _j < _m; _j++) {","        var s = current[_j < _m / 2 ? 0 : 1];","        codes[_j] += s !== null ? s : '';","      }","    } else {","","      for (var _j2 = 0, _m2 = codes.length; _j2 < _m2; _j2++) {","        codes[_j2] += current;","      }","    }","  }","","  return codes;","}","","var VOWELS = new Set(['A', 'E', 'I', 'O', 'U', 'Y']);","","/**"," * Function taking a single name and computing its Daitch-Mokotoff soundex code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The Daitch-Mokotoff code."," *"," * @throws {Error} The function expects the name to be a string."," */","function daitchMokotoff(name) {","","  if (typeof name !== 'string') throw Error('talisman/phonetics/daitch-mokotoff: the given name is not a string.');","","  var code = [];","","  var current = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-ZĄĘŢ]/g, '');","","  var start = true,","      lastPattern = void 0;","","  // Applying the rules","  while (current.length) {","","    // Find the subset of rules applying to the current letter","    var firstLetter = current.charAt(0),","        rules = RULES[firstLetter];","","    for (var i = 0, l = rules.length; i < l; i++) {","      var _rules$i = rules[i],","          pattern = _rules$i[0],","          ifFirstLetter = _rules$i[1],","          vowelNext = _rules$i[2],","          usual = _rules$i[3];","","","      var match = pattern ? current.match(pattern) : [firstLetter];","","      if (match) {","        var offset = match[0].length;","","        var correctCode = usual;","","        if (start) correctCode = ifFirstLetter;else if (VOWELS.has(current.charAt(offset))) correctCode = vowelNext;","","        if (lastPattern !== pattern && correctCode !== null) code.push(correctCode);","","        lastPattern = pattern || firstLetter;","","        current = current.slice(offset);","        break;","      }","    }","","    start = false;","  }","","  return permutations(code).map(pad);","}","module.exports = exports['default'];"],"l":{"3":1,"7":1,"18":1,"20":1,"22":1,"24":1,"34":1,"37":1,"72":1,"73":0,"76":1,"77":0,"79":0,"80":0,"82":0,"85":0,"86":0,"88":0,"89":0,"90":0,"94":0,"95":0,"100":0,"103":1,"113":1,"115":0,"117":0,"119":0,"121":0,"125":0,"128":0,"131":0,"132":0,"139":0,"141":0,"142":0,"144":0,"146":0,"148":0,"150":0,"152":0,"153":0,"157":0,"160":0,"162":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/double-metaphone.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/double-metaphone.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0,0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0,0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0,0,0,0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0],"49":[0,0],"50":[0,0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0],"57":[0,0],"58":[0,0,0,0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0,0],"83":[0,0],"84":[0,0],"85":[0,0,0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0,0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0,0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0,0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"isSlavoGermanic","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":33}}},"2":{"name":"isVowel","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":25}}},"3":{"name":"B","line":51,"loc":{"start":{"line":51,"column":5},"end":{"line":51,"column":29}}},"4":{"name":"CH","line":54,"loc":{"start":{"line":54,"column":6},"end":{"line":54,"column":31}}},"5":{"name":"CC","line":67,"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":31}}},"6":{"name":"C","line":78,"loc":{"start":{"line":78,"column":5},"end":{"line":78,"column":29}}},"7":{"name":"_","line":127,"loc":{"start":{"line":127,"column":5},"end":{"line":127,"column":18}}},"8":{"name":"D","line":130,"loc":{"start":{"line":130,"column":5},"end":{"line":130,"column":29}}},"9":{"name":"F","line":138,"loc":{"start":{"line":138,"column":5},"end":{"line":138,"column":29}}},"10":{"name":"GH","line":141,"loc":{"start":{"line":141,"column":6},"end":{"line":141,"column":31}}},"11":{"name":"GN","line":164,"loc":{"start":{"line":164,"column":6},"end":{"line":164,"column":31}}},"12":{"name":"G","line":175,"loc":{"start":{"line":175,"column":5},"end":{"line":175,"column":29}}},"13":{"name":"H","line":210,"loc":{"start":{"line":210,"column":5},"end":{"line":210,"column":29}}},"14":{"name":"J","line":217,"loc":{"start":{"line":217,"column":5},"end":{"line":217,"column":40}}},"15":{"name":"K","line":247,"loc":{"start":{"line":247,"column":5},"end":{"line":247,"column":29}}},"16":{"name":"L","line":250,"loc":{"start":{"line":250,"column":5},"end":{"line":250,"column":48}}},"17":{"name":"M","line":262,"loc":{"start":{"line":262,"column":5},"end":{"line":262,"column":40}}},"18":{"name":"N","line":269,"loc":{"start":{"line":269,"column":5},"end":{"line":269,"column":29}}},"19":{"name":"_","line":272,"loc":{"start":{"line":272,"column":5},"end":{"line":272,"column":18}}},"20":{"name":"P","line":275,"loc":{"start":{"line":275,"column":5},"end":{"line":275,"column":29}}},"21":{"name":"Q","line":282,"loc":{"start":{"line":282,"column":5},"end":{"line":282,"column":29}}},"22":{"name":"R","line":285,"loc":{"start":{"line":285,"column":5},"end":{"line":285,"column":40}}},"23":{"name":"SH","line":294,"loc":{"start":{"line":294,"column":6},"end":{"line":294,"column":31}}},"24":{"name":"SC","line":298,"loc":{"start":{"line":298,"column":6},"end":{"line":298,"column":31}}},"25":{"name":"S","line":313,"loc":{"start":{"line":313,"column":5},"end":{"line":313,"column":40}}},"26":{"name":"TH","line":340,"loc":{"start":{"line":340,"column":6},"end":{"line":340,"column":31}}},"27":{"name":"T","line":347,"loc":{"start":{"line":347,"column":5},"end":{"line":347,"column":29}}},"28":{"name":"V","line":358,"loc":{"start":{"line":358,"column":5},"end":{"line":358,"column":29}}},"29":{"name":"W","line":361,"loc":{"start":{"line":361,"column":5},"end":{"line":361,"column":40}}},"30":{"name":"X","line":384,"loc":{"start":{"line":384,"column":5},"end":{"line":384,"column":40}}},"31":{"name":"Z","line":397,"loc":{"start":{"line":397,"column":5},"end":{"line":397,"column":29}}},"32":{"name":"doubleMetaphone","line":420,"loc":{"start":{"line":420,"column":0},"end":{"line":420,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"4":{"start":{"line":26,"column":0},"end":{"line":26,"column":41}},"5":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":43}},"7":{"start":{"line":32,"column":0},"end":{"line":32,"column":53}},"8":{"start":{"line":34,"column":0},"end":{"line":36,"column":1}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":51}},"10":{"start":{"line":41,"column":0},"end":{"line":48,"column":34}},"11":{"start":{"line":50,"column":0},"end":{"line":410,"column":2}},"12":{"start":{"line":52,"column":4},"end":{"line":52,"column":65}},"13":{"start":{"line":55,"column":4},"end":{"line":63,"column":5}},"14":{"start":{"line":56,"column":6},"end":{"line":56,"column":27}},"15":{"start":{"line":57,"column":11},"end":{"line":63,"column":5}},"16":{"start":{"line":58,"column":6},"end":{"line":58,"column":27}},"17":{"start":{"line":59,"column":11},"end":{"line":63,"column":5}},"18":{"start":{"line":60,"column":6},"end":{"line":60,"column":27}},"19":{"start":{"line":61,"column":11},"end":{"line":63,"column":5}},"20":{"start":{"line":62,"column":6},"end":{"line":62,"column":64}},"21":{"start":{"line":65,"column":4},"end":{"line":65,"column":25}},"22":{"start":{"line":68,"column":4},"end":{"line":74,"column":5}},"23":{"start":{"line":69,"column":6},"end":{"line":73,"column":7}},"24":{"start":{"line":70,"column":8},"end":{"line":70,"column":43}},"25":{"start":{"line":72,"column":8},"end":{"line":72,"column":29}},"26":{"start":{"line":76,"column":4},"end":{"line":76,"column":25}},"27":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"28":{"start":{"line":80,"column":6},"end":{"line":80,"column":27}},"29":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"30":{"start":{"line":84,"column":6},"end":{"line":84,"column":27}},"31":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"32":{"start":{"line":88,"column":6},"end":{"line":88,"column":27}},"33":{"start":{"line":91,"column":4},"end":{"line":93,"column":5}},"34":{"start":{"line":92,"column":6},"end":{"line":92,"column":37}},"35":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"36":{"start":{"line":96,"column":6},"end":{"line":96,"column":27}},"37":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"38":{"start":{"line":100,"column":6},"end":{"line":100,"column":27}},"39":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"40":{"start":{"line":104,"column":6},"end":{"line":104,"column":37}},"41":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"42":{"start":{"line":108,"column":6},"end":{"line":108,"column":27}},"43":{"start":{"line":111,"column":4},"end":{"line":113,"column":5}},"44":{"start":{"line":112,"column":6},"end":{"line":112,"column":77}},"45":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"46":{"start":{"line":116,"column":6},"end":{"line":116,"column":27}},"47":{"start":{"line":119,"column":4},"end":{"line":119,"column":19}},"48":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"49":{"start":{"line":122,"column":6},"end":{"line":122,"column":17}},"50":{"start":{"line":125,"column":4},"end":{"line":125,"column":30}},"51":{"start":{"line":128,"column":4},"end":{"line":128,"column":25}},"52":{"start":{"line":131,"column":4},"end":{"line":134,"column":5}},"53":{"start":{"line":132,"column":6},"end":{"line":133,"column":8}},"54":{"start":{"line":136,"column":4},"end":{"line":136,"column":70}},"55":{"start":{"line":139,"column":4},"end":{"line":139,"column":65}},"56":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"57":{"start":{"line":143,"column":6},"end":{"line":143,"column":27}},"58":{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},"59":{"start":{"line":147,"column":6},"end":{"line":147,"column":79}},"60":{"start":{"line":150,"column":4},"end":{"line":152,"column":5}},"61":{"start":{"line":151,"column":6},"end":{"line":151,"column":29}},"62":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"63":{"start":{"line":155,"column":6},"end":{"line":155,"column":27}},"64":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"65":{"start":{"line":159,"column":6},"end":{"line":159,"column":27}},"66":{"start":{"line":162,"column":4},"end":{"line":162,"column":27}},"67":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"68":{"start":{"line":166,"column":6},"end":{"line":166,"column":34}},"69":{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},"70":{"start":{"line":170,"column":6},"end":{"line":170,"column":34}},"71":{"start":{"line":173,"column":4},"end":{"line":173,"column":39}},"72":{"start":{"line":176,"column":4},"end":{"line":177,"column":45}},"73":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"74":{"start":{"line":180,"column":6},"end":{"line":180,"column":37}},"75":{"start":{"line":183,"column":4},"end":{"line":185,"column":5}},"76":{"start":{"line":184,"column":6},"end":{"line":184,"column":37}},"77":{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},"78":{"start":{"line":188,"column":6},"end":{"line":188,"column":34}},"79":{"start":{"line":191,"column":4},"end":{"line":193,"column":5}},"80":{"start":{"line":192,"column":6},"end":{"line":192,"column":27}},"81":{"start":{"line":195,"column":4},"end":{"line":197,"column":5}},"82":{"start":{"line":196,"column":6},"end":{"line":196,"column":27}},"83":{"start":{"line":199,"column":4},"end":{"line":206,"column":5}},"84":{"start":{"line":201,"column":6},"end":{"line":203,"column":7}},"85":{"start":{"line":202,"column":8},"end":{"line":202,"column":29}},"86":{"start":{"line":205,"column":6},"end":{"line":205,"column":82}},"87":{"start":{"line":208,"column":4},"end":{"line":208,"column":50}},"88":{"start":{"line":211,"column":4},"end":{"line":213,"column":5}},"89":{"start":{"line":212,"column":6},"end":{"line":212,"column":27}},"90":{"start":{"line":215,"column":4},"end":{"line":215,"column":27}},"91":{"start":{"line":218,"column":4},"end":{"line":225,"column":5}},"92":{"start":{"line":220,"column":6},"end":{"line":222,"column":7}},"93":{"start":{"line":221,"column":8},"end":{"line":221,"column":29}},"94":{"start":{"line":224,"column":6},"end":{"line":224,"column":27}},"95":{"start":{"line":227,"column":4},"end":{"line":227,"column":59}},"96":{"start":{"line":229,"column":4},"end":{"line":231,"column":5}},"97":{"start":{"line":230,"column":6},"end":{"line":230,"column":32}},"98":{"start":{"line":233,"column":4},"end":{"line":235,"column":5}},"99":{"start":{"line":234,"column":6},"end":{"line":234,"column":32}},"100":{"start":{"line":237,"column":4},"end":{"line":239,"column":5}},"101":{"start":{"line":238,"column":6},"end":{"line":238,"column":33}},"102":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"103":{"start":{"line":242,"column":6},"end":{"line":242,"column":32}},"104":{"start":{"line":245,"column":4},"end":{"line":245,"column":32}},"105":{"start":{"line":248,"column":4},"end":{"line":248,"column":65}},"106":{"start":{"line":251,"column":4},"end":{"line":258,"column":5}},"107":{"start":{"line":253,"column":6},"end":{"line":255,"column":7}},"108":{"start":{"line":254,"column":8},"end":{"line":254,"column":30}},"109":{"start":{"line":257,"column":6},"end":{"line":257,"column":27}},"110":{"start":{"line":260,"column":4},"end":{"line":260,"column":25}},"111":{"start":{"line":263,"column":4},"end":{"line":265,"column":5}},"112":{"start":{"line":264,"column":6},"end":{"line":264,"column":27}},"113":{"start":{"line":267,"column":4},"end":{"line":267,"column":25}},"114":{"start":{"line":270,"column":4},"end":{"line":270,"column":65}},"115":{"start":{"line":273,"column":4},"end":{"line":273,"column":25}},"116":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"117":{"start":{"line":277,"column":6},"end":{"line":277,"column":27}},"118":{"start":{"line":280,"column":4},"end":{"line":280,"column":71}},"119":{"start":{"line":283,"column":4},"end":{"line":283,"column":65}},"120":{"start":{"line":286,"column":4},"end":{"line":286,"column":59}},"121":{"start":{"line":288,"column":4},"end":{"line":290,"column":5}},"122":{"start":{"line":289,"column":6},"end":{"line":289,"column":33}},"123":{"start":{"line":292,"column":4},"end":{"line":292,"column":30}},"124":{"start":{"line":295,"column":4},"end":{"line":296,"column":6}},"125":{"start":{"line":299,"column":4},"end":{"line":305,"column":5}},"126":{"start":{"line":300,"column":6},"end":{"line":302,"column":7}},"127":{"start":{"line":301,"column":8},"end":{"line":301,"column":94}},"128":{"start":{"line":304,"column":6},"end":{"line":304,"column":110}},"129":{"start":{"line":307,"column":4},"end":{"line":309,"column":5}},"130":{"start":{"line":308,"column":6},"end":{"line":308,"column":27}},"131":{"start":{"line":311,"column":4},"end":{"line":311,"column":39}},"132":{"start":{"line":314,"column":4},"end":{"line":316,"column":5}},"133":{"start":{"line":315,"column":6},"end":{"line":315,"column":29}},"134":{"start":{"line":318,"column":4},"end":{"line":320,"column":5}},"135":{"start":{"line":319,"column":6},"end":{"line":319,"column":27}},"136":{"start":{"line":322,"column":4},"end":{"line":324,"column":5}},"137":{"start":{"line":323,"column":6},"end":{"line":323,"column":37}},"138":{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},"139":{"start":{"line":327,"column":6},"end":{"line":327,"column":59}},"140":{"start":{"line":330,"column":4},"end":{"line":332,"column":5}},"141":{"start":{"line":331,"column":6},"end":{"line":331,"column":67}},"142":{"start":{"line":334,"column":4},"end":{"line":336,"column":5}},"143":{"start":{"line":335,"column":6},"end":{"line":335,"column":37}},"144":{"start":{"line":338,"column":4},"end":{"line":338,"column":147}},"145":{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},"146":{"start":{"line":342,"column":6},"end":{"line":342,"column":27}},"147":{"start":{"line":345,"column":4},"end":{"line":345,"column":25}},"148":{"start":{"line":348,"column":4},"end":{"line":350,"column":5}},"149":{"start":{"line":349,"column":6},"end":{"line":349,"column":27}},"150":{"start":{"line":352,"column":4},"end":{"line":354,"column":5}},"151":{"start":{"line":353,"column":6},"end":{"line":353,"column":37}},"152":{"start":{"line":356,"column":4},"end":{"line":356,"column":71}},"153":{"start":{"line":359,"column":4},"end":{"line":359,"column":65}},"154":{"start":{"line":362,"column":4},"end":{"line":364,"column":5}},"155":{"start":{"line":363,"column":6},"end":{"line":363,"column":27}},"156":{"start":{"line":366,"column":4},"end":{"line":367,"column":23}},"157":{"start":{"line":369,"column":4},"end":{"line":372,"column":5}},"158":{"start":{"line":370,"column":6},"end":{"line":370,"column":24}},"159":{"start":{"line":371,"column":6},"end":{"line":371,"column":69}},"160":{"start":{"line":374,"column":4},"end":{"line":376,"column":5}},"161":{"start":{"line":375,"column":6},"end":{"line":375,"column":49}},"162":{"start":{"line":378,"column":4},"end":{"line":380,"column":5}},"163":{"start":{"line":379,"column":6},"end":{"line":379,"column":75}},"164":{"start":{"line":382,"column":4},"end":{"line":382,"column":35}},"165":{"start":{"line":385,"column":4},"end":{"line":387,"column":5}},"166":{"start":{"line":386,"column":6},"end":{"line":386,"column":27}},"167":{"start":{"line":389,"column":4},"end":{"line":389,"column":66}},"168":{"start":{"line":391,"column":4},"end":{"line":393,"column":5}},"169":{"start":{"line":392,"column":6},"end":{"line":392,"column":34}},"170":{"start":{"line":395,"column":4},"end":{"line":395,"column":44}},"171":{"start":{"line":398,"column":4},"end":{"line":400,"column":5}},"172":{"start":{"line":399,"column":6},"end":{"line":399,"column":27}},"173":{"start":{"line":402,"column":4},"end":{"line":402,"column":59}},"174":{"start":{"line":404,"column":4},"end":{"line":406,"column":5}},"175":{"start":{"line":405,"column":6},"end":{"line":405,"column":39}},"176":{"start":{"line":408,"column":4},"end":{"line":408,"column":30}},"177":{"start":{"line":420,"column":0},"end":{"line":478,"column":1}},"178":{"start":{"line":421,"column":2},"end":{"line":421,"column":115}},"179":{"start":{"line":421,"column":32},"end":{"line":421,"column":115}},"180":{"start":{"line":424,"column":2},"end":{"line":424,"column":50}},"181":{"start":{"line":427,"column":2},"end":{"line":429,"column":29}},"182":{"start":{"line":432,"column":2},"end":{"line":433,"column":21}},"183":{"start":{"line":436,"column":2},"end":{"line":436,"column":26}},"184":{"start":{"line":438,"column":2},"end":{"line":475,"column":3}},"185":{"start":{"line":440,"column":4},"end":{"line":440,"column":76}},"186":{"start":{"line":440,"column":70},"end":{"line":440,"column":76}},"187":{"start":{"line":443,"column":4},"end":{"line":443,"column":35}},"188":{"start":{"line":445,"column":4},"end":{"line":445,"column":19}},"189":{"start":{"line":448,"column":4},"end":{"line":453,"column":5}},"190":{"start":{"line":449,"column":6},"end":{"line":452,"column":7}},"191":{"start":{"line":450,"column":8},"end":{"line":450,"column":26}},"192":{"start":{"line":451,"column":8},"end":{"line":451,"column":28}},"193":{"start":{"line":456,"column":4},"end":{"line":456,"column":33}},"194":{"start":{"line":458,"column":4},"end":{"line":471,"column":5}},"195":{"start":{"line":459,"column":6},"end":{"line":465,"column":62}},"196":{"start":{"line":467,"column":6},"end":{"line":467,"column":25}},"197":{"start":{"line":469,"column":6},"end":{"line":469,"column":45}},"198":{"start":{"line":469,"column":15},"end":{"line":469,"column":45}},"199":{"start":{"line":470,"column":6},"end":{"line":470,"column":49}},"200":{"start":{"line":470,"column":15},"end":{"line":470,"column":49}},"201":{"start":{"line":474,"column":4},"end":{"line":474,"column":18}},"202":{"start":{"line":477,"column":2},"end":{"line":477,"column":72}},"203":{"start":{"line":479,"column":0},"end":{"line":479,"column":36}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":9},"end":{"line":35,"column":28}},{"start":{"line":35,"column":32},"end":{"line":35,"column":50}}]},"2":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":58},"end":{"line":52,"column":59}},{"start":{"line":52,"column":62},"end":{"line":52,"column":63}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":11}},{"start":{"line":55,"column":15},"end":{"line":55,"column":47}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":11},"end":{"line":57,"column":11}},{"start":{"line":57,"column":11},"end":{"line":57,"column":11}}]},"6":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":15},"end":{"line":57,"column":19}},{"start":{"line":57,"column":24},"end":{"line":57,"column":61}},{"start":{"line":57,"column":65},"end":{"line":57,"column":102}},{"start":{"line":57,"column":107},"end":{"line":57,"column":138}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":11},"end":{"line":59,"column":11}},{"start":{"line":59,"column":11},"end":{"line":59,"column":11}}]},"8":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":15},"end":{"line":59,"column":46}},{"start":{"line":59,"column":50},"end":{"line":59,"column":79}},{"start":{"line":59,"column":83},"end":{"line":59,"column":120}},{"start":{"line":59,"column":124},"end":{"line":59,"column":161}},{"start":{"line":59,"column":166},"end":{"line":59,"column":170}},{"start":{"line":59,"column":174},"end":{"line":59,"column":211}},{"start":{"line":59,"column":216},"end":{"line":59,"column":253}}]},"9":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":11},"end":{"line":61,"column":11}},{"start":{"line":61,"column":11},"end":{"line":61,"column":11}}]},"10":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":45},"end":{"line":62,"column":48}},{"start":{"line":62,"column":51},"end":{"line":62,"column":54}}]},"11":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"12":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":49}},{"start":{"line":68,"column":53},"end":{"line":68,"column":87}}]},"13":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"14":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":10},"end":{"line":69,"column":19}},{"start":{"line":69,"column":23},"end":{"line":69,"column":56}},{"start":{"line":69,"column":60},"end":{"line":69,"column":105}}]},"15":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"16":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":15}},{"start":{"line":79,"column":19},"end":{"line":79,"column":53}},{"start":{"line":79,"column":57},"end":{"line":79,"column":92}},{"start":{"line":79,"column":96},"end":{"line":79,"column":129}},{"start":{"line":79,"column":134},"end":{"line":79,"column":167}},{"start":{"line":79,"column":171},"end":{"line":79,"column":217}}]},"17":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"18":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":12}},{"start":{"line":83,"column":16},"end":{"line":83,"column":50}}]},"19":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"20":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"21":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"22":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":38}},{"start":{"line":95,"column":42},"end":{"line":95,"column":78}}]},"23":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"24":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"25":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":38}},{"start":{"line":103,"column":42},"end":{"line":103,"column":85}}]},"26":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":44},"end":{"line":103,"column":53}},{"start":{"line":103,"column":57},"end":{"line":103,"column":84}}]},"27":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"28":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"29":{"line":112,"type":"cond-expr","locations":[{"start":{"line":112,"column":63},"end":{"line":112,"column":66}},{"start":{"line":112,"column":69},"end":{"line":112,"column":72}}]},"30":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"31":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"32":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":49}},{"start":{"line":121,"column":53},"end":{"line":121,"column":90}}]},"33":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"34":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":58},"end":{"line":132,"column":71}},{"start":{"line":132,"column":74},"end":{"line":132,"column":101}}]},"35":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":63},"end":{"line":136,"column":64}},{"start":{"line":136,"column":67},"end":{"line":136,"column":68}}]},"36":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":58},"end":{"line":139,"column":59}},{"start":{"line":139,"column":62},"end":{"line":139,"column":63}}]},"37":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"38":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":11}},{"start":{"line":142,"column":15},"end":{"line":142,"column":50}}]},"39":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"40":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":49},"end":{"line":147,"column":62}},{"start":{"line":147,"column":65},"end":{"line":147,"column":78}}]},"41":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"42":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":15}},{"start":{"line":150,"column":19},"end":{"line":150,"column":60}},{"start":{"line":150,"column":64},"end":{"line":150,"column":71}},{"start":{"line":150,"column":75},"end":{"line":150,"column":116}},{"start":{"line":150,"column":120},"end":{"line":150,"column":127}},{"start":{"line":150,"column":131},"end":{"line":150,"column":170}}]},"43":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"44":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":15}},{"start":{"line":154,"column":19},"end":{"line":154,"column":52}},{"start":{"line":154,"column":56},"end":{"line":154,"column":101}}]},"45":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"46":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":11}},{"start":{"line":158,"column":15},"end":{"line":158,"column":48}}]},"47":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":165,"column":4}},{"start":{"line":165,"column":4},"end":{"line":165,"column":4}}]},"48":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":8},"end":{"line":165,"column":17}},{"start":{"line":165,"column":21},"end":{"line":165,"column":49}},{"start":{"line":165,"column":53},"end":{"line":165,"column":77}}]},"49":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"50":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":42}},{"start":{"line":169,"column":46},"end":{"line":169,"column":79}},{"start":{"line":169,"column":83},"end":{"line":169,"column":107}}]},"51":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"52":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"53":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"54":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":25}},{"start":{"line":187,"column":29},"end":{"line":187,"column":53}}]},"55":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":191,"column":4}},{"start":{"line":191,"column":4},"end":{"line":191,"column":4}}]},"56":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":12}},{"start":{"line":191,"column":17},"end":{"line":191,"column":35}},{"start":{"line":191,"column":39},"end":{"line":191,"column":87}}]},"57":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"58":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":9},"end":{"line":195,"column":26}},{"start":{"line":195,"column":30},"end":{"line":195,"column":48}},{"start":{"line":195,"column":53},"end":{"line":195,"column":96}},{"start":{"line":195,"column":100},"end":{"line":195,"column":140}},{"start":{"line":195,"column":144},"end":{"line":195,"column":188}}]},"59":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"60":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":34}},{"start":{"line":199,"column":38},"end":{"line":199,"column":82}}]},"61":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":6},"end":{"line":201,"column":6}},{"start":{"line":201,"column":6},"end":{"line":201,"column":6}}]},"62":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":10},"end":{"line":201,"column":47}},{"start":{"line":201,"column":51},"end":{"line":201,"column":80}},{"start":{"line":201,"column":84},"end":{"line":201,"column":118}}]},"63":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":52},"end":{"line":205,"column":65}},{"start":{"line":205,"column":68},"end":{"line":205,"column":81}}]},"64":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":43},"end":{"line":208,"column":44}},{"start":{"line":208,"column":47},"end":{"line":208,"column":48}}]},"65":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"66":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":9},"end":{"line":211,"column":13}},{"start":{"line":211,"column":17},"end":{"line":211,"column":51}},{"start":{"line":211,"column":56},"end":{"line":211,"column":90}}]},"67":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"68":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":40}},{"start":{"line":218,"column":44},"end":{"line":218,"column":74}}]},"69":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":6}},{"start":{"line":220,"column":6},"end":{"line":220,"column":6}}]},"70":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":10},"end":{"line":220,"column":14}},{"start":{"line":220,"column":18},"end":{"line":220,"column":51}},{"start":{"line":220,"column":55},"end":{"line":220,"column":85}}]},"71":{"line":227,"type":"cond-expr","locations":[{"start":{"line":227,"column":53},"end":{"line":227,"column":54}},{"start":{"line":227,"column":57},"end":{"line":227,"column":58}}]},"72":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":229,"column":4}},{"start":{"line":229,"column":4},"end":{"line":229,"column":4}}]},"73":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":8},"end":{"line":229,"column":12}},{"start":{"line":229,"column":16},"end":{"line":229,"column":48}}]},"74":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"75":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":8},"end":{"line":233,"column":42}},{"start":{"line":233,"column":46},"end":{"line":233,"column":70}},{"start":{"line":233,"column":74},"end":{"line":233,"column":113}}]},"76":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":4},"end":{"line":237,"column":4}},{"start":{"line":237,"column":4},"end":{"line":237,"column":4}}]},"77":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"78":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":8},"end":{"line":241,"column":60}},{"start":{"line":241,"column":64},"end":{"line":241,"column":106}}]},"79":{"line":248,"type":"cond-expr","locations":[{"start":{"line":248,"column":58},"end":{"line":248,"column":59}},{"start":{"line":248,"column":62},"end":{"line":248,"column":63}}]},"80":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":251,"column":4}},{"start":{"line":251,"column":4},"end":{"line":251,"column":4}}]},"81":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":6}},{"start":{"line":253,"column":6},"end":{"line":253,"column":6}}]},"82":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":10},"end":{"line":253,"column":28}},{"start":{"line":253,"column":32},"end":{"line":253,"column":83}},{"start":{"line":253,"column":87},"end":{"line":253,"column":180}},{"start":{"line":253,"column":184},"end":{"line":253,"column":220}}]},"83":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":103},"end":{"line":253,"column":134}},{"start":{"line":253,"column":138},"end":{"line":253,"column":179}}]},"84":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]},"85":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":8},"end":{"line":263,"column":43}},{"start":{"line":263,"column":48},"end":{"line":263,"column":69}},{"start":{"line":263,"column":73},"end":{"line":263,"column":107}},{"start":{"line":263,"column":112},"end":{"line":263,"column":145}}]},"86":{"line":270,"type":"cond-expr","locations":[{"start":{"line":270,"column":58},"end":{"line":270,"column":59}},{"start":{"line":270,"column":62},"end":{"line":270,"column":63}}]},"87":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"88":{"line":280,"type":"cond-expr","locations":[{"start":{"line":280,"column":64},"end":{"line":280,"column":65}},{"start":{"line":280,"column":68},"end":{"line":280,"column":69}}]},"89":{"line":283,"type":"cond-expr","locations":[{"start":{"line":283,"column":58},"end":{"line":283,"column":59}},{"start":{"line":283,"column":62},"end":{"line":283,"column":63}}]},"90":{"line":286,"type":"cond-expr","locations":[{"start":{"line":286,"column":53},"end":{"line":286,"column":54}},{"start":{"line":286,"column":57},"end":{"line":286,"column":58}}]},"91":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"92":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":25}},{"start":{"line":288,"column":29},"end":{"line":288,"column":53}},{"start":{"line":288,"column":57},"end":{"line":288,"column":91}},{"start":{"line":288,"column":95},"end":{"line":288,"column":138}}]},"93":{"line":295,"type":"cond-expr","locations":[{"start":{"line":295,"column":69},"end":{"line":295,"column":82}},{"start":{"line":295,"column":85},"end":{"line":295,"column":98}}]},"94":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"95":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":6},"end":{"line":300,"column":6}},{"start":{"line":300,"column":6},"end":{"line":300,"column":6}}]},"96":{"line":301,"type":"cond-expr","locations":[{"start":{"line":301,"column":61},"end":{"line":301,"column":64}},{"start":{"line":301,"column":67},"end":{"line":301,"column":77}}]},"97":{"line":304,"type":"cond-expr","locations":[{"start":{"line":304,"column":96},"end":{"line":304,"column":99}},{"start":{"line":304,"column":102},"end":{"line":304,"column":105}}]},"98":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":19},"end":{"line":304,"column":23}},{"start":{"line":304,"column":27},"end":{"line":304,"column":56}},{"start":{"line":304,"column":60},"end":{"line":304,"column":93}}]},"99":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"100":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":4},"end":{"line":314,"column":4}},{"start":{"line":314,"column":4},"end":{"line":314,"column":4}}]},"101":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":4},"end":{"line":318,"column":4}},{"start":{"line":318,"column":4},"end":{"line":318,"column":4}}]},"102":{"line":318,"type":"binary-expr","locations":[{"start":{"line":318,"column":8},"end":{"line":318,"column":12}},{"start":{"line":318,"column":16},"end":{"line":318,"column":49}}]},"103":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":4},"end":{"line":322,"column":4}},{"start":{"line":322,"column":4},"end":{"line":322,"column":4}}]},"104":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":4},"end":{"line":326,"column":4}},{"start":{"line":326,"column":4},"end":{"line":326,"column":4}}]},"105":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":8},"end":{"line":326,"column":47}},{"start":{"line":326,"column":51},"end":{"line":326,"column":83}}]},"106":{"line":327,"type":"cond-expr","locations":[{"start":{"line":327,"column":45},"end":{"line":327,"column":48}},{"start":{"line":327,"column":51},"end":{"line":327,"column":54}}]},"107":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":4},"end":{"line":330,"column":4}},{"start":{"line":330,"column":4},"end":{"line":330,"column":4}}]},"108":{"line":330,"type":"binary-expr","locations":[{"start":{"line":330,"column":8},"end":{"line":330,"column":12}},{"start":{"line":330,"column":16},"end":{"line":330,"column":59}},{"start":{"line":330,"column":63},"end":{"line":330,"column":96}}]},"109":{"line":331,"type":"cond-expr","locations":[{"start":{"line":331,"column":60},"end":{"line":331,"column":61}},{"start":{"line":331,"column":64},"end":{"line":331,"column":65}}]},"110":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":4},"end":{"line":334,"column":4}},{"start":{"line":334,"column":4},"end":{"line":334,"column":4}}]},"111":{"line":338,"type":"cond-expr","locations":[{"start":{"line":338,"column":81},"end":{"line":338,"column":84}},{"start":{"line":338,"column":87},"end":{"line":338,"column":91}}]},"112":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":14},"end":{"line":338,"column":31}},{"start":{"line":338,"column":35},"end":{"line":338,"column":77}}]},"113":{"line":338,"type":"cond-expr","locations":[{"start":{"line":338,"column":140},"end":{"line":338,"column":141}},{"start":{"line":338,"column":144},"end":{"line":338,"column":145}}]},"114":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":4},"end":{"line":341,"column":4}},{"start":{"line":341,"column":4},"end":{"line":341,"column":4}}]},"115":{"line":341,"type":"binary-expr","locations":[{"start":{"line":341,"column":8},"end":{"line":341,"column":50}},{"start":{"line":341,"column":54},"end":{"line":341,"column":91}},{"start":{"line":341,"column":95},"end":{"line":341,"column":124}}]},"116":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":348,"column":4}},{"start":{"line":348,"column":4},"end":{"line":348,"column":4}}]},"117":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":8},"end":{"line":348,"column":40}},{"start":{"line":348,"column":44},"end":{"line":348,"column":84}}]},"118":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":4},"end":{"line":352,"column":4}},{"start":{"line":352,"column":4},"end":{"line":352,"column":4}}]},"119":{"line":352,"type":"binary-expr","locations":[{"start":{"line":352,"column":8},"end":{"line":352,"column":38}},{"start":{"line":352,"column":42},"end":{"line":352,"column":73}}]},"120":{"line":356,"type":"cond-expr","locations":[{"start":{"line":356,"column":64},"end":{"line":356,"column":65}},{"start":{"line":356,"column":68},"end":{"line":356,"column":69}}]},"121":{"line":359,"type":"cond-expr","locations":[{"start":{"line":359,"column":58},"end":{"line":359,"column":59}},{"start":{"line":359,"column":62},"end":{"line":359,"column":63}}]},"122":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":4},"end":{"line":362,"column":4}},{"start":{"line":362,"column":4},"end":{"line":362,"column":4}}]},"123":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":4},"end":{"line":369,"column":4}},{"start":{"line":369,"column":4},"end":{"line":369,"column":4}}]},"124":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":8},"end":{"line":369,"column":12}},{"start":{"line":369,"column":16},"end":{"line":369,"column":84}}]},"125":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":24},"end":{"line":369,"column":49}},{"start":{"line":369,"column":53},"end":{"line":369,"column":83}}]},"126":{"line":371,"type":"cond-expr","locations":[{"start":{"line":371,"column":58},"end":{"line":371,"column":61}},{"start":{"line":371,"column":64},"end":{"line":371,"column":67}}]},"127":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":4},"end":{"line":374,"column":4}},{"start":{"line":374,"column":4},"end":{"line":374,"column":4}}]},"128":{"line":374,"type":"binary-expr","locations":[{"start":{"line":374,"column":8},"end":{"line":374,"column":25}},{"start":{"line":374,"column":29},"end":{"line":374,"column":63}},{"start":{"line":374,"column":67},"end":{"line":374,"column":96}},{"start":{"line":374,"column":100},"end":{"line":374,"column":159}}]},"129":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":4},"end":{"line":378,"column":4}},{"start":{"line":378,"column":4},"end":{"line":378,"column":4}}]},"130":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":4},"end":{"line":385,"column":4}},{"start":{"line":385,"column":4},"end":{"line":385,"column":4}}]},"131":{"line":389,"type":"cond-expr","locations":[{"start":{"line":389,"column":60},"end":{"line":389,"column":61}},{"start":{"line":389,"column":64},"end":{"line":389,"column":65}}]},"132":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":4},"end":{"line":391,"column":4}},{"start":{"line":391,"column":4},"end":{"line":391,"column":4}}]},"133":{"line":391,"type":"binary-expr","locations":[{"start":{"line":391,"column":8},"end":{"line":391,"column":25}},{"start":{"line":391,"column":29},"end":{"line":391,"column":72}},{"start":{"line":391,"column":76},"end":{"line":391,"column":118}}]},"134":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":4},"end":{"line":398,"column":4}},{"start":{"line":398,"column":4},"end":{"line":398,"column":4}}]},"135":{"line":402,"type":"cond-expr","locations":[{"start":{"line":402,"column":53},"end":{"line":402,"column":54}},{"start":{"line":402,"column":57},"end":{"line":402,"column":58}}]},"136":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":4},"end":{"line":404,"column":4}},{"start":{"line":404,"column":4},"end":{"line":404,"column":4}}]},"137":{"line":404,"type":"binary-expr","locations":[{"start":{"line":404,"column":8},"end":{"line":404,"column":52}},{"start":{"line":404,"column":56},"end":{"line":404,"column":59}},{"start":{"line":404,"column":63},"end":{"line":404,"column":86}},{"start":{"line":404,"column":90},"end":{"line":404,"column":123}}]},"138":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":2},"end":{"line":421,"column":2}},{"start":{"line":421,"column":2},"end":{"line":421,"column":2}}]},"139":{"line":427,"type":"cond-expr","locations":[{"start":{"line":427,"column":70},"end":{"line":427,"column":71}},{"start":{"line":427,"column":74},"end":{"line":427,"column":75}}]},"140":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":4},"end":{"line":440,"column":4}},{"start":{"line":440,"column":4},"end":{"line":440,"column":4}}]},"141":{"line":440,"type":"binary-expr","locations":[{"start":{"line":440,"column":8},"end":{"line":440,"column":20}},{"start":{"line":440,"column":24},"end":{"line":440,"column":43}},{"start":{"line":440,"column":47},"end":{"line":440,"column":68}}]},"142":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":4},"end":{"line":448,"column":4}},{"start":{"line":448,"column":4},"end":{"line":448,"column":4}}]},"143":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":6},"end":{"line":449,"column":6}},{"start":{"line":449,"column":6},"end":{"line":449,"column":6}}]},"144":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":4},"end":{"line":458,"column":4}},{"start":{"line":458,"column":4},"end":{"line":458,"column":4}}]},"145":{"line":461,"type":"cond-expr","locations":[{"start":{"line":461,"column":41},"end":{"line":461,"column":45}},{"start":{"line":461,"column":48},"end":{"line":461,"column":56}}]},"146":{"line":463,"type":"cond-expr","locations":[{"start":{"line":463,"column":42},"end":{"line":463,"column":46}},{"start":{"line":463,"column":49},"end":{"line":463,"column":58}}]},"147":{"line":465,"type":"cond-expr","locations":[{"start":{"line":465,"column":48},"end":{"line":465,"column":49}},{"start":{"line":465,"column":52},"end":{"line":465,"column":61}}]},"148":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":6},"end":{"line":469,"column":6}},{"start":{"line":469,"column":6},"end":{"line":469,"column":6}}]},"149":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":6},"end":{"line":470,"column":6}},{"start":{"line":470,"column":6},"end":{"line":470,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = doubleMetaphone;","/* eslint no-constant-condition: 0 */","/**"," * Talisman phonetics/double-metaphone"," * ===================================="," *"," * The double metaphone algorithm."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Metaphone#Double_Metaphone"," *"," * [Author]:"," * Lawrence Philips, 2000"," */","","/**"," * Helpers."," */","var STARTING_REGEX = /^GN|KN|PN|WR|PS$/;","","var SLAVO_GERMANIC_REGEX = /W|K|CZ|WITZ/;","","function isSlavoGermanic(string) {","  return SLAVO_GERMANIC_REGEX.test(string);","}","","var VOWELS = new Set(['A', 'E', 'I', 'O', 'U', 'Y']);","","function isVowel(string) {","  return string.length === 1 && VOWELS.has(string);","}","","/**"," * Lookups."," */","var CHSet1 = new Set(['HARAC', 'HARIS']),","    CHSet2 = new Set(['HOR', 'HYM', 'HIA', 'HEM']),","    CHSet3 = new Set(['VAN ', 'VON ']),","    CHSet4 = new Set(['ORCHES', 'ARCHIT', 'ORCHID']),","    ChSet5 = new Set(['T', 'S']),","    CHSet6 = new Set(['A', 'O', 'U', 'E']),","    CHSet7 = new Set(['L', 'R', 'N', 'M', 'B', 'H', 'F', 'V', 'W', ' ']),","    CSet1 = new Set(['CE', 'CI']);","","var LOOKUPS = {","  B: function B(string, pos) {","    return ['P', 'P', string.substr(pos + 1, 1) === 'B' ? 2 : 1];","  },","  CH: function CH(string, pos) {","    if (pos && string.substr(pos, 4) === 'CHAE') {","      return ['K', 'X', 2];","    } else if (!pos && (CHSet1.has(string.substr(pos + 1, 5)) || CHSet2.has(string.substr(pos + 1, 3))) && string.substr(0, 5) !== 'CHORE') {","      return ['K', 'K', 2];","    } else if (CHSet3.has(string.substr(0, 4)) || string.substr(0, 3) === 'SCH' || CHSet4.has(string.substr(pos - 2, 6)) || ChSet5.has(string.substr(pos + 2, 1)) || (!pos || CHSet6.has(string.substr(pos - 1, 1))) && CHSet7.has(string.substr(pos + 2, 1))) {","      return ['K', 'K', 2];","    } else if (pos) {","      return [string.substr(0, 2) === 'MC' ? 'K' : 'X', 'K', 2];","    }","","    return ['X', 'X', 2];","  },","  CC: function CC(string, pos) {","    if (/^I|E|H$/.test(string.substr(pos + 2, 1)) && string.substr(pos + 2, 2) !== 'HU') {","      if (pos === 1 && string.substr(pos - 1, 1) === 'A' || /^UCCE(E|S)$/.test(string.substr(pos - 1, 5))) {","        return [['K', 'S'], ['K', 'S'], 3];","      } else {","        return ['X', 'X', 3];","      }","    }","","    return ['K', 'K', 2];","  },","  C: function C(string, pos) {","    if (pos > 1 && isVowel(string.substr(pos - 2, 1)) && string.substr(pos - 1, 3) === 'ACH' && string.substr(pos + 2, 1) !== 'I' && (string.substr(pos + 2, 1) !== 'E' || /^(B|M)ACHER$/.test(string.substr(pos - 2, 6)))) {","      return ['K', 'K', 2];","    }","","    if (!pos && string.substr(pos, 6) === 'CAESAR') {","      return ['S', 'S', 2];","    }","","    if (string.substr(pos, 4) === 'CHIA') {","      return ['K', 'K', 2];","    }","","    if (string.substr(pos, 2) === 'CH') {","      return LOOKUPS.CH(string, pos);","    }","","    if (string.substr(pos, 2) === 'CZ' && string.substr(pos - 2, 4) !== 'WICZ') {","      return ['S', 'X', 2];","    }","","    if (string.substr(pos + 1, 3) === 'CIA') {","      return ['X', 'X', 3];","    }","","    if (string.substr(pos, 2) === 'CC' && !(pos === 1 || string.substr(0, 1) === 'M')) {","      return LOOKUPS.CC(string, pos);","    }","","    if (/^C(K|G|Q)$/.test(string.substr(pos, 2))) {","      return ['K', 'K', 2];","    }","","    if (/^C(I|E|Y)$/.test(string.substr(pos, 2))) {","      return ['S', /^CI(O|E|A)$/.test(string.substr(pos, 3)) ? 'X' : 'S', 2];","    }","","    if (/^ (C|Q|G)$/.test(string.substr(pos + 1, 2))) {","      return ['K', 'K', 3];","    }","","    var offset = 1;","","    if (/^C|K|Q$/.test(string.substr(pos + 1, 1)) && !CSet1.has(string.substr(pos + 1, 2))) {","      offset = 2;","    }","","    return ['K', 'K', offset];","  },","  Ç: function _() {","    return ['S', 'S', 1];","  },","  D: function D(string, pos) {","    if (string.substr(pos, 2) === 'DG') {","      return (/^I|E|Y$/.test(string.substr(pos + 2, 1)) ? ['J', 'J', 3] : [['T', 'K'], ['T', 'K'], 2]","      );","    }","","    return ['T', 'T', /^D(T|D)$/.test(string.substr(pos, 2)) ? 2 : 1];","  },","  F: function F(string, pos) {","    return ['F', 'F', string.substr(pos + 1, 1) === 'F' ? 2 : 1];","  },","  GH: function GH(string, pos) {","    if (pos && !isVowel(string.substr(pos - 1, 1))) {","      return ['K', 'K', 2];","    }","","    if (!pos) {","      return string.substr(pos + 2, 1) === 'I' ? ['J', 'J', 2] : ['K', 'K', 2];","    }","","    if (pos > 1 && /^B|H|D$/.test(string.substr(pos - 2, 1)) || pos > 2 && /^B|H|D$/.test(string.substr(pos - 3, 1)) || pos > 3 && /^B|H$/.test(string.substr(pos - 4, 1))) {","      return [null, null, 2];","    }","","    if (pos > 2 && string.substr(pos - 1, 1) === 'U' && /^C|G|L|R|T$/.test(string.substr(pos - 3, 1))) {","      return ['F', 'F', 2];","    }","","    if (pos && string.substr(pos - 1, 1) !== 'I') {","      return ['K', 'K', 2];","    }","","    return [null, null, 2];","  },","  GN: function GN(string, pos) {","    if (pos === 1 && isVowel(string.substr(0, 1)) && !isSlavoGermanic(string)) {","      return [['K', 'N'], 'N', 2];","    }","","    if (string.substr(pos + 2, 2) !== 'EY' && string.substr(pos + 1, 1) !== 'Y' && !isSlavoGermanic(string)) {","      return ['N', ['K', 'N'], 2];","    }","","    return [['K', 'N'], ['K', 'N'], 2];","  },","  G: function G(string, pos) {","    var nextLetter = string.substr(pos + 1, 1),","        nextPair = string.substr(pos + 1, 2);","","    if (nextLetter === 'H') {","      return LOOKUPS.GH(string, pos);","    }","","    if (nextLetter === 'N') {","      return LOOKUPS.GN(string, pos);","    }","","    if (nextPair === 'LI' && !isSlavoGermanic(string)) {","      return [['K', 'L'], 'L', 2];","    }","","    if (!pos && (nextLetter === 'Y' || /^(E(S|P|B|L|Y|I|R)|I(B|L|N|E))$/.test(nextPair))) {","      return ['K', 'J', 2];","    }","","    if ((nextPair === 'ER' || nextLetter === 'Y') && !/^(D|R|M)ANGER$/.test(string.substr(0, 6)) && !/^E|I$/.test(string.substr(pos - 1, 1)) && !/^(R|O)GY$/.test(string.substr(pos - 1, 3))) {","      return ['K', 'J', 2];","    }","","    if (/^E|I|Y$/.test(nextLetter) || /^(A|O)GGI$/.test(string.substr(pos - 1, 4))) {","","      if (/^V(A|O)N /.test(string.substr(0, 4)) || string.substr(0, 3) === 'SCH' || string.substr(pos + 1, 2 === 'ET')) {","        return ['K', 'K', 2];","      }","","      return string.substr(pos + 1, 4) === 'IER ' ? ['J', 'J', 2] : ['J', 'K', 2];","    }","","    return ['K', 'K', nextLetter === 'G' ? 2 : 1];","  },","  H: function H(string, pos) {","    if ((!pos || isVowel(string.substr(pos - 1, 1))) && isVowel(string.substr(pos + 1, 1))) {","      return ['H', 'H', 2];","    }","","    return [null, null, 1];","  },","  J: function J(string, pos, lastIndex) {","    if (string.substr(pos, 4) === 'JOSE' || string.substr(0, 4) === 'SAN ') {","","      if (!pos && string.substr(pos + 4, 1) === ' ' || string.substr(0, 4) === 'SAN ') {","        return ['H', 'H', 1];","      }","","      return ['J', 'H', 1];","    }","","    var offset = string.substr(pos + 1, 1) === 'J' ? 2 : 1;","","    if (!pos && string.substr(pos, 4) !== 'JOSE') {","      return ['J', 'A', offset];","    }","","    if (isVowel(string.substr(pos - 1, 1)) && !isSlavoGermanic(string) && /^A|O$/.test(string.substr(pos + 1, 1))) {","      return ['J', 'H', offset];","    }","","    if (lastIndex === pos) {","      return ['J', null, offset];","    }","","    if (!/^L|T|K|S|N|M|B|Z$/.test(string.substr(pos + 1, 1)) && !/^S|K|L$/.test(string.substr(pos - 1, 1))) {","      return ['J', 'J', offset];","    }","","    return [null, null, offset];","  },","  K: function K(string, pos) {","    return ['K', 'K', string.substr(pos + 1, 1) === 'K' ? 2 : 1];","  },","  L: function L(string, pos, lastIndex, length) {","    if (string.substr(pos + 1, 1) === 'L') {","","      if (pos === length - 3 && /^(ILL(O|A)|ALLE)$/.test(string.substr(pos - 1, 4)) || /^(A|O)S$/.test(string.substr(lastIndex - 1, 2) || /^A|O$/.test(string.substr(lastIndex, 1))) && string.substr(pos - 1, 4) === 'ALLE') {","        return ['L', null, 2];","      }","","      return ['L', 'L', 2];","    }","","    return ['L', 'L', 1];","  },","  M: function M(string, pos, lastIndex) {","    if (string.substr(pos - 1, 3) === 'UMB' && (pos === lastIndex - 1 || string.substr(pos + 2, 2) === 'ER') || string.substr(pos + 1, 1) === 'M') {","      return ['M', 'M', 2];","    }","","    return ['M', 'M', 1];","  },","  N: function N(string, pos) {","    return ['N', 'N', string.substr(pos + 1, 1) === 'N' ? 2 : 1];","  },","  Ñ: function _() {","    return ['N', 'N', 1];","  },","  P: function P(string, pos) {","    if (string.substr(pos + 1, 1) === 'H') {","      return ['F', 'F', 2];","    }","","    return ['P', 'P', /^P|B$/.test(string.substr(pos + 1, 1)) ? 2 : 1];","  },","  Q: function Q(string, pos) {","    return ['K', 'K', string.substr(pos + 1, 1) === 'Q' ? 2 : 1];","  },","  R: function R(string, pos, lastIndex) {","    var offset = string.substr(pos + 1, 1) === 'R' ? 2 : 1;","","    if (pos === lastIndex && !isSlavoGermanic(string) && string.substr(pos - 2, 2) === 'IE' && !/^M(E|A)$/.test(string.substr(pos - 4, 2))) {","      return [null, 'R', offset];","    }","","    return ['R', 'R', offset];","  },","  SH: function SH(string, pos) {","    return (/^H(EIM|OEK|OLM|OLZ)$/.test(string.substr(pos + 1, 4)) ? ['S', 'S', 2] : ['X', 'X', 2]","    );","  },","  SC: function SC(string, pos) {","    if (string.substr(pos + 2, 1) === 'H') {","      if (/^OO|ER|EN|UY|ED|EM$/.test(string.substr(pos + 3, 2))) {","        return [/^E(R|N)$/.test(string.substr(pos + 3, 2)) ? 'X' : ['S', 'K'], ['S', 'K'], 3];","      }","","      return ['X', !pos && !isVowel(string.substr(3, 1)) && string.substr(pos + 3, 1) !== 'W' ? 'S' : 'X', 3];","    }","","    if (/^I|E|Y$/.test(string.substr(pos + 2, 1))) {","      return ['S', 'S', 3];","    }","","    return [['S', 'K'], ['S', 'K'], 3];","  },","  S: function S(string, pos, lastIndex) {","    if (/^(I|Y)SL$/.test(string.substr(pos - 1, 3))) {","      return [null, null, 1];","    }","","    if (!pos && string.substr(pos, 5) === 'SUGAR') {","      return ['X', 'S', 1];","    }","","    if (string.substr(pos, 2) === 'SH') {","      return LOOKUPS.SH(string, pos);","    }","","    if (/^SI(O|A)$/.test(string.substr(pos, 3)) || string.substr(pos, 4) === 'SIAN') {","      return ['S', isSlavoGermanic(string) ? 'S' : 'X', 3];","    }","","    if (!pos && /^M|N|L|W$/.test(string.substr(pos + 1, 1)) || string.substr(pos + 1, 1) === 'Z') {","      return ['S', 'X', string.substr(pos + 1, 1) === 'Z' ? 2 : 1];","    }","","    if (string.substr(pos, 2) === 'SC') {","      return LOOKUPS.SC(string, pos);","    }","","    return [!(lastIndex === pos && /^(A|O)I$/.test(string.substr(pos - 2, 2))) ? 'S' : null, 'S', /^S|Z$/.test(string.substr(pos + 1, 1)) ? 2 : 1];","  },","  TH: function TH(string, pos) {","    if (/^(O|A)M$/.test(string.substr(pos + 2, 2)) || /^V(A|O)N /.test(string.substr(0, 4)) || string.substr(0, 3) === 'SCH') {","      return ['T', 'T', 2];","    }","","    return ['0', 'T', 2];","  },","  T: function T(string, pos) {","    if (string.substr(pos, 4) === 'TION' || /^T(IA|CH)$/.test(string.substr(pos, 3))) {","      return ['X', 'X', 3];","    }","","    if (string.substr(pos, 2) === 'TH' || string.substr(pos, 3) === 'TTH') {","      return LOOKUPS.TH(string, pos);","    }","","    return ['T', 'T', /^T|D$/.test(string.substr(pos + 1, 1)) ? 2 : 1];","  },","  V: function V(string, pos) {","    return ['F', 'F', string.substr(pos + 1, 1) === 'V' ? 2 : 1];","  },","  W: function W(string, pos, lastIndex) {","    if (string.substr(pos, 2) === 'WR') {","      return ['R', 'R', 2];","    }","","    var primary = [],","        secondary = [];","","    if (!pos && isVowel(string.substr(pos + 1, 1) || string.substr(pos, 2) === 'WH')) {","      primary.push('A');","      secondary.push(isVowel(string.substr(pos + 1, 1)) ? 'F' : 'A');","    }","","    if (pos === lastIndex && isVowel(string.substr(pos - 1, 1)) || string.substr(0, 3) === 'SCH' || /^EWSKI|EWSKY|OWSKI|OWSKY$/.test(string.substr(pos - 1, 5))) {","      return [primary, secondary.concat('F'), 1];","    }","","    if (/^WI(C|T)Z$/.test(string.substr(pos, 4))) {","      return [primary.concat(['T', 'S']), secondary.concat(['F', 'X']), 4];","    }","","    return [primary, secondary, 1];","  },","  X: function X(string, pos, lastIndex) {","    if (!pos) {","      return ['S', 'S', 1];","    }","","    var offset = /^C|X$\"/.test(string.substr(pos + 1, 1)) ? 2 : 1;","","    if (pos === lastIndex && /^(I|E)AU$/.test(string.substr(pos - 3, 3)) || /^(A|O)U$/.test(string.substr(pos - 2, 2))) {","      return [null, null, offset];","    }","","    return [['K', 'S'], ['K', 'S'], offset];","  },","  Z: function Z(string, pos) {","    if (string.substr(pos + 1, 1) === 'H') {","      return ['J', 'J', 2];","    }","","    var offset = string.substr(pos + 1, 1) === 'Z' ? 2 : 1;","","    if (/^Z(O|I|A)$/.test(string.substr(pos + 1, 2)) || pos && isSlavoGermanic(string) && string.substr(pos - 1, 1) === 'T') {","      return ['S', ['T', 'S'], offset];","    }","","    return ['S', 'S', offset];","  }","};","","/**"," * Function taking a single word and computing its double metaphone code."," *"," * @param  {string}  word - The word to process."," * @return {array}        - The double metaphone codes."," *"," * @throws {Error} The function expects the word to be a string."," */","function doubleMetaphone(word) {","  if (typeof word !== 'string') throw Error('talisman/phonetics/doubleMetaphone: the given word is not a string.');","","  // Preparing the word","  var preparedWord = word.toUpperCase() + '     ';","","  // Defining the start position & finding necessary indexes","  var startPosition = STARTING_REGEX.test(preparedWord.slice(0, 2)) ? 1 : 0,","      length = word.length,","      lastIndex = length - 1;","","  // Codes","  var primary = [],","      secondary = [];","","  // Iterating","  var pos = startPosition;","","  while (true) {","","    if (pos > length || primary.length >= 4 && secondary.length >= 4) break;","","    // Lookup the current letter","    var letter = preparedWord[pos];","","    var offset = 1;","","    // Vowel lookup","    if (isVowel(letter)) {","      if (!pos) {","        primary.push('A');","        secondary.push('A');","      }","    }","","    // Consonant lookup","    var method = LOOKUPS[letter];","","    if (method) {","      var _method = method(preparedWord, pos, lastIndex, length),","          _method$ = _method[0],","          one = _method$ === undefined ? null : _method$,","          _method$2 = _method[1],","          two = _method$2 === undefined ? null : _method$2,","          _method$3 = _method[2],","          newOffset = _method$3 === undefined ? 1 : _method$3;","","      offset = newOffset;","","      if (one) primary = primary.concat(one);","      if (two) secondary = secondary.concat(two);","    }","","    // Incrementing position","    pos += offset;","  }","","  return [primary.join('').slice(0, 4), secondary.join('').slice(0, 4)];","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"24":1,"26":1,"28":1,"29":0,"32":1,"34":1,"35":0,"41":1,"50":1,"52":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"65":0,"68":0,"69":0,"70":0,"72":0,"76":0,"79":0,"80":0,"83":0,"84":0,"87":0,"88":0,"91":0,"92":0,"95":0,"96":0,"99":0,"100":0,"103":0,"104":0,"107":0,"108":0,"111":0,"112":0,"115":0,"116":0,"119":0,"121":0,"122":0,"125":0,"128":0,"131":0,"132":0,"136":0,"139":0,"142":0,"143":0,"146":0,"147":0,"150":0,"151":0,"154":0,"155":0,"158":0,"159":0,"162":0,"165":0,"166":0,"169":0,"170":0,"173":0,"176":0,"179":0,"180":0,"183":0,"184":0,"187":0,"188":0,"191":0,"192":0,"195":0,"196":0,"199":0,"201":0,"202":0,"205":0,"208":0,"211":0,"212":0,"215":0,"218":0,"220":0,"221":0,"224":0,"227":0,"229":0,"230":0,"233":0,"234":0,"237":0,"238":0,"241":0,"242":0,"245":0,"248":0,"251":0,"253":0,"254":0,"257":0,"260":0,"263":0,"264":0,"267":0,"270":0,"273":0,"276":0,"277":0,"280":0,"283":0,"286":0,"288":0,"289":0,"292":0,"295":0,"299":0,"300":0,"301":0,"304":0,"307":0,"308":0,"311":0,"314":0,"315":0,"318":0,"319":0,"322":0,"323":0,"326":0,"327":0,"330":0,"331":0,"334":0,"335":0,"338":0,"341":0,"342":0,"345":0,"348":0,"349":0,"352":0,"353":0,"356":0,"359":0,"362":0,"363":0,"366":0,"369":0,"370":0,"371":0,"374":0,"375":0,"378":0,"379":0,"382":0,"385":0,"386":0,"389":0,"391":0,"392":0,"395":0,"398":0,"399":0,"402":0,"404":0,"405":0,"408":0,"420":1,"421":0,"424":0,"427":0,"432":0,"436":0,"438":0,"440":0,"443":0,"445":0,"448":0,"449":0,"450":0,"451":0,"456":0,"458":0,"459":0,"467":0,"469":0,"470":0,"474":0,"477":0,"479":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/eudex.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/eudex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":118,"9":46,"10":0,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1},"b":{"1":[0,1],"2":[1,1],"3":[96,22],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":1,"2":118,"3":46,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"binary","line":17,"loc":{"start":{"line":17,"column":13},"end":{"line":17,"column":34}}},"3":{"name":"charCode","line":20,"loc":{"start":{"line":20,"column":15},"end":{"line":20,"column":39}}},"4":{"name":"charArray","line":23,"loc":{"start":{"line":23,"column":16},"end":{"line":23,"column":40}}},"5":{"name":"eudex","line":201,"loc":{"start":{"line":201,"column":0},"end":{"line":201,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":17,"column":0},"end":{"line":25,"column":2}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":58}},"9":{"start":{"line":21,"column":2},"end":{"line":21,"column":28}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":37}},"11":{"start":{"line":40,"column":0},"end":{"line":74,"column":24}},"12":{"start":{"line":76,"column":0},"end":{"line":76,"column":28}},"13":{"start":{"line":78,"column":0},"end":{"line":110,"column":17}},"14":{"start":{"line":112,"column":0},"end":{"line":147,"column":24}},"15":{"start":{"line":149,"column":0},"end":{"line":190,"column":65}},"16":{"start":{"line":198,"column":0},"end":{"line":199,"column":22}},"17":{"start":{"line":201,"column":0},"end":{"line":235,"column":1}},"18":{"start":{"line":202,"column":2},"end":{"line":202,"column":30}},"19":{"start":{"line":204,"column":2},"end":{"line":204,"column":64}},"20":{"start":{"line":206,"column":2},"end":{"line":206,"column":20}},"21":{"start":{"line":208,"column":2},"end":{"line":208,"column":145}},"22":{"start":{"line":208,"column":23},"end":{"line":208,"column":59}},"23":{"start":{"line":208,"column":64},"end":{"line":208,"column":145}},"24":{"start":{"line":208,"column":99},"end":{"line":208,"column":145}},"25":{"start":{"line":210,"column":2},"end":{"line":210,"column":44}},"26":{"start":{"line":212,"column":2},"end":{"line":214,"column":12}},"27":{"start":{"line":216,"column":2},"end":{"line":232,"column":3}},"28":{"start":{"line":217,"column":4},"end":{"line":217,"column":39}},"29":{"start":{"line":219,"column":4},"end":{"line":229,"column":5}},"30":{"start":{"line":220,"column":6},"end":{"line":220,"column":21}},"31":{"start":{"line":222,"column":6},"end":{"line":222,"column":127}},"32":{"start":{"line":222,"column":27},"end":{"line":222,"column":45}},"33":{"start":{"line":222,"column":50},"end":{"line":222,"column":127}},"34":{"start":{"line":222,"column":85},"end":{"line":222,"column":113}},"35":{"start":{"line":222,"column":118},"end":{"line":222,"column":127}},"36":{"start":{"line":224,"column":6},"end":{"line":228,"column":7}},"37":{"start":{"line":225,"column":8},"end":{"line":225,"column":31}},"38":{"start":{"line":226,"column":8},"end":{"line":226,"column":24}},"39":{"start":{"line":227,"column":8},"end":{"line":227,"column":12}},"40":{"start":{"line":231,"column":4},"end":{"line":231,"column":8}},"41":{"start":{"line":234,"column":2},"end":{"line":234,"column":41}},"42":{"start":{"line":236,"column":0},"end":{"line":236,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":35},"end":{"line":18,"column":51}},{"start":{"line":18,"column":54},"end":{"line":18,"column":57}}]},"4":{"line":204,"type":"cond-expr","locations":[{"start":{"line":204,"column":33},"end":{"line":204,"column":59}},{"start":{"line":204,"column":62},"end":{"line":204,"column":63}}]},"5":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"6":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":64},"end":{"line":208,"column":64}},{"start":{"line":208,"column":64},"end":{"line":208,"column":64}}]},"7":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":68},"end":{"line":208,"column":81}},{"start":{"line":208,"column":85},"end":{"line":208,"column":97}}]},"8":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":9},"end":{"line":216,"column":14}},{"start":{"line":216,"column":18},"end":{"line":216,"column":34}}]},"9":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":219,"column":4}},{"start":{"line":219,"column":4},"end":{"line":219,"column":4}}]},"10":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":6}},{"start":{"line":222,"column":6},"end":{"line":222,"column":6}}]},"11":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":50},"end":{"line":222,"column":50}},{"start":{"line":222,"column":50},"end":{"line":222,"column":50}}]},"12":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":54},"end":{"line":222,"column":67}},{"start":{"line":222,"column":71},"end":{"line":222,"column":83}}]},"13":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":6},"end":{"line":224,"column":6}},{"start":{"line":224,"column":6},"end":{"line":224,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eudex;","","var _long = require('long');","","var _long2 = _interopRequireDefault(_long);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Maps."," */","var binary = function binary(str) {","  return typeof str === 'string' ? parseInt(str, 2) : str;","},","    charCode = function charCode(char) {","  return char.charCodeAt(0);","},","    charArray = function charArray(str) {","  return str.split('').map(charCode);","}; /* eslint no-confusing-arrow: 0 */","/**"," * Talisman phonetics/eudex"," * ========================="," *"," * JavaScript implementation of the Eudex phonetic hashing algorithm."," *"," * [Reference]:"," * https://github.com/ticki/eudex"," *"," * [Author]:"," * @ticki (https://github.com/ticki)"," */","","","var PHONES = ['0', // a","// +--------- Confident","// |+-------- Labial","// ||+------- Liquid","// |||+------ Dental","// ||||+----- Plosive","// |||||+---- Fricative","// ||||||+--- Nasal","// |||||||+-- Discriminant","// ||||||||","'01001000', // b","'00001100', // c","'00011000', // d","'0', // e","'01000100', // f","'00001000', // g","'00000100', // h","'1', // i","'00000101', // j","'00001001', // k","'10100000', // l","'00000010', // m","'00010010', // n","'0', // o","'01001001', // p","'10101000', // q","'10100001', // r","'00010100', // s","'00011101', // t","'1', // u","'01000101', // v","'00000000', // w","'10000100', // x","'1', // y","'10010100'].map(binary);","","var LETTERS = PHONES.length;","","var PHONES_C1 = [PHONES[charCode('s') - charCode('a')] ^ 1, // ß","'0', // à","'0', // á","'0', // â","'0', // ã","'0', // ä [æ]","'1', // å [oː]","'0', // æ [æ]","PHONES[charCode('z') - charCode('a')] ^ 1, // ç [t͡ʃ]","'1', // è","'1', // é","'1', // ê","'1', // ë","'1', // ì","'1', // í","'1', // î","'1', // ï","'00010101', // ð [ð̠] (represented as a non-plosive T)","'00010111', // ñ [nj] (represented as a combination of n and j)","'0', // ò","'0', // ó","'0', // ô","'0', // õ","'1', // ö [ø]","'1', // ÷","'1', // ø [ø]","'1', // ù","'1', // ú","'1', // û","'1', // ü","'1', // ý","'00010101', // þ [ð̠] (represented as a non-plosive T)","'1'].map(binary);","","var INJECTIVE_PHONES = [","// +--------- Vowel","// |+-------- Closer than ɜ","// ||+------- Close","// |||+------ Front","// ||||+----- Close-mid","// |||||+---- Central","// ||||||+--- Open-mid","// |||||||+-- Discriminant","// ||||||||   (*=vowel)","'10000100', // a*","'00100100', // b","'00000110', // c","'00001100', // d","'11011000', // e*","'00100010', // f","'00000100', // g","'00000010', // h","'11111000', // i*","'00000011', // j","'00000101', // k","'01010000', // l","'00000001', // m","'00001001', // n","'10010100', // o*","'00100101', // p","'01010100', // q","'01010001', // r","'00001010', // s","'00001110', // t","'11100000', // u*","'00100011', // v","'00000000', // w","'01000010', // x","'11100100', // y*","'01001010'].map(binary);","","var INJECTIVE_PHONES_C1 = [INJECTIVE_PHONES[charCode('s') - charCode('a')] ^ 1, // ß","INJECTIVE_PHONES[charCode('a') - charCode('a')] ^ 1, // à","INJECTIVE_PHONES[charCode('a') - charCode('a')] ^ 1, // á","// +--------- Vowel","// |+-------- Closer than ɜ","// ||+------- Close","// |||+------ Front","// ||||+----- Close-mid","// |||||+---- Central","// ||||||+--- Open-mid","// |||||||+-- Discriminant","// ||||||||","'10000000', // â","'10000110', // ã","'10100110', // ä [æ]","'11000010', // å [oː]","'10100111', // æ [æ]","'01010100', // ç [t͡ʃ]","INJECTIVE_PHONES[charCode('e') - charCode('a')] ^ 1, // è","INJECTIVE_PHONES[charCode('e') - charCode('a')] ^ 1, // é","INJECTIVE_PHONES[charCode('e') - charCode('a')] ^ 1, // ê","'11000110', // ë [ə] or [œ]","INJECTIVE_PHONES[charCode('i') - charCode('a')] ^ 1, // ì","INJECTIVE_PHONES[charCode('i') - charCode('a')] ^ 1, // í","INJECTIVE_PHONES[charCode('i') - charCode('a')] ^ 1, // î","INJECTIVE_PHONES[charCode('i') - charCode('a')] ^ 1, // ï","'00001011', // ð [ð̠] (represented as a non-plosive T)","'00001011', // ñ [nj] (represented as a combination of n and j)","INJECTIVE_PHONES[charCode('o') - charCode('a')] ^ 1, // ò","INJECTIVE_PHONES[charCode('o') - charCode('a')] ^ 1, // ó","INJECTIVE_PHONES[charCode('o') - charCode('a')] ^ 1, // ô","INJECTIVE_PHONES[charCode('o') - charCode('a')] ^ 1, // õ","'11011100', // ö [œ] or [ø]","'1', // ÷","'11011101', // ø [œ] or [ø]","INJECTIVE_PHONES[charCode('u') - charCode('a')] ^ 1, // ù","INJECTIVE_PHONES[charCode('u') - charCode('a')] ^ 1, // ú","INJECTIVE_PHONES[charCode('u') - charCode('a')] ^ 1, // û","INJECTIVE_PHONES[charCode('y') - charCode('a')] ^ 1, // ü","INJECTIVE_PHONES[charCode('y') - charCode('a')] ^ 1, // ý","'00001011', // þ [ð̠] (represented as a non-plosive T)","INJECTIVE_PHONES[charCode('y') - charCode('a')] ^ 1].map(binary);","","/**"," * Function taking a single word and computing its Eudex hash."," *"," * @param  {string} word - The word to process."," * @return {number}      - The Eudex hash."," */","var A = charCode('a'),","    Z = charCode('z');","","function eudex(word) {","  var array = charArray(word);","","  var entry = array.length > 0 ? (array[0] | 32) - A & 0xFF : 0;","","  var firstByte = 0;","","  if (entry < LETTERS) firstByte = INJECTIVE_PHONES[entry];else if (entry >= 0xDF && entry < 0xFF) firstByte = INJECTIVE_PHONES_C1[entry - 0xDF];","","  firstByte = new _long2.default(firstByte);","","  var res = _long2.default.UZERO,","      n = 0,","      b = 1;","","  while (n < 8 && b < array.length) {","    entry = (array[b] | 32) - A & 0xFF;","","    if (entry <= Z) {","      var x = void 0;","","      if (entry < LETTERS) x = PHONES[entry];else if (entry >= 0xDF && entry < 0xFF) x = PHONES_C1[entry - 0xDF];else continue;","","      if (!res.and(0xFE).equals(x & 0xFE)) {","        res = res.shiftLeft(8);","        res = res.or(x);","        n++;","      }","    }","","    b++;","  }","","  return res.or(firstByte.shiftLeft(56));","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"17":1,"18":118,"21":46,"24":0,"40":1,"76":1,"78":1,"112":1,"149":1,"198":1,"201":1,"202":0,"204":0,"206":0,"208":0,"210":0,"212":0,"216":0,"217":0,"219":0,"220":0,"222":0,"224":0,"225":0,"226":0,"227":0,"231":0,"234":0,"236":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/fuzzy-soundex.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/fuzzy-soundex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"_toConsumableArray","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}}},"3":{"name":"fuzzySoundex","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":195}},"9":{"start":{"line":16,"column":35},"end":{"line":16,"column":193}},"10":{"start":{"line":16,"column":61},"end":{"line":16,"column":145}},"11":{"start":{"line":16,"column":126},"end":{"line":16,"column":143}},"12":{"start":{"line":16,"column":146},"end":{"line":16,"column":158}},"13":{"start":{"line":16,"column":168},"end":{"line":16,"column":191}},"14":{"start":{"line":34,"column":0},"end":{"line":34,"column":104}},"15":{"start":{"line":36,"column":0},"end":{"line":39,"column":26}},"16":{"start":{"line":41,"column":0},"end":{"line":41,"column":371}},"17":{"start":{"line":51,"column":0},"end":{"line":96,"column":1}},"18":{"start":{"line":52,"column":2},"end":{"line":52,"column":113}},"19":{"start":{"line":52,"column":32},"end":{"line":52,"column":113}},"20":{"start":{"line":54,"column":2},"end":{"line":54,"column":23}},"21":{"start":{"line":54,"column":13},"end":{"line":54,"column":23}},"22":{"start":{"line":57,"column":2},"end":{"line":57,"column":74}},"23":{"start":{"line":60,"column":2},"end":{"line":61,"column":27}},"24":{"start":{"line":63,"column":2},"end":{"line":63,"column":270}},"25":{"start":{"line":63,"column":33},"end":{"line":63,"column":52}},"26":{"start":{"line":63,"column":57},"end":{"line":63,"column":270}},"27":{"start":{"line":63,"column":87},"end":{"line":63,"column":106}},"28":{"start":{"line":63,"column":111},"end":{"line":63,"column":270}},"29":{"start":{"line":63,"column":142},"end":{"line":63,"column":161}},"30":{"start":{"line":63,"column":166},"end":{"line":63,"column":270}},"31":{"start":{"line":63,"column":196},"end":{"line":63,"column":215}},"32":{"start":{"line":63,"column":220},"end":{"line":63,"column":270}},"33":{"start":{"line":63,"column":251},"end":{"line":63,"column":270}},"34":{"start":{"line":66,"column":2},"end":{"line":67,"column":34}},"35":{"start":{"line":69,"column":2},"end":{"line":69,"column":232}},"36":{"start":{"line":69,"column":31},"end":{"line":69,"column":53}},"37":{"start":{"line":69,"column":58},"end":{"line":69,"column":232}},"38":{"start":{"line":69,"column":87},"end":{"line":69,"column":109}},"39":{"start":{"line":69,"column":114},"end":{"line":69,"column":232}},"40":{"start":{"line":69,"column":143},"end":{"line":69,"column":165}},"41":{"start":{"line":69,"column":170},"end":{"line":69,"column":232}},"42":{"start":{"line":69,"column":200},"end":{"line":69,"column":232}},"43":{"start":{"line":72,"column":2},"end":{"line":76,"column":3}},"44":{"start":{"line":73,"column":4},"end":{"line":73,"column":14}},"45":{"start":{"line":75,"column":4},"end":{"line":75,"column":77}},"46":{"start":{"line":77,"column":2},"end":{"line":77,"column":28}},"47":{"start":{"line":80,"column":2},"end":{"line":80,"column":16}},"48":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"49":{"start":{"line":82,"column":4},"end":{"line":82,"column":46}},"50":{"start":{"line":84,"column":2},"end":{"line":84,"column":32}},"51":{"start":{"line":87,"column":2},"end":{"line":87,"column":37}},"52":{"start":{"line":90,"column":2},"end":{"line":90,"column":91}},"53":{"start":{"line":90,"column":25},"end":{"line":90,"column":51}},"54":{"start":{"line":90,"column":56},"end":{"line":90,"column":91}},"55":{"start":{"line":93,"column":2},"end":{"line":93,"column":32}},"56":{"start":{"line":95,"column":2},"end":{"line":95,"column":14}},"57":{"start":{"line":97,"column":0},"end":{"line":97,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":35},"end":{"line":16,"column":35}},{"start":{"line":16,"column":35},"end":{"line":16,"column":35}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"7":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":57},"end":{"line":63,"column":57}},{"start":{"line":63,"column":57},"end":{"line":63,"column":57}}]},"8":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":111},"end":{"line":63,"column":111}},{"start":{"line":63,"column":111},"end":{"line":63,"column":111}}]},"9":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":166},"end":{"line":63,"column":166}},{"start":{"line":63,"column":166},"end":{"line":63,"column":166}}]},"10":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":220},"end":{"line":63,"column":220}},{"start":{"line":63,"column":220},"end":{"line":63,"column":220}}]},"11":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"12":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":58},"end":{"line":69,"column":58}},{"start":{"line":69,"column":58},"end":{"line":69,"column":58}}]},"13":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":114},"end":{"line":69,"column":114}},{"start":{"line":69,"column":114},"end":{"line":69,"column":114}}]},"14":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":170},"end":{"line":69,"column":170}},{"start":{"line":69,"column":170},"end":{"line":69,"column":170}}]},"15":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":12},"end":{"line":82,"column":33}},{"start":{"line":82,"column":37},"end":{"line":82,"column":45}}]},"16":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = fuzzySoundex;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","var _helpers = require('../helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**","                                                                                                                                                                                                     * Talisman phonetics/fuzzy-soundexmplementation of the \"Fuzzy Soundex\" algorithm.","                                                                                                                                                                                                     *","                                                                                                                                                                                                     * [Reference]:","                                                                                                                                                                                                     * http://wayback.archive.org/web/20100629121128/http://www.ir.iit.edu/publications/downloads/IEEESoundexV5.pdf","                                                                                                                                                                                                     *","                                                                                                                                                                                                     * [Article]:","                                                                                                                                                                                                     * Holmes, David and M. Catherine McCabe. \"Improving Precision and Recall for","                                                                                                                                                                                                     * Soundex Retrieval.\"","                                                                                                                                                                                                     */","","","/**"," * Constants."," */","var TRANSLATION = (0, _helpers.translation)('ABCDEFGHIJKLMNOPQRSTUVWXYZ', '0193017-07745501769301-7-9');","","var SET1 = new Set(['CS', 'CZ', 'TS', 'TZ']),","    SET2 = new Set(['HR', 'WR']),","    SET3 = new Set(['KN', 'NG']),","    SET4 = new Set('HWY');","","var RULES = [[/CA/g, 'KA'], [/CC/g, 'KK'], [/CK/g, 'KK'], [/CE/g, 'SE'], [/CHL/g, 'KL'], [/CL/g, 'KL'], [/CHR/g, 'KR'], [/CR/g, 'KR'], [/CI/g, 'SI'], [/CO/g, 'KO'], [/CU/g, 'KU'], [/CY/g, 'SY'], [/DG/g, 'GG'], [/GH/g, 'HH'], [/MAC/g, 'MK'], [/MC/g, 'MK'], [/NST/g, 'NSS'], [/PF/g, 'FF'], [/PH/g, 'FF'], [/SCH/g, 'SSS'], [/TIO/g, 'SIO'], [/TIA/g, 'SIO'], [/TCH/g, 'CHH']];","","/**"," * Function taking a single name and computing its fuzzy Soundex code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The fuzzy Soundex code."," *"," * @throws {Error} The function expects the name to be a string."," */","function fuzzySoundex(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/fuzzy-soundex: the given name is not a string.');","","  if (!name) return '';","","  // Deburring the string & dropping any non-alphabetical character","  name = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-Z]/g, '');","","  // Applying some substitutions for beginnings","  var firstTwoLetters = name.slice(0, 2),","      rest = name.slice(2);","","  if (SET1.has(firstTwoLetters)) name = 'SS' + rest;else if (firstTwoLetters === 'GN') name = 'NN' + rest;else if (SET2.has(firstTwoLetters)) name = 'RR' + rest;else if (firstTwoLetters === 'HW') name = 'WW' + rest;else if (SET3.has(firstTwoLetters)) name = 'NN' + rest;","","  // Applying some substitutions for endings","  var lastTwoLetters = name.slice(-2),","      initial = name.slice(0, -2);","","  if (lastTwoLetters === 'CH') name = initial + 'KK';else if (lastTwoLetters === 'NT') name = initial + 'TT';else if (lastTwoLetters === 'RT') name = initial + 'RR';else if (name.slice(-3) === 'RDT') name = name.slice(0, -3) + 'RR';","","  // Applying the rules","  for (var i = 0, l = RULES.length; i < l; i++) {","    var _name;","","    name = (_name = name).replace.apply(_name, _toConsumableArray(RULES[i]));","  } // Caching the first letter","  var firstLetter = name[0];","","  // Translating","  var code = '';","  for (var _i = 0, _l = name.length; _i < _l; _i++) {","    code += TRANSLATION[name[_i]] || name[_i];","  } // Removing hyphens","  code = code.replace(/-/g, '');","","  // Squeezing the code","  code = (0, _helpers.squeeze)(code);","","  // Dealing with some initials","  if (SET4.has(code[0])) code = firstLetter + code;else code = firstLetter + code.slice(1);","","  // Dropping vowels","  code = code.replace(/0/g, '');","","  return code;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"34":1,"36":1,"41":1,"51":1,"52":0,"54":0,"57":0,"60":0,"63":0,"66":0,"69":0,"72":0,"73":0,"75":0,"77":0,"80":0,"81":0,"82":0,"84":0,"87":0,"90":0,"93":0,"95":0,"97":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/lein.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/lein.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"pad","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":19}}},"3":{"name":"lein","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":28,"column":0},"end":{"line":28,"column":28}},"9":{"start":{"line":30,"column":0},"end":{"line":30,"column":88}},"10":{"start":{"line":35,"column":0},"end":{"line":37,"column":1}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":37}},"12":{"start":{"line":47,"column":0},"end":{"line":69,"column":1}},"13":{"start":{"line":48,"column":2},"end":{"line":48,"column":104}},"14":{"start":{"line":48,"column":32},"end":{"line":48,"column":104}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":80}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":22}},"17":{"start":{"line":54,"column":2},"end":{"line":54,"column":23}},"18":{"start":{"line":57,"column":2},"end":{"line":57,"column":35}},"19":{"start":{"line":60,"column":2},"end":{"line":60,"column":49}},"20":{"start":{"line":63,"column":2},"end":{"line":63,"column":20}},"21":{"start":{"line":64,"column":2},"end":{"line":64,"column":12}},"22":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"23":{"start":{"line":67,"column":4},"end":{"line":67,"column":48}},"24":{"start":{"line":68,"column":3},"end":{"line":68,"column":28}},"25":{"start":{"line":70,"column":0},"end":{"line":70,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"4":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":34}},{"start":{"line":67,"column":38},"end":{"line":67,"column":47}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = lein;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","var _helpers = require('../helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Constants."," */","/**"," * Talisman phonetics/lein"," * ========================"," *"," * The Lein name coding procedure."," *"," * [Reference]:"," * http://naldc.nal.usda.gov/download/27833/PDF"," */","var DROPPED = /[AEIOUYWH]/g;","","var TRANSLATION = (0, _helpers.translation)('DTMNLRBFPVCJKGQSXZ', '112233444455555555');","","/**"," * Helpers."," */","function pad(code) {","  return (code + '0000').slice(0, 4);","}","","/**"," * Function taking a single name and computing its lein code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The lein code."," *"," * @throws {Error} The function expects the name to be a string."," */","function lein(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/lein: the given name is not a string.');","","  var code = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-Z\\s]/g, '');","","  // 1-- Keeping the first letter","  var first = code[0];","  code = code.slice(1);","","  // 2-- Dropping vowels and Y, W & H","  code = code.replace(DROPPED, '');","","  // 3-- Dropping consecutive duplicates and truncating to 4 characters","  code = (0, _helpers.squeeze)(code).slice(0, 4);","","  // 4-- Translations","  var backup = code;","  code = '';","","  for (var i = 0, l = backup.length; i < l; i++) {","    code += TRANSLATION[backup[i]] || backup[i];","  }return pad(first + code);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"28":1,"30":1,"35":1,"36":0,"47":1,"48":0,"50":0,"53":0,"54":0,"57":0,"60":0,"63":0,"64":0,"66":0,"67":0,"68":0,"70":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/metaphone.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/metaphone.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"metaphone","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":538}},"8":{"start":{"line":39,"column":0},"end":{"line":49,"column":1}},"9":{"start":{"line":40,"column":2},"end":{"line":40,"column":109}},"10":{"start":{"line":40,"column":32},"end":{"line":40,"column":109}},"11":{"start":{"line":43,"column":2},"end":{"line":43,"column":78}},"12":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":50}},"14":{"start":{"line":48,"column":3},"end":{"line":48,"column":29}},"15":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = metaphone;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Series of rules to apply."," */","var RULES = [[/([bcdfhjklmnpqrstvwxyz])\\1+/g, '$1'], [/^ae/g, 'E'], [/^[gkp]n/g, 'N'], [/^wr/g, 'R'], [/^x/g, 'S'], [/^wh/g, 'W'], [/mb$/g, 'M'], [/(?!^)sch/g, 'SK'], [/th/g, '0'], [/t?ch|sh/g, 'X'], [/c(?=ia)/g, 'X'], [/[st](?=i[ao])/g, 'X'], [/s?c(?=[iey])/g, 'S'], [/[cq]/g, 'K'], [/dg(?=[iey])/g, 'J'], [/d/g, 'T'], [/g(?=h[^aeiou])/g, ''], [/gn(ed)?/g, 'N'], [/([^g]|^)g(?=[iey])/g, '$1J'], [/g+/g, 'K'], [/ph/g, 'F'], [/([aeiou])h(?=\\b|[^aeiou])/g, '$1'], [/[wy](?![aeiou])/g, ''], [/z/g, 'S'], [/v/g, 'F'], [/(?!^)[aeiou]+/g, '']];","","/**"," * Function taking a single word and computing its metaphone code."," *"," * @param  {string}  word - The word to process."," * @return {string}       - The metaphone code."," *"," * @throws {Error} The function expects the word to be a string."," */","/**"," * Talisman phonetics/metaphone"," * ============================="," *"," * The metaphone algorithm."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Metaphone"," *"," * [Author]:"," * Lawrence Philips, 1990"," */","function metaphone(word) {","  if (typeof word !== 'string') throw Error('talisman/phonetics/metaphone: the given word is not a string.');","","  // Deburring the string & dropping any non-alphabetical character","  var code = (0, _deburr2.default)(word).toLowerCase().replace(/[^a-z]/g, '');","","  // Applying the rules","  for (var i = 0, l = RULES.length; i < l; i++) {","    code = code.replace(RULES[i][0], RULES[i][1]);","  }return code.toUpperCase();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"17":1,"39":1,"40":0,"43":0,"46":0,"47":0,"48":0,"50":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/mra.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/mra.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"mra","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":19}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":39,"column":0},"end":{"line":55,"column":1}},"9":{"start":{"line":40,"column":2},"end":{"line":40,"column":103}},"10":{"start":{"line":40,"column":32},"end":{"line":40,"column":103}},"11":{"start":{"line":43,"column":2},"end":{"line":43,"column":79}},"12":{"start":{"line":46,"column":2},"end":{"line":46,"column":67}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":39}},"14":{"start":{"line":52,"column":2},"end":{"line":52,"column":45}},"15":{"start":{"line":54,"column":2},"end":{"line":54,"column":73}},"16":{"start":{"line":56,"column":0},"end":{"line":56,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = mra;","","var _helpers = require('../helpers');","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Function taking a single name and computing its MRA codex."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The MRA codex."," *"," * @throws {Error} The function expects the name to be a string."," */","/**"," * Talisman phonetics/mra"," * ======================="," *"," * Functions related to the computation of the Match Rating Approach codex."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Match_rating_approach"," *"," * [Article]:"," * Moore, G B.; Kuhns, J L.; Treffzs, J L.; Montgomery, C A. (Feb 1, 1977)."," * Accessing Individual Records from Personal Data Files Using Nonunique"," * Identifiers."," * US National Institute of Standards and Technology. p. 17. NIST SP - 500-2."," */","function mra(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/mra: the given name is not a string.');","","  // Preparing the name","  var codex = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-Z]/g, '');","","  // Dropping non-leading vowels","  codex = codex.charAt(0) + codex.slice(1).replace(/[AEIOU]/g, '');","","  // Dropping consecutive consonants","  codex = (0, _helpers.squeeze)(codex);","","  // Returning the codex","  var offset = Math.min(3, codex.length - 3);","","  return codex.slice(0, 3) + codex.substr(codex.length - offset, offset);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"39":1,"40":0,"43":0,"46":0,"49":0,"52":0,"54":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/nysiis.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/nysiis.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"nysiis","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":47}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":28,"column":0},"end":{"line":37,"column":2}},"9":{"start":{"line":47,"column":0},"end":{"line":84,"column":1}},"10":{"start":{"line":48,"column":2},"end":{"line":48,"column":106}},"11":{"start":{"line":48,"column":32},"end":{"line":48,"column":106}},"12":{"start":{"line":51,"column":2},"end":{"line":51,"column":81}},"13":{"start":{"line":54,"column":2},"end":{"line":54,"column":32}},"14":{"start":{"line":57,"column":2},"end":{"line":64,"column":3}},"15":{"start":{"line":58,"column":4},"end":{"line":60,"column":43}},"16":{"start":{"line":63,"column":4},"end":{"line":63,"column":44}},"17":{"start":{"line":67,"column":2},"end":{"line":67,"column":35}},"18":{"start":{"line":70,"column":2},"end":{"line":70,"column":48}},"19":{"start":{"line":70,"column":27},"end":{"line":70,"column":48}},"20":{"start":{"line":73,"column":2},"end":{"line":80,"column":3}},"21":{"start":{"line":74,"column":4},"end":{"line":76,"column":45}},"22":{"start":{"line":79,"column":4},"end":{"line":79,"column":44}},"23":{"start":{"line":83,"column":2},"end":{"line":83,"column":51}},"24":{"start":{"line":89,"column":0},"end":{"line":90,"column":43}},"25":{"start":{"line":92,"column":0},"end":{"line":92,"column":27}},"26":{"start":{"line":93,"column":0},"end":{"line":93,"column":28}},"27":{"start":{"line":94,"column":0},"end":{"line":94,"column":26}},"28":{"start":{"line":95,"column":0},"end":{"line":95,"column":36}},"29":{"start":{"line":96,"column":0},"end":{"line":96,"column":47}},"30":{"start":{"line":97,"column":0},"end":{"line":97,"column":45}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"4":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.refined = exports.original = undefined;","","var _helpers = require('../helpers');","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Patterns."," */","/**"," * Talisman phonetics/nysiis"," * =========================="," *"," * The nysiis algorithm, original & refined."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/New_York_State_Identification_and_Intelligence_System"," */","var PATTERNS = {","  original: {","    first: [[/JR$/g, ''], [/SR$/g, ''], [/^MAC/g, 'MCC'], [/^KN/g, 'NN'], [/^K/g, 'C'], [/^(PH|PF)/g, 'FF'], [/^SCH/g, 'SSS'], [/(EE|IE)$/g, 'Y'], [/(DT|RT|RD|NT|ND)$/g, 'D']],","    second: [[/EV/g, 'AF'], [/[EIOU]/g, 'A'], [/Q/g, 'G'], [/Z/g, 'S'], [/(M|KN)/g, 'N'], [/K/g, 'C'], [/SCH/g, 'SSS'], [/PH/g, 'FF'], [/([^A])H/g, '$1'], [/(.)H[^A]/g, '$1'], [/AW/g, 'A'], [/S$/g, ''], [/AY$/g, 'Y'], [/A$/g, '']]","  },","  refined: {","    first: [[/JR$/g, ''], [/SR$/g, ''], [/(S|Z)$/g, ''], [/MAC/g, 'MC'], [/PH/g, 'F'], [/IX$/g, 'IC'], [/EX$/g, 'EC'], [/(YE|EE|IE)/g, 'Y'], [/(DT|RT|RD|NT|ND)$/g, 'D'], [/(.+)EV/g, '$1EF']],","    second: [[/([AEIOU]+)W/g, '$1'], [/[EIOU]/g, 'A'], [/AA+/g, 'A'], [/GHT/g, 'GT'], [/DG/g, 'G'], [/PH/g, 'F'], [/(.+)HA/g, '$1A'], [/A+H/g, 'A'], [/KN/g, 'N'], [/K/g, 'C'], [/(.+)M/g, '$1N'], [/(.+)Q/g, '$1G'], [/(SH|SCH)/g, 'S'], [/YW/g, 'Y'], [/(.+)Y(.+)/g, '$1A$2'], [/WR/g, 'R'], [/(.+)Z/g, '$1S'], [/AY$/g, 'Y'], [/A+$/g, ''], [/^\\w/g, '']]","  }","};","","/**"," * Function taking a single name and computing its NYSIIS code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The NYSIIS code."," *"," * @throws {Error} The function expects the name to be a string."," */","function nysiis(type, name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/nysiis: the given name is not a string.');","","  // Preparing the string","  name = (0, _deburr2.default)(name).toUpperCase().trim().replace(/[^A-Z]/g, '');","","  // Getting the proper patterns","  var patterns = PATTERNS[type];","","  // Applying the first substitutions","  for (var i = 0, l = patterns.first.length; i < l; i++) {","    var _patterns$first$i = patterns.first[i],","        match = _patterns$first$i[0],","        replacement = _patterns$first$i[1];","","","    name = name.replace(match, replacement);","  }","","  // Storing the first letter","  var firstLetter = name.charAt(0);","","  // Eating the first letter if applying the original algorithm","  if (type === 'original') name = name.slice(1);","","  // Applying the second substitutions","  for (var _i = 0, _l = patterns.second.length; _i < _l; _i++) {","    var _patterns$second$_i = patterns.second[_i],","        match = _patterns$second$_i[0],","        replacement = _patterns$second$_i[1];","","","    name = name.replace(match, replacement);","  }","","  // Returning the squeezed code","  return firstLetter + (0, _helpers.squeeze)(name);","}","","/**"," * Exporting functions."," */","var original = nysiis.bind(null, 'original'),","    refined = nysiis.bind(null, 'refined');","","exports.default = original;","exports.original = original;","exports.refined = refined;","module.exports = exports['default'];","exports['default'].original = exports.original;","exports['default'].refined = exports.refined;"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"28":1,"47":1,"48":0,"51":0,"54":0,"57":0,"58":0,"63":0,"67":0,"70":0,"73":0,"74":0,"79":0,"83":0,"89":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/onca.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/onca.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":1,"10":0,"11":1},"b":{"1":[0,2],"2":[2,2]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}}},"2":{"name":"onca","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":47}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":95}},"8":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"9":{"start":{"line":31,"column":0},"end":{"line":33,"column":1}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":61}},"11":{"start":{"line":34,"column":0},"end":{"line":34,"column":36}}},"branchMap":{"1":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = onca;","","var _soundex = require('./soundex');","","var _soundex2 = _interopRequireDefault(_soundex);","","var _nysiis = require('./nysiis');","","var _nysiis2 = _interopRequireDefault(_nysiis);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Function taking a single name and computing its ONCA code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The ONCA code."," */","/**"," * Talisman phonetics/onca"," * ========================"," *"," * The Oxford Name Compression Algorithm. This is basically a glorified"," * NYSIIS + Soundex combination."," */","function onca(name) {","  return (0, _soundex2.default)((0, _nysiis2.default)(name));","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":2,"31":1,"32":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/soundex.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/soundex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"pad","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":19}}},"3":{"name":"soundex","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":23}}},"4":{"name":"refined","line":82,"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"8":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":105}},"10":{"start":{"line":34,"column":0},"end":{"line":34,"column":113}},"11":{"start":{"line":39,"column":0},"end":{"line":41,"column":1}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":37}},"13":{"start":{"line":51,"column":0},"end":{"line":72,"column":1}},"14":{"start":{"line":52,"column":2},"end":{"line":52,"column":107}},"15":{"start":{"line":52,"column":32},"end":{"line":52,"column":107}},"16":{"start":{"line":54,"column":2},"end":{"line":54,"column":74}},"17":{"start":{"line":56,"column":2},"end":{"line":56,"column":35}},"18":{"start":{"line":59,"column":2},"end":{"line":59,"column":16}},"19":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"20":{"start":{"line":62,"column":4},"end":{"line":62,"column":69}},"21":{"start":{"line":62,"column":39},"end":{"line":62,"column":69}},"22":{"start":{"line":66,"column":2},"end":{"line":66,"column":73}},"23":{"start":{"line":66,"column":52},"end":{"line":66,"column":73}},"24":{"start":{"line":69,"column":2},"end":{"line":69,"column":59}},"25":{"start":{"line":71,"column":2},"end":{"line":71,"column":33}},"26":{"start":{"line":82,"column":0},"end":{"line":100,"column":1}},"27":{"start":{"line":83,"column":2},"end":{"line":83,"column":115}},"28":{"start":{"line":83,"column":32},"end":{"line":83,"column":115}},"29":{"start":{"line":85,"column":2},"end":{"line":85,"column":74}},"30":{"start":{"line":87,"column":2},"end":{"line":87,"column":35}},"31":{"start":{"line":90,"column":2},"end":{"line":90,"column":16}},"32":{"start":{"line":92,"column":2},"end":{"line":94,"column":3}},"33":{"start":{"line":93,"column":4},"end":{"line":93,"column":85}},"34":{"start":{"line":93,"column":47},"end":{"line":93,"column":85}},"35":{"start":{"line":97,"column":2},"end":{"line":97,"column":41}},"36":{"start":{"line":99,"column":2},"end":{"line":99,"column":28}},"37":{"start":{"line":101,"column":0},"end":{"line":101,"column":36}},"38":{"start":{"line":102,"column":0},"end":{"line":102,"column":45}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"4":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"6":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"7":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.default = soundex;","exports.refined = refined;","","var _helpers = require('../helpers');","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Translations."," */","/**"," * Talisman phonetics/soundex"," * ==========================="," *"," * The Soundex algorithm."," *"," * [Reference]: https://en.wikipedia.org/wiki/Soundex"," *"," * [Authors]:"," * Robert C. Russel"," * Margaret King Odell"," */","var TRANSLATIONS = (0, _helpers.translation)('AEIOUYWHBPFVCSKGJQXZDTLMNR', '000000DD111122222222334556');","","var REFINED_TRANSLATIONS = (0, _helpers.translation)('AEIOUYWHBPFVCKSGJQXZDTLMNR', '000000DD112233344555667889');","","/**"," * Helpers."," */","function pad(code) {","  return (code + '0000').slice(0, 4);","}","","/**"," * Function taking a single name and computing its Soundex code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The Soundex code."," *"," * @throws {Error} The function expects the name to be a string."," */","function soundex(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/soundex: the given name is not a string.');","","  name = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-Z]/g, '');","","  var firstLetter = name.charAt(0);","","  // Process the code for the name's tail","  var tail = '';","","  for (var i = 1, l = name.length; i < l; i++) {","    if (TRANSLATIONS[name[i]] !== 'D') tail += TRANSLATIONS[name[i]];","  }","","  // Dropping first code's letter if duplicate","  if (tail.charAt(0) === TRANSLATIONS[firstLetter]) tail = tail.slice(1);","","  // Composing the code from the tail","  var code = (0, _helpers.squeeze)(tail).replace(/0/g, '');","","  return pad(firstLetter + code);","}","","/**"," * Function taking a single name and computing its refined Soundex code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The refined Soundex code."," *"," * @throws {Error} The function expects the name to be a string."," */","function refined(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/soundex#refined: the given name is not a string.');","","  name = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-Z]/g, '');","","  var firstLetter = name.charAt(0);","","  // Process the code for the name's tail","  var tail = '';","","  for (var i = 0, l = name.length; i < l; i++) {","    if (REFINED_TRANSLATIONS[name[i]] !== 'D') tail += REFINED_TRANSLATIONS[name[i]];","  }","","  // Composing the code from the tail","  var code = (0, _helpers.squeeze)(tail);","","  return firstLetter + code;","}","module.exports = exports['default'];","exports['default'].refined = exports.refined;"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"32":1,"34":1,"39":1,"40":0,"51":1,"52":0,"54":0,"56":0,"59":0,"61":0,"62":0,"66":0,"69":0,"71":0,"82":1,"83":0,"85":0,"87":0,"90":0,"92":0,"93":0,"97":0,"99":0,"101":1,"102":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/phonex.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/phonex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":6,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":1,"2":6,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":17},"end":{"line":31,"column":33}}},"3":{"name":"phonex","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":99}},"8":{"start":{"line":31,"column":0},"end":{"line":33,"column":3}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":36}},"10":{"start":{"line":35,"column":0},"end":{"line":37,"column":35}},"11":{"start":{"line":47,"column":0},"end":{"line":110,"column":1}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":106}},"13":{"start":{"line":48,"column":32},"end":{"line":48,"column":106}},"14":{"start":{"line":50,"column":2},"end":{"line":50,"column":23}},"15":{"start":{"line":50,"column":13},"end":{"line":50,"column":23}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":74}},"17":{"start":{"line":56,"column":2},"end":{"line":56,"column":33}},"18":{"start":{"line":59,"column":2},"end":{"line":60,"column":27}},"19":{"start":{"line":62,"column":2},"end":{"line":62,"column":153}},"20":{"start":{"line":62,"column":31},"end":{"line":62,"column":49}},"21":{"start":{"line":62,"column":54},"end":{"line":62,"column":153}},"22":{"start":{"line":62,"column":83},"end":{"line":62,"column":101}},"23":{"start":{"line":62,"column":106},"end":{"line":62,"column":153}},"24":{"start":{"line":62,"column":135},"end":{"line":62,"column":153}},"25":{"start":{"line":65,"column":2},"end":{"line":65,"column":44}},"26":{"start":{"line":65,"column":23},"end":{"line":65,"column":44}},"27":{"start":{"line":68,"column":2},"end":{"line":78,"column":3}},"28":{"start":{"line":69,"column":4},"end":{"line":71,"column":37}},"29":{"start":{"line":74,"column":4},"end":{"line":77,"column":5}},"30":{"start":{"line":75,"column":6},"end":{"line":75,"column":41}},"31":{"start":{"line":76,"column":6},"end":{"line":76,"column":12}},"32":{"start":{"line":80,"column":2},"end":{"line":81,"column":18}},"33":{"start":{"line":83,"column":2},"end":{"line":107,"column":3}},"34":{"start":{"line":84,"column":4},"end":{"line":85,"column":34}},"35":{"start":{"line":87,"column":4},"end":{"line":87,"column":23}},"36":{"start":{"line":89,"column":4},"end":{"line":102,"column":5}},"37":{"start":{"line":90,"column":6},"end":{"line":90,"column":21}},"38":{"start":{"line":91,"column":11},"end":{"line":102,"column":5}},"39":{"start":{"line":92,"column":6},"end":{"line":92,"column":21}},"40":{"start":{"line":93,"column":11},"end":{"line":102,"column":5}},"41":{"start":{"line":94,"column":6},"end":{"line":94,"column":45}},"42":{"start":{"line":94,"column":30},"end":{"line":94,"column":45}},"43":{"start":{"line":95,"column":11},"end":{"line":102,"column":5}},"44":{"start":{"line":96,"column":6},"end":{"line":96,"column":70}},"45":{"start":{"line":96,"column":55},"end":{"line":96,"column":70}},"46":{"start":{"line":97,"column":11},"end":{"line":102,"column":5}},"47":{"start":{"line":98,"column":6},"end":{"line":98,"column":111}},"48":{"start":{"line":98,"column":52},"end":{"line":98,"column":111}},"49":{"start":{"line":99,"column":6},"end":{"line":99,"column":21}},"50":{"start":{"line":100,"column":11},"end":{"line":102,"column":5}},"51":{"start":{"line":101,"column":6},"end":{"line":101,"column":70}},"52":{"start":{"line":101,"column":55},"end":{"line":101,"column":70}},"53":{"start":{"line":104,"column":4},"end":{"line":104,"column":64}},"54":{"start":{"line":104,"column":47},"end":{"line":104,"column":64}},"55":{"start":{"line":106,"column":4},"end":{"line":106,"column":26}},"56":{"start":{"line":109,"column":2},"end":{"line":109,"column":14}},"57":{"start":{"line":111,"column":0},"end":{"line":111,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":54},"end":{"line":62,"column":54}},{"start":{"line":62,"column":54},"end":{"line":62,"column":54}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":106},"end":{"line":62,"column":106}},{"start":{"line":62,"column":106},"end":{"line":62,"column":106}}]},"8":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"9":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"10":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"11":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":11},"end":{"line":91,"column":11}},{"start":{"line":91,"column":11},"end":{"line":91,"column":11}}]},"12":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":11},"end":{"line":93,"column":11}},{"start":{"line":93,"column":11},"end":{"line":93,"column":11}}]},"13":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":15},"end":{"line":93,"column":29}},{"start":{"line":93,"column":33},"end":{"line":93,"column":47}}]},"14":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":6},"end":{"line":94,"column":6}},{"start":{"line":94,"column":6},"end":{"line":94,"column":6}}]},"15":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":11},"end":{"line":95,"column":11}},{"start":{"line":95,"column":11},"end":{"line":95,"column":11}}]},"16":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":6}},{"start":{"line":96,"column":6},"end":{"line":96,"column":6}}]},"17":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":10},"end":{"line":96,"column":36}},{"start":{"line":96,"column":40},"end":{"line":96,"column":53}}]},"18":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":11},"end":{"line":97,"column":11}},{"start":{"line":97,"column":11},"end":{"line":97,"column":11}}]},"19":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":15},"end":{"line":97,"column":29}},{"start":{"line":97,"column":33},"end":{"line":97,"column":47}}]},"20":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":6},"end":{"line":98,"column":6}},{"start":{"line":98,"column":6},"end":{"line":98,"column":6}}]},"21":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":10},"end":{"line":98,"column":28}},{"start":{"line":98,"column":32},"end":{"line":98,"column":50}}]},"22":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":11},"end":{"line":100,"column":11}},{"start":{"line":100,"column":11},"end":{"line":100,"column":11}}]},"23":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":6},"end":{"line":101,"column":6}},{"start":{"line":101,"column":6},"end":{"line":101,"column":6}}]},"24":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":10},"end":{"line":101,"column":36}},{"start":{"line":101,"column":40},"end":{"line":101,"column":53}}]},"25":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"26":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":25}},{"start":{"line":104,"column":29},"end":{"line":104,"column":45}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = phonex;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Constants."," */","var INITIALS = [['AEIOUY', 'A'], ['BP', 'B'], ['VF', 'F'], ['KQC', 'C'], ['JG', 'G'], ['ZS', 'S']]; /**","                                                                                                     * Talisman phonetics/phonex","                                                                                                     * ==========================","                                                                                                     *","                                                                                                     * Implementation of the \"Phonex\" algorithm.","                                                                                                     *","                                                                                                     * [Reference]:","                                                                                                     * http://homepages.cs.ncl.ac.uk/brian.randell/Genealogy/NameMatching.pdf","                                                                                                     *","                                                                                                     * [Article]:","                                                                                                     * Lait, A. J. and B. Randell. \"An Assessment of Name Matching Algorithms\".","                                                                                                     */","","","INITIALS.forEach(function (rule) {","  return rule[0] = new Set(rule[0]);","});","","var B_SET = new Set('BPFV'),","    C_SET = new Set('CSKGJQXZ'),","    VOWELS_SET = new Set('AEIOUY');","","/**"," * Function taking a single name and computing its Phonex code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The Phonex code."," *"," * @throws {Error} The function expects the name to be a string."," */","function phonex(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/phonex: the given name is not a string.');","","  if (!name) return '';","","  // Deburring the string & dropping any non-alphabetical character","  name = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-Z]/g, '');","","  // Removing trailing S","  name = name.replace(/S+$/, '');","","  // Substitution of some initials","  var firstTwoLetter = name.slice(0, 2),","      rest = name.slice(2);","","  if (firstTwoLetter === 'KN') name = 'N' + rest;else if (firstTwoLetter === 'PH') name = 'F' + rest;else if (firstTwoLetter === 'WR') name = 'R' + rest;","","  // Ignoring first H if present","  if (name[0] === 'H') name = name.slice(1);","","  // Encoding first character","  for (var i = 0, l = INITIALS.length; i < l; i++) {","    var _INITIALS$i = INITIALS[i],","        letters = _INITIALS$i[0],","        replacement = _INITIALS$i[1];","","","    if (letters.has(name[0])) {","      name = replacement + name.slice(1);","      break;","    }","  }","","  var code = name[0],","      last = code;","","  for (var _i = 1, _l = name.length; _i < _l; _i++) {","    var letter = name[_i],","        nextLetter = name[_i + 1];","","    var encoding = '0';","","    if (B_SET.has(letter)) {","      encoding = '1';","    } else if (C_SET.has(letter)) {","      encoding = '2';","    } else if (letter === 'D' || letter === 'T') {","      if (nextLetter !== 'C') encoding = '3';","    } else if (letter === 'L') {","      if (VOWELS_SET.has(nextLetter) || _i + 1 === _l) encoding = '4';","    } else if (letter === 'M' || letter === 'N') {","      if (nextLetter === 'D' || nextLetter === 'G') name = name.slice(0, _i + 1) + letter + name.slice(_i + 2);","      encoding = '5';","    } else if (letter === 'R') {","      if (VOWELS_SET.has(nextLetter) || _i + 1 === _l) encoding = '6';","    }","","    if (encoding !== last && encoding !== '0') code += encoding;","","    last = code.slice(-1);","  }","","  return code;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"17":1,"31":1,"32":6,"35":1,"47":1,"48":0,"50":0,"53":0,"56":0,"59":0,"62":0,"65":0,"68":0,"69":0,"74":0,"75":0,"76":0,"80":0,"83":0,"84":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"104":0,"106":0,"109":0,"111":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/roger-root.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/roger-root.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"pad","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":19}}},"3":{"name":"rogerRoot","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":93,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":28,"column":0},"end":{"line":55,"column":2}},"9":{"start":{"line":57,"column":0},"end":{"line":76,"column":2}},"10":{"start":{"line":81,"column":0},"end":{"line":83,"column":1}},"11":{"start":{"line":82,"column":2},"end":{"line":82,"column":38}},"12":{"start":{"line":93,"column":0},"end":{"line":135,"column":1}},"13":{"start":{"line":94,"column":2},"end":{"line":94,"column":109}},"14":{"start":{"line":94,"column":32},"end":{"line":94,"column":109}},"15":{"start":{"line":96,"column":2},"end":{"line":96,"column":74}},"16":{"start":{"line":98,"column":2},"end":{"line":99,"column":34}},"17":{"start":{"line":101,"column":2},"end":{"line":129,"column":3}},"18":{"start":{"line":102,"column":4},"end":{"line":104,"column":34}},"19":{"start":{"line":106,"column":4},"end":{"line":126,"column":5}},"20":{"start":{"line":107,"column":6},"end":{"line":123,"column":7}},"21":{"start":{"line":108,"column":8},"end":{"line":108,"column":22}},"22":{"start":{"line":111,"column":8},"end":{"line":122,"column":9}},"23":{"start":{"line":112,"column":10},"end":{"line":114,"column":40}},"24":{"start":{"line":117,"column":10},"end":{"line":121,"column":11}},"25":{"start":{"line":118,"column":12},"end":{"line":118,"column":32}},"26":{"start":{"line":119,"column":12},"end":{"line":119,"column":34}},"27":{"start":{"line":120,"column":12},"end":{"line":120,"column":18}},"28":{"start":{"line":125,"column":6},"end":{"line":125,"column":18}},"29":{"start":{"line":128,"column":4},"end":{"line":128,"column":50}},"30":{"start":{"line":128,"column":24},"end":{"line":128,"column":50}},"31":{"start":{"line":132,"column":2},"end":{"line":132,"column":91}},"32":{"start":{"line":134,"column":2},"end":{"line":134,"column":37}},"33":{"start":{"line":136,"column":0},"end":{"line":136,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"4":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":36},"end":{"line":103,"column":57}},{"start":{"line":103,"column":60},"end":{"line":103,"column":68}}]},"5":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"6":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":6}},{"start":{"line":107,"column":6},"end":{"line":107,"column":6}}]},"7":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":10},"end":{"line":117,"column":10}},{"start":{"line":117,"column":10},"end":{"line":117,"column":10}}]},"8":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = rogerRoot;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","var _helpers = require('../helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Constants."," */","/**"," * Talisman phonetics/roger-root"," * =============================="," *"," * The Roger Root name coding procedure."," *"," * [Reference]:"," * http://naldc.nal.usda.gov/download/27833/PDF"," */","var FIRST_LETTER_ENCODING = {","  A: '1',","  B: '09',","  C: [['CE', '00'], ['CH', '06'], ['CI', '00'], ['CY', '00'], ['C', '07']],","  D: [['DG', '07'], ['D', '01']],","  E: '1',","  F: '08',","  G: [['GF', '08'], ['GM', '03'], ['GN', '02'], ['G', '07']],","  H: '2',","  I: '1',","  J: '3',","  K: [['KN', '02'], ['K', '07']],","  L: '05',","  M: '03',","  N: '02',","  O: '1',","  P: [['PF', '08'], ['PH', '08'], ['PN', '02'], ['P', '09']],","  Q: '07',","  R: '04',","  S: [['SCH', '06'], ['SH', '06'], ['S', '00']],","  T: [['TSCH', '06'], ['TSH', '06'], ['TS', '00'], ['T', '01']],","  U: '1',","  V: '08',","  W: [['WR', '04'], ['W', '4']],","  X: '07',","  Y: '5',","  Z: '00'","};","","var ENCODING = {","  B: '9',","  C: [['CE', '0'], ['CH', '6'], ['CI', '0'], ['CY', '0'], ['C', '7']],","  D: [['DG', '7'], ['D', '1']],","  F: '8',","  G: '7',","  J: '6',","  K: '7',","  L: '5',","  M: '3',","  N: '2',","  P: [['PH', '8'], ['P', '9']],","  Q: '7',","  R: '4',","  S: [['SCH', '6'], ['SH', '6'], ['S', '0']],","  T: [['TSCH', '6'], ['TSH', '6'], ['TS', '0'], ['T', '1']],","  V: '8',","  X: '7',","  Z: '0'","};","","/**"," * Helpers."," */","function pad(code) {","  return (code + '00000').slice(0, 5);","}","","/**"," * Function taking a single name and computing its roger root code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The roger root code."," *"," * @throws {Error} The function expects the name to be a string."," */","function rogerRoot(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/rogerRoot: the given name is not a string.');","","  name = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-Z]/g, '');","","  var code = '',","      encodedFirstLetter = void 0;","","  for (var i = 0, l = name.length; i < l; i++) {","    var firstIteration = !i,","        encoding = firstIteration ? FIRST_LETTER_ENCODING : ENCODING,","        rules = encoding[name[i]];","","    if (rules) {","      if (typeof rules === 'string') {","        code += rules;","      } else {","","        for (var j = 0, m = rules.length; j < m; j++) {","          var _rules$j = rules[j],","              match = _rules$j[0],","              replacement = _rules$j[1];","","","          if (name.substr(i, match.length) === match) {","            code += replacement;","            i += match.length - 1;","            break;","          }","        }","      }","    } else {","      code += '-';","    }","","    if (firstIteration) encodedFirstLetter = code;","  }","","  // Squeezing the code","  code = encodedFirstLetter + (0, _helpers.squeeze)(code.slice(encodedFirstLetter.length));","","  return pad(code.replace(/-/g, ''));","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"28":1,"57":1,"81":1,"82":0,"93":1,"94":0,"96":0,"98":0,"101":0,"102":0,"106":0,"107":0,"108":0,"111":0,"112":0,"117":0,"118":0,"119":0,"120":0,"125":0,"128":0,"132":0,"134":0,"136":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/statcan.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/statcan.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"statcan","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}},"9":{"start":{"line":38,"column":0},"end":{"line":59,"column":1}},"10":{"start":{"line":40,"column":2},"end":{"line":40,"column":107}},"11":{"start":{"line":40,"column":32},"end":{"line":40,"column":107}},"12":{"start":{"line":42,"column":2},"end":{"line":42,"column":80}},"13":{"start":{"line":45,"column":2},"end":{"line":45,"column":22}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":23}},"15":{"start":{"line":49,"column":2},"end":{"line":49,"column":35}},"16":{"start":{"line":52,"column":2},"end":{"line":52,"column":37}},"17":{"start":{"line":55,"column":2},"end":{"line":55,"column":33}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":36}},"19":{"start":{"line":60,"column":0},"end":{"line":60,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = statcan;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","var _helpers = require('../helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Constants."," */","/**"," * Talisman phonetics/statcan"," * ==========================="," *"," * The statistics Canada name coding technique."," *"," * [Reference]:"," * http://naldc.nal.usda.gov/download/27833/PDF"," */","var DROPPED = /[AEIOUY]/g;","","/**"," * Function taking a single name and computing its statcan code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The statcan code."," *"," * @throws {Error} The function expects the name to be a string."," */","function statcan(name) {","","  if (typeof name !== 'string') throw Error('talisman/phonetics/statcan: the given name is not a string.');","","  var code = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-Z\\s]/g, '');","","  // 1-- Keeping the first letter","  var first = code[0];","  code = code.slice(1);","","  // 2-- Dropping vowels and Y","  code = code.replace(DROPPED, '');","","  // 3-- Dropping consecutive duplicates","  code = (0, _helpers.squeeze)(code);","","  // 4-- Dropping blanks","  code = code.replace(/\\s/g, '');","","  // 5-- Limiting code size to 4","  return (first + code).slice(0, 4);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"28":1,"38":1,"40":0,"42":0,"45":0,"46":0,"49":0,"52":0,"55":0,"58":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stats/descriptive.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stats/descriptive.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":1,"86":0,"87":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":84},"end":{"line":7,"column":99}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":124},"end":{"line":7,"column":139}}},"3":{"name":"sum","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":23}}},"4":{"name":"mean","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":24}}},"5":{"name":"addToMean","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":50}}},"6":{"name":"substractFromMean","line":86,"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":58}}},"7":{"name":"combineMeans","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":38}}},"8":{"name":"mode","line":113,"loc":{"start":{"line":113,"column":0},"end":{"line":113,"column":24}}},"9":{"name":"quantile","line":150,"loc":{"start":{"line":150,"column":0},"end":{"line":150,"column":37}}},"10":{"name":"(anonymous_10)","line":167,"loc":{"start":{"line":167,"column":37},"end":{"line":167,"column":53}}},"11":{"name":"median","line":194,"loc":{"start":{"line":194,"column":0},"end":{"line":194,"column":26}}},"12":{"name":"variance","line":206,"loc":{"start":{"line":206,"column":0},"end":{"line":206,"column":28}}},"13":{"name":"stdev","line":228,"loc":{"start":{"line":228,"column":0},"end":{"line":228,"column":25}}},"14":{"name":"combineVariances","line":245,"loc":{"start":{"line":245,"column":0},"end":{"line":245,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":269}},"3":{"start":{"line":7,"column":101},"end":{"line":7,"column":119}},"4":{"start":{"line":7,"column":141},"end":{"line":7,"column":266}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":18}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":20}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":20}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":28}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":24}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":44}},"16":{"start":{"line":34,"column":0},"end":{"line":48,"column":1}},"17":{"start":{"line":35,"column":2},"end":{"line":36,"column":12}},"18":{"start":{"line":38,"column":2},"end":{"line":45,"column":3}},"19":{"start":{"line":39,"column":4},"end":{"line":40,"column":34}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":45}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":13}},"22":{"start":{"line":47,"column":2},"end":{"line":47,"column":11}},"23":{"start":{"line":58,"column":0},"end":{"line":64,"column":1}},"24":{"start":{"line":59,"column":2},"end":{"line":59,"column":31}},"25":{"start":{"line":61,"column":2},"end":{"line":61,"column":88}},"26":{"start":{"line":61,"column":15},"end":{"line":61,"column":88}},"27":{"start":{"line":63,"column":2},"end":{"line":63,"column":32}},"28":{"start":{"line":74,"column":0},"end":{"line":76,"column":1}},"29":{"start":{"line":75,"column":2},"end":{"line":75,"column":64}},"30":{"start":{"line":86,"column":0},"end":{"line":88,"column":1}},"31":{"start":{"line":87,"column":2},"end":{"line":87,"column":60}},"32":{"start":{"line":99,"column":0},"end":{"line":101,"column":1}},"33":{"start":{"line":100,"column":2},"end":{"line":100,"column":41}},"34":{"start":{"line":113,"column":0},"end":{"line":137,"column":1}},"35":{"start":{"line":114,"column":2},"end":{"line":114,"column":103}},"36":{"start":{"line":114,"column":24},"end":{"line":114,"column":103}},"37":{"start":{"line":117,"column":2},"end":{"line":117,"column":48}},"38":{"start":{"line":117,"column":29},"end":{"line":117,"column":48}},"39":{"start":{"line":119,"column":2},"end":{"line":120,"column":14}},"40":{"start":{"line":122,"column":2},"end":{"line":122,"column":23}},"41":{"start":{"line":124,"column":2},"end":{"line":134,"column":3}},"42":{"start":{"line":125,"column":4},"end":{"line":125,"column":29}},"43":{"start":{"line":127,"column":4},"end":{"line":127,"column":51}},"44":{"start":{"line":128,"column":4},"end":{"line":128,"column":42}},"45":{"start":{"line":130,"column":4},"end":{"line":133,"column":5}},"46":{"start":{"line":131,"column":6},"end":{"line":131,"column":22}},"47":{"start":{"line":132,"column":6},"end":{"line":132,"column":27}},"48":{"start":{"line":136,"column":2},"end":{"line":136,"column":21}},"49":{"start":{"line":146,"column":0},"end":{"line":148,"column":2}},"50":{"start":{"line":150,"column":0},"end":{"line":186,"column":1}},"51":{"start":{"line":151,"column":2},"end":{"line":152,"column":17}},"52":{"start":{"line":154,"column":2},"end":{"line":159,"column":3}},"53":{"start":{"line":155,"column":4},"end":{"line":155,"column":18}},"54":{"start":{"line":156,"column":4},"end":{"line":156,"column":59}},"55":{"start":{"line":158,"column":4},"end":{"line":158,"column":16}},"56":{"start":{"line":162,"column":2},"end":{"line":162,"column":148}},"57":{"start":{"line":162,"column":43},"end":{"line":162,"column":148}},"58":{"start":{"line":164,"column":2},"end":{"line":164,"column":137}},"59":{"start":{"line":164,"column":47},"end":{"line":164,"column":137}},"60":{"start":{"line":167,"column":2},"end":{"line":170,"column":29}},"61":{"start":{"line":168,"column":4},"end":{"line":168,"column":17}},"62":{"start":{"line":173,"column":2},"end":{"line":173,"column":32}},"63":{"start":{"line":173,"column":15},"end":{"line":173,"column":32}},"64":{"start":{"line":174,"column":2},"end":{"line":174,"column":41}},"65":{"start":{"line":174,"column":15},"end":{"line":174,"column":41}},"66":{"start":{"line":177,"column":2},"end":{"line":177,"column":29}},"67":{"start":{"line":180,"column":2},"end":{"line":182,"column":3}},"68":{"start":{"line":181,"column":4},"end":{"line":181,"column":61}},"69":{"start":{"line":184,"column":2},"end":{"line":184,"column":27}},"70":{"start":{"line":185,"column":2},"end":{"line":185,"column":23}},"71":{"start":{"line":194,"column":0},"end":{"line":196,"column":1}},"72":{"start":{"line":195,"column":2},"end":{"line":195,"column":33}},"73":{"start":{"line":206,"column":0},"end":{"line":218,"column":1}},"74":{"start":{"line":207,"column":2},"end":{"line":207,"column":31}},"75":{"start":{"line":209,"column":2},"end":{"line":209,"column":92}},"76":{"start":{"line":209,"column":15},"end":{"line":209,"column":92}},"77":{"start":{"line":211,"column":2},"end":{"line":211,"column":25}},"78":{"start":{"line":213,"column":2},"end":{"line":213,"column":12}},"79":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"80":{"start":{"line":216,"column":4},"end":{"line":216,"column":38}},"81":{"start":{"line":217,"column":3},"end":{"line":217,"column":21}},"82":{"start":{"line":228,"column":0},"end":{"line":232,"column":1}},"83":{"start":{"line":229,"column":2},"end":{"line":229,"column":29}},"84":{"start":{"line":231,"column":2},"end":{"line":231,"column":22}},"85":{"start":{"line":245,"column":0},"end":{"line":249,"column":1}},"86":{"start":{"line":246,"column":2},"end":{"line":246,"column":50}},"87":{"start":{"line":248,"column":2},"end":{"line":248,"column":111}}},"branchMap":{"1":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":84},"end":{"line":7,"column":121}},{"start":{"line":7,"column":124},"end":{"line":7,"column":268}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":14},"end":{"line":7,"column":42}},{"start":{"line":7,"column":46},"end":{"line":7,"column":81}}]},"3":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":244},"end":{"line":7,"column":252}},{"start":{"line":7,"column":255},"end":{"line":7,"column":265}}]},"4":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":148},"end":{"line":7,"column":151}},{"start":{"line":7,"column":155},"end":{"line":7,"column":183}},{"start":{"line":7,"column":187},"end":{"line":7,"column":213}},{"start":{"line":7,"column":217},"end":{"line":7,"column":241}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"6":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"7":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"8":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":26},"end":{"line":127,"column":45}},{"start":{"line":127,"column":49},"end":{"line":127,"column":50}}]},"9":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"10":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"11":{"line":154,"type":"cond-expr","locations":[{"start":{"line":154,"column":40},"end":{"line":154,"column":51}},{"start":{"line":154,"column":54},"end":{"line":154,"column":70}}]},"12":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":20},"end":{"line":156,"column":41}},{"start":{"line":156,"column":45},"end":{"line":156,"column":58}}]},"13":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"14":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]},"15":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":27}},{"start":{"line":164,"column":31},"end":{"line":164,"column":36}},{"start":{"line":164,"column":40},"end":{"line":164,"column":45}}]},"16":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"17":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"18":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"19":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };","","exports.sum = sum;","exports.mean = mean;","exports.addToMean = addToMean;","exports.substractFromMean = substractFromMean;","exports.combineMeans = combineMeans;","exports.mode = mode;","exports.quantile = quantile;","exports.median = median;","exports.variance = variance;","exports.stdev = stdev;","exports.combineVariances = combineVariances;","/**"," * Talisman stats/descriptive"," * ==========================="," *"," * The library's descriptive stats helpers."," */","","/**"," * Function computing the sum of the given sequence, while correcting floating"," * point errors."," *"," * @param  {array}  sequence - The sequence to process."," * @return {number}          - The sum."," */","function sum(sequence) {","  var compensation = 0,","      s = 0;","","  for (var i = 0, l = sequence.length; i < l; i++) {","    var correctedValue = sequence[i] - compensation,","        next = s + correctedValue;","","    compensation = next - s - correctedValue;","","    s = next;","  }","","  return s;","}","","/**"," * Function computing the mean of the given sequence."," *"," * @param  {array}  sequence - The sequence to process."," * @return {number}          - The mean."," *"," * @throws {Error} - The function expects a non-empty list."," */","function mean(sequence) {","  var length = sequence.length;","","  if (!length) throw Error('talisman/stats/descriptive#mean: the given list is empty.');","","  return sum(sequence) / length;","}","","/**"," * Function adding a value to the given mean in constant time."," *"," * @param  {number}  previousMean - The mean to adjust."," * @param  {number}  nbValues     - The number of values in the given mean."," * @param  {number}  value        - The value to add."," * @return {number}               - The mean."," */","function addToMean(previousMean, nbValues, value) {","  return previousMean + (value - previousMean) / (nbValues + 1);","}","","/**"," * Function substracting a value from the given mean in constant time."," *"," * @param  {number}  previousMean - The mean to adjust."," * @param  {number}  nbValues     - The number of values in the given mean."," * @param  {number}  value        - The value to substract."," * @return {number}               - The mean."," */","function substractFromMean(previousMean, nbValues, value) {","  return (previousMean * nbValues - value) / (nbValues - 1);","}","","/**"," * Function combining two means into one in constant time."," *"," * @param  {number} ma - The first mean."," * @param  {number} na - Number of values for a."," * @param  {number} mb - The second mean."," * @param  {number} nb - Number of values for b."," * @return {number}    - The new mean."," */","function combineMeans(ma, na, mb, nb) {","  return (ma * na + mb * nb) / (na + nb);","}","","/**"," * Function finding the mode of the given sequence."," *"," * Note: If there are more than one mode, will return the first one seen."," *"," * @param  {array}  sequence - The sequence to process."," * @return {number}          - The sequence's mode."," *"," * @throws {Error} - The function expects a non-empty list."," */","function mode(sequence) {","  if (!sequence.length) throw Error('talisman/stats/descriptive#modeSorted: the given list is empty.');","","  // Shortcut","  if (sequence.length === 1) return sequence[0];","","  var currentMode = null,","      max = 0;","","  var frequencies = {};","","  for (var i = 0, l = sequence.length; i < l; i++) {","    var number = sequence[i];","","    frequencies[number] = frequencies[number] || 0;","    var frequency = ++frequencies[number];","","    if (frequency > max) {","      max = frequency;","      currentMode = number;","    }","  }","","  return currentMode;","}","","/**"," * Function computing quantile."," *"," * @param  {number|object} p        - Desired quantile or options."," * @param  {array}         sequence - The sequence to process."," * @return {number}"," */","var QUANTILE_DEFAULTS = {","  interpolation: mean","};","","function quantile(options, sequence) {","  var interpolation = QUANTILE_DEFAULTS.interpolation,","      p = void 0;","","  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {","    p = options.p;","    interpolation = options.interpolation || interpolation;","  } else {","    p = options;","  }","","  // Validation","  if (typeof interpolation !== 'function') throw Error('talisman/stats/descriptive#quantile: expecting a function for the \"interpolation\" option.');","","  if (typeof p !== 'number' || p < 0 || p > 1) throw Error('talisman/stats/descriptive#quantile: p should be a number between 0 and 1.');","","  // First we need to sort the sequence","  var sorted = sequence.slice().sort(function (a, b) {","    return a - b;","  }),","      length = sorted.length;","","  // Simple cases","  if (p === 0) return sorted[0];","  if (p === 1) return sorted[length - 1];","","  // Computing the index","  var index = length * p - 1;","","  // If the index is an integer, we need to interpolate","  if (index === (index | 0)) {","    return interpolation([sorted[index], sorted[index + 1]]);","  }","","  index = Math.ceil(index);","  return sorted[index];","}","","/**"," * Function computing the median of the given sequence."," *"," * @param  {array}  sequence - The sequence to process."," * @return {number}"," */","function median(sequence) {","  return quantile(0.5, sequence);","}","","/**"," * Function computing the variance of the given sequence."," *"," * @param  {array}  sequence - The sequence to process."," * @return {number}          - The variance."," *"," * @throws {Error} - The function expects a non-empty list."," */","function variance(sequence) {","  var length = sequence.length;","","  if (!length) throw Error('talisman/stats/descriptive#variance: the given list is empty.');","","  var m = mean(sequence);","","  var s = 0;","","  for (var i = 0; i < length; i++) {","    s += Math.pow(sequence[i] - m, 2);","  }return s / length;","}","","/**"," * Function computing the standard deviation of the given sequence."," *"," * @param  {array}  sequence - The sequence to process."," * @return {number}          - The standard deviation."," *"," * @throws {Error} - The function expects a non-empty list."," */","function stdev(sequence) {","  var v = variance(sequence);","","  return Math.sqrt(v);","}","","/**"," * Function combining two variances into one in constant time."," *"," * @param  {number} ma - The first mean."," * @param  {number} va - The first variance."," * @param  {number} na - Number of values for a."," * @param  {number} mb - The second mean."," * @param  {number} vb - The second variance."," * @param  {number} nb - Number of values for b."," * @return {number}    - The new mean."," */","function combineVariances(ma, va, na, mb, vb, nb) {","  var combinedMean = combineMeans(ma, na, mb, nb);","","  return (na * (va + Math.pow(ma - combinedMean, 2)) + nb * (vb + Math.pow(mb - combinedMean, 2))) / (na + nb);","}"],"l":{"3":1,"7":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"34":1,"35":0,"38":0,"39":0,"42":0,"44":0,"47":0,"58":1,"59":0,"61":0,"63":0,"74":1,"75":0,"86":1,"87":0,"99":1,"100":0,"113":1,"114":0,"117":0,"119":0,"122":0,"124":0,"125":0,"127":0,"128":0,"130":0,"131":0,"132":0,"136":0,"146":1,"150":1,"151":0,"154":0,"155":0,"156":0,"158":0,"162":0,"164":0,"167":0,"168":0,"173":0,"174":0,"177":0,"180":0,"181":0,"184":0,"185":0,"194":1,"195":0,"206":1,"207":0,"209":0,"211":0,"213":0,"215":0,"216":0,"217":0,"228":1,"229":0,"231":0,"245":1,"246":0,"248":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stats/frequencies.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stats/frequencies.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":84},"end":{"line":8,"column":99}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":124},"end":{"line":8,"column":139}}},"3":{"name":"frequencies","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":31}}},"4":{"name":"relativeFrequencies","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":39}}},"5":{"name":"updateFrequencies","line":89,"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":58}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":269}},"4":{"start":{"line":8,"column":101},"end":{"line":8,"column":119}},"5":{"start":{"line":8,"column":141},"end":{"line":8,"column":266}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":46}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}},"8":{"start":{"line":30,"column":0},"end":{"line":44,"column":1}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":17}},"10":{"start":{"line":34,"column":2},"end":{"line":34,"column":41}},"11":{"start":{"line":36,"column":2},"end":{"line":41,"column":3}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":30}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":44}},"14":{"start":{"line":39,"column":25},"end":{"line":39,"column":44}},"15":{"start":{"line":40,"column":4},"end":{"line":40,"column":21}},"16":{"start":{"line":43,"column":2},"end":{"line":43,"column":15}},"17":{"start":{"line":58,"column":0},"end":{"line":80,"column":1}},"18":{"start":{"line":59,"column":2},"end":{"line":60,"column":22}},"19":{"start":{"line":63,"column":2},"end":{"line":73,"column":3}},"20":{"start":{"line":64,"column":4},"end":{"line":64,"column":21}},"21":{"start":{"line":65,"column":4},"end":{"line":65,"column":15}},"22":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"23":{"start":{"line":68,"column":6},"end":{"line":68,"column":25}},"24":{"start":{"line":71,"column":4},"end":{"line":71,"column":29}},"25":{"start":{"line":72,"column":4},"end":{"line":72,"column":34}},"26":{"start":{"line":75,"column":2},"end":{"line":75,"column":25}},"27":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"28":{"start":{"line":78,"column":4},"end":{"line":78,"column":43}},"29":{"start":{"line":79,"column":3},"end":{"line":79,"column":24}},"30":{"start":{"line":89,"column":0},"end":{"line":98,"column":1}},"31":{"start":{"line":90,"column":2},"end":{"line":90,"column":41}},"32":{"start":{"line":92,"column":2},"end":{"line":92,"column":45}},"33":{"start":{"line":95,"column":2},"end":{"line":97,"column":3}},"34":{"start":{"line":96,"column":4},"end":{"line":96,"column":74}},"35":{"start":{"line":97,"column":3},"end":{"line":97,"column":25}},"36":{"start":{"line":103,"column":0},"end":{"line":103,"column":30}},"37":{"start":{"line":104,"column":0},"end":{"line":104,"column":31}},"38":{"start":{"line":105,"column":0},"end":{"line":105,"column":39}},"39":{"start":{"line":106,"column":0},"end":{"line":106,"column":36}},"40":{"start":{"line":107,"column":0},"end":{"line":107,"column":65}},"41":{"start":{"line":108,"column":0},"end":{"line":108,"column":47}},"42":{"start":{"line":109,"column":0},"end":{"line":109,"column":47}}},"branchMap":{"1":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":84},"end":{"line":8,"column":121}},{"start":{"line":8,"column":124},"end":{"line":8,"column":268}}]},"2":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":14},"end":{"line":8,"column":42}},{"start":{"line":8,"column":46},"end":{"line":8,"column":81}}]},"3":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":244},"end":{"line":8,"column":252}},{"start":{"line":8,"column":255},"end":{"line":8,"column":265}}]},"4":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":148},"end":{"line":8,"column":151}},{"start":{"line":8,"column":155},"end":{"line":8,"column":183}},{"start":{"line":8,"column":187},"end":{"line":8,"column":213}},{"start":{"line":8,"column":217},"end":{"line":8,"column":241}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"7":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":86}},{"start":{"line":63,"column":90},"end":{"line":63,"column":114}}]},"8":{"line":63,"type":"cond-expr","locations":[{"start":{"line":63,"column":41},"end":{"line":63,"column":52}},{"start":{"line":63,"column":55},"end":{"line":63,"column":72}}]},"9":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":25},"end":{"line":96,"column":42}},{"start":{"line":96,"column":46},"end":{"line":96,"column":47}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.relative = exports.absolute = undefined;","","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /**","                                                                                                                                                                                                                                                                               * Talisman stats/frequenciesunctions related to sequences' frequencies.","                                                                                                                                                                                                                                                                               */","","","exports.updateFrequencies = updateFrequencies;","","var _helpers = require('../helpers');","","/**"," * Function taking a sequence and computing its frequencies."," *"," * @param  {mixed}  sequence - The sequence to process."," * @return {object}          - A dict of the sequence's frequencies."," *"," * @example"," *   // frequencies([1, 1, 2, 3, 3, 3]) => {1: 2, 2: 1, 3: 3}"," *   // frequencies('test') => {t: 2, e: 1, s: 1}"," */","function frequencies(sequence) {","  var index = {};","","  // Handling strings","  sequence = (0, _helpers.seq)(sequence);","","  for (var i = 0, l = sequence.length; i < l; i++) {","    var element = sequence[i];","","    if (!index[element]) index[element] = 0;","    index[element]++;","  }","","  return index;","}","","/**"," * Relative version of the `frequencies` function."," *"," * @param  {mixed}  sequence - The sequence to process. If an object is passed"," *                             the function will assume it's representing"," *                             absolute frequencies."," * @return {object}          - A dict of the sequence's relative frequencies."," *"," * @example"," *   // frequencies([1, 1, 2, 3, 3, 3]) => {1: ~0.33, 2: ~0.16, 3: 0.5}"," *   // frequencies('test') => {t: 0.5, e: 0.25, s: 0.25}"," */","function relativeFrequencies(sequence) {","  var index = void 0,","      length = void 0;","","  // Handling the object polymorphism","  if ((typeof sequence === 'undefined' ? 'undefined' : _typeof(sequence)) === 'object' && !Array.isArray(sequence)) {","    index = sequence;","    length = 0;","","    for (var k in index) {","      length += index[k];","    }","  } else {","    length = sequence.length;","    index = frequencies(sequence);","  }","","  var relativeIndex = {};","","  for (var _k in index) {","    relativeIndex[_k] = index[_k] / length;","  }return relativeIndex;","}","","/**"," * Function taking frequencies and updating them with a new sequence."," *"," * @param  {object} previousFrequencies  - The frequencies to update."," * @param  {mixed}  sequence             - The added sequence."," * @return {object}                      - The updated frequencies."," */","function updateFrequencies(previousFrequencies, sequence) {","  sequence = (0, _helpers.seq)(sequence);","","  var newFrequencies = frequencies(sequence);","","  // Merging frequencies","  for (var k in previousFrequencies) {","    newFrequencies[k] = (newFrequencies[k] || 0) + previousFrequencies[k];","  }return newFrequencies;","}","","/**"," * Exporting"," */","exports.default = frequencies;","exports.absolute = frequencies;","exports.relative = relativeFrequencies;","module.exports = exports['default'];","exports['default'].updateFrequencies = exports.updateFrequencies;","exports['default'].absolute = exports.absolute;","exports['default'].relative = exports.relative;"],"l":{"3":1,"6":1,"8":1,"16":1,"18":1,"30":1,"31":0,"34":0,"36":0,"37":0,"39":0,"40":0,"43":0,"58":1,"59":0,"63":0,"64":0,"65":0,"67":0,"68":0,"71":0,"72":0,"75":0,"77":0,"78":0,"79":0,"89":1,"90":0,"92":0,"95":0,"96":0,"97":0,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stats/inferential.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stats/inferential.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":1,"37":1,"38":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"genericVariance","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}}},"2":{"name":"genericStdev","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":38}}},"3":{"name":"sampleCovariance","line":77,"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":32}}},"4":{"name":"sampleCorrelation","line":100,"loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":92}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}},"6":{"start":{"line":21,"column":0},"end":{"line":38,"column":1}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":31}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":92}},"9":{"start":{"line":24,"column":15},"end":{"line":24,"column":92}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":34}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"12":{"start":{"line":29,"column":24},"end":{"line":29,"column":33}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":43}},"14":{"start":{"line":33,"column":2},"end":{"line":33,"column":12}},"15":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":38}},"17":{"start":{"line":37,"column":3},"end":{"line":37,"column":26}},"18":{"start":{"line":55,"column":0},"end":{"line":59,"column":1}},"19":{"start":{"line":56,"column":2},"end":{"line":56,"column":42}},"20":{"start":{"line":58,"column":2},"end":{"line":58,"column":22}},"21":{"start":{"line":64,"column":0},"end":{"line":65,"column":45}},"22":{"start":{"line":77,"column":0},"end":{"line":91,"column":1}},"23":{"start":{"line":78,"column":2},"end":{"line":78,"column":139}},"24":{"start":{"line":78,"column":29},"end":{"line":78,"column":139}},"25":{"start":{"line":80,"column":2},"end":{"line":80,"column":132}},"26":{"start":{"line":80,"column":21},"end":{"line":80,"column":132}},"27":{"start":{"line":82,"column":2},"end":{"line":84,"column":19}},"28":{"start":{"line":86,"column":2},"end":{"line":86,"column":14}},"29":{"start":{"line":88,"column":2},"end":{"line":90,"column":3}},"30":{"start":{"line":89,"column":4},"end":{"line":89,"column":43}},"31":{"start":{"line":90,"column":3},"end":{"line":90,"column":24}},"32":{"start":{"line":100,"column":0},"end":{"line":104,"column":1}},"33":{"start":{"line":101,"column":2},"end":{"line":101,"column":42}},"34":{"start":{"line":103,"column":2},"end":{"line":103,"column":56}},"35":{"start":{"line":106,"column":0},"end":{"line":106,"column":35}},"36":{"start":{"line":107,"column":0},"end":{"line":107,"column":29}},"37":{"start":{"line":108,"column":0},"end":{"line":108,"column":40}},"38":{"start":{"line":109,"column":0},"end":{"line":109,"column":34}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"3":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"4":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.sampleStdev = exports.sampleVariance = exports.stdev = exports.variance = undefined;","exports.sampleCovariance = sampleCovariance;","exports.sampleCorrelation = sampleCorrelation;","","var _descriptive = require('./descriptive');","","/**"," * Function computing the sample variance of the given sequence."," *"," * @param  {number}  ddof     - Delta degrees of freedom."," * @param  {array}   sequence - The sequence to process."," * @return {number}           - The variance."," *"," * @throws {Error} - The function expects a non-empty list."," */","function genericVariance(ddof, sequence) {","  var length = sequence.length;","","  if (!length) throw Error('talisman/stats/inferential#variance: the given list is empty.');","","  // Returning 0 if the denominator would be <= 0","  var denominator = length - ddof;","","  if (denominator <= 0) return 0;","","  var m = (0, _descriptive.mean)(sequence);","","  var s = 0;","","  for (var i = 0; i < length; i++) {","    s += Math.pow(sequence[i] - m, 2);","  }return s / denominator;","}","","/**"," * Function computing the sample standard deviation of the given sequence."," *"," * @param  {number}  ddof     - Delta degrees of freedom."," * @param  {array}   sequence - The sequence to process."," * @return {number}           - The variance."," *"," * @throws {Error} - The function expects a non-empty list."," */","/**"," * Talisman stats/inferential"," * ==========================="," *"," * The library's inferential stats helpers."," */","function genericStdev(ddof, sequence) {","  var v = genericVariance(ddof, sequence);","","  return Math.sqrt(v);","}","","/**"," * Exporting convenient methods."," */","var sampleVariance = genericVariance.bind(null, 1),","    sampleStdev = genericStdev.bind(null, 1);","","/**"," * Function computing the sample covariance."," *"," * @param  {array}  x - First sequence."," * @param  {array}  y - Second sequence."," * @return {number}   - The sample covariance."," *"," * @throws {Error} - The function expects two equal-length lists."," * @throws {Error} - The function expects lists containing more than one item."," */","function sampleCovariance(x, y) {","  if (x.length !== y.length) throw Error('talisman/stats/inferential#sampleCovariance: this function expects two sequences of same size.');","","  if (x.length <= 1) throw Error('talisman/stats/inferential#sampleCovariance: the given lists should contain more than one item.');","","  var xMean = (0, _descriptive.mean)(x),","      yMean = (0, _descriptive.mean)(y),","      n = x.length;","","  var sum = 0;","","  for (var i = 0; i < n; i++) {","    sum += (x[i] - xMean) * (y[i] - yMean);","  }return sum / (n - 1);","}","","/**"," * Function computing the sample correlation coefficient."," *"," * @param  {array}  x - First sequence."," * @param  {array}  y - Second sequence."," * @return {number}   - The sample correlation coefficient."," */","function sampleCorrelation(x, y) {","  var covariance = sampleCovariance(x, y);","","  return covariance / (sampleStdev(x) * sampleStdev(y));","}","","exports.variance = genericVariance;","exports.stdev = genericStdev;","exports.sampleVariance = sampleVariance;","exports.sampleStdev = sampleStdev;"],"l":{"3":1,"6":1,"7":1,"8":1,"10":1,"21":1,"22":0,"24":0,"27":0,"29":0,"31":0,"33":0,"35":0,"36":0,"37":0,"55":1,"56":0,"58":0,"64":1,"77":1,"78":0,"80":0,"82":0,"86":0,"88":0,"89":0,"90":0,"100":1,"101":0,"103":0,"106":1,"107":1,"108":1,"109":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/lancaster.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/lancaster.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"isStemAcceptable","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":32}}},"2":{"name":"lancaster","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":21,"column":0},"end":{"line":24,"column":24}},"4":{"start":{"line":26,"column":0},"end":{"line":48,"column":2}},"5":{"start":{"line":53,"column":0},"end":{"line":53,"column":23}},"6":{"start":{"line":58,"column":0},"end":{"line":61,"column":1}},"7":{"start":{"line":59,"column":2},"end":{"line":59,"column":57}},"8":{"start":{"line":59,"column":34},"end":{"line":59,"column":57}},"9":{"start":{"line":60,"column":2},"end":{"line":60,"column":45}},"10":{"start":{"line":69,"column":0},"end":{"line":113,"column":1}},"11":{"start":{"line":70,"column":2},"end":{"line":71,"column":20}},"12":{"start":{"line":73,"column":2},"end":{"line":73,"column":50}},"13":{"start":{"line":75,"column":2},"end":{"line":75,"column":26}},"14":{"start":{"line":75,"column":14},"end":{"line":75,"column":26}},"15":{"start":{"line":77,"column":2},"end":{"line":78,"column":23}},"16":{"start":{"line":80,"column":2},"end":{"line":110,"column":3}},"17":{"start":{"line":81,"column":4},"end":{"line":84,"column":27}},"18":{"start":{"line":87,"column":4},"end":{"line":87,"column":45}},"19":{"start":{"line":87,"column":36},"end":{"line":87,"column":45}},"20":{"start":{"line":89,"column":4},"end":{"line":89,"column":48}},"21":{"start":{"line":91,"column":4},"end":{"line":91,"column":70}},"22":{"start":{"line":91,"column":61},"end":{"line":91,"column":70}},"23":{"start":{"line":93,"column":4},"end":{"line":93,"column":38}},"24":{"start":{"line":93,"column":26},"end":{"line":93,"column":38}},"25":{"start":{"line":95,"column":4},"end":{"line":95,"column":56}},"26":{"start":{"line":97,"column":4},"end":{"line":97,"column":42}},"27":{"start":{"line":97,"column":33},"end":{"line":97,"column":42}},"28":{"start":{"line":99,"column":4},"end":{"line":99,"column":16}},"29":{"start":{"line":101,"column":4},"end":{"line":109,"column":5}},"30":{"start":{"line":102,"column":6},"end":{"line":102,"column":21}},"31":{"start":{"line":103,"column":6},"end":{"line":103,"column":50}},"32":{"start":{"line":105,"column":6},"end":{"line":105,"column":30}},"33":{"start":{"line":105,"column":18},"end":{"line":105,"column":30}},"34":{"start":{"line":107,"column":6},"end":{"line":107,"column":13}},"35":{"start":{"line":108,"column":6},"end":{"line":108,"column":23}},"36":{"start":{"line":112,"column":2},"end":{"line":112,"column":14}},"37":{"start":{"line":114,"column":0},"end":{"line":114,"column":36}}},"branchMap":{"1":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"2":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":9},"end":{"line":60,"column":24}},{"start":{"line":60,"column":28},"end":{"line":60,"column":44}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"4":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"5":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":15}},{"start":{"line":87,"column":19},"end":{"line":87,"column":34}}]},"6":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"7":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":22}},{"start":{"line":91,"column":26},"end":{"line":91,"column":59}}]},"8":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"9":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"10":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":6}},{"start":{"line":105,"column":6},"end":{"line":105,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = lancaster;","/**"," * Talisman stemmers/lancaster"," * ============================"," *"," * The Lancaster stemmer."," *"," * [Article]:"," * A word stemmer based on the Lancaster stemming algorithm."," * Paice, Chris D. \"Another Stemmer.\" ACM SIGIR Forum 24.3 (1990): 56-61."," */","","/**"," * Rules of the stemmer."," */","var INTACT = 'INTACT',","    CONTINUE = 'CONTINUE',","    STOP = 'STOP',","    PROTECT = 'PROTECT';","","var RULES = {","  a: [['ia', '', INTACT], ['a', '', INTACT]],","  b: [['bb', 'b', STOP]],","  c: [['ytic', 'ys', STOP], ['ic', '', CONTINUE], ['nc', 'nt', CONTINUE]],","  d: [['dd', 'd', STOP], ['ied', 'y', CONTINUE], ['ceed', 'cess', STOP], ['eed', 'ee', STOP], ['ed', '', CONTINUE], ['hood', '', CONTINUE]],","  e: [['e', '', CONTINUE]],","  f: [['lief', 'liev', STOP], ['if', '', CONTINUE]],","  g: [['ing', '', CONTINUE], ['iag', 'y', STOP], ['ag', '', CONTINUE], ['gg', 'g', STOP]],","  h: [['th', '', INTACT], ['guish', 'ct', STOP], ['ish', '', CONTINUE]],","  i: [['i', '', INTACT], ['i', 'y', CONTINUE]],","  j: [['ij', 'id', STOP], ['fuj', 'fus', STOP], ['uj', 'ud', STOP], ['oj', 'od', STOP], ['hej', 'her', STOP], ['verj', 'vert', STOP], ['misj', 'mit', STOP], ['nj', 'nd', STOP], ['j', 's', STOP]],","  l: [['ifiabl', '', STOP], ['iabl', 'y', STOP], ['abl', '', CONTINUE], ['ibl', '', STOP], ['bil', 'bl', CONTINUE], ['cl', 'c', STOP], ['iful', 'y', STOP], ['ful', '', CONTINUE], ['ul', '', STOP], ['ial', '', CONTINUE], ['ual', '', CONTINUE], ['al', '', CONTINUE], ['ll', 'l', STOP]],","  m: [['ium', '', STOP], ['um', '', INTACT], ['ism', '', CONTINUE], ['mm', 'm', STOP]],","  n: [['sion', 'j', CONTINUE], ['xion', 'ct', STOP], ['ion', '', CONTINUE], ['ian', '', CONTINUE], ['an', '', CONTINUE], ['een', '', PROTECT], ['en', '', CONTINUE], ['nn', 'n', STOP]],","  p: [['ship', '', CONTINUE], ['pp', 'p', STOP]],","  r: [['er', '', CONTINUE], ['ear', '', PROTECT], ['ar', '', STOP], ['ior', '', CONTINUE], ['or', '', CONTINUE], ['ur', '', CONTINUE], ['rr', 'r', STOP], ['tr', 't', CONTINUE], ['ier', 'y', CONTINUE]],","  s: [['ies', 'y', CONTINUE], ['sis', 's', STOP], ['is', '', CONTINUE], ['ness', '', CONTINUE], ['ss', '', PROTECT], ['ous', '', CONTINUE], ['us', '', INTACT], ['s', '', CONTINUE], ['s', '', STOP]],","  t: [['plicat', 'ply', STOP], ['at', '', CONTINUE], ['ment', '', CONTINUE], ['ent', '', CONTINUE], ['ant', '', CONTINUE], ['ript', 'rib', STOP], ['orpt', 'orb', STOP], ['duct', 'duc', STOP], ['sumpt', 'sum', STOP], ['cept', 'ceiv', STOP], ['olut', 'olv', STOP], ['sist', '', PROTECT], ['ist', '', CONTINUE], ['tt', 't', STOP]],","  u: [['iqu', '', STOP], ['ogu', 'og', STOP]],","  v: [['siv', 'j', CONTINUE], ['eiv', '', PROTECT], ['iv', '', CONTINUE]],","  y: [['bly', 'bl', CONTINUE], ['ily', 'y', CONTINUE], ['ply', '', PROTECT], ['ly', '', CONTINUE], ['ogy', 'og', STOP], ['phy', 'ph', STOP], ['omy', 'om', STOP], ['opy', 'op', STOP], ['ity', '', CONTINUE], ['ety', '', CONTINUE], ['lty', 'l', STOP], ['istry', '', STOP], ['ary', '', CONTINUE], ['ory', '', CONTINUE], ['ify', '', STOP], ['ncy', 'nt', CONTINUE], ['acy', '', CONTINUE]],","  z: [['iz', '', CONTINUE], ['yz', 'ys', STOP]]","};","","/**"," * Patterns."," */","var VOWEL = /[aeiouy]/;","","/**"," * Helpers."," */","function isStemAcceptable(stem) {","  if (VOWEL.test(stem.charAt(0))) return stem.length > 1;","  return stem.length > 2 && VOWEL.test(stem);","}","","/**"," * Function stemming the given world using the Lancaster algorithm."," *"," * @param  {string} word - The word to stem."," * @return {string}      - The resulting stem."," */","function lancaster(word) {","  var stem = word.toLowerCase(),","      intact = true;","","  var rules = RULES[stem.charAt(stem.length - 1)];","","  if (!rules) return stem;","","  var i = -1,","      l = rules.length;","","  while (++i < l) {","    var _rules$i = rules[i],","        match = _rules$i[0],","        replacement = _rules$i[1],","        kind = _rules$i[2];","","","    if (!intact && kind === INTACT) continue;","","    var breakpoint = stem.length - match.length;","","    if (breakpoint < 0 || stem.substr(breakpoint) !== match) continue;","","    if (kind === PROTECT) return stem;","","    var next = stem.substr(0, breakpoint) + replacement;","","    if (!isStemAcceptable(next)) continue;","","    stem = next;","","    if (kind === CONTINUE) {","      intact = false;","      rules = RULES[stem.charAt(stem.length - 1)];","","      if (!rules) return stem;","","      i = -1;","      l = rules.length;","    }","  }","","  return stem;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"21":1,"26":1,"53":1,"58":1,"59":0,"60":0,"69":1,"70":0,"73":0,"75":0,"77":0,"80":0,"81":0,"87":0,"89":0,"91":0,"93":0,"95":0,"97":0,"99":0,"101":0,"102":0,"103":0,"105":0,"107":0,"108":0,"112":0,"114":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/lovins.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/lovins.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":294,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"A","line":36,"loc":{"start":{"line":36,"column":5},"end":{"line":36,"column":18}}},"2":{"name":"B","line":39,"loc":{"start":{"line":39,"column":5},"end":{"line":39,"column":22}}},"3":{"name":"C","line":42,"loc":{"start":{"line":42,"column":5},"end":{"line":42,"column":22}}},"4":{"name":"D","line":45,"loc":{"start":{"line":45,"column":5},"end":{"line":45,"column":22}}},"5":{"name":"E","line":48,"loc":{"start":{"line":48,"column":5},"end":{"line":48,"column":22}}},"6":{"name":"F","line":51,"loc":{"start":{"line":51,"column":5},"end":{"line":51,"column":22}}},"7":{"name":"G","line":54,"loc":{"start":{"line":54,"column":5},"end":{"line":54,"column":22}}},"8":{"name":"H","line":57,"loc":{"start":{"line":57,"column":5},"end":{"line":57,"column":22}}},"9":{"name":"I","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":22}}},"10":{"name":"J","line":64,"loc":{"start":{"line":64,"column":5},"end":{"line":64,"column":22}}},"11":{"name":"K","line":67,"loc":{"start":{"line":67,"column":5},"end":{"line":67,"column":22}}},"12":{"name":"L","line":70,"loc":{"start":{"line":70,"column":5},"end":{"line":70,"column":22}}},"13":{"name":"M","line":73,"loc":{"start":{"line":73,"column":5},"end":{"line":73,"column":22}}},"14":{"name":"N","line":76,"loc":{"start":{"line":76,"column":5},"end":{"line":76,"column":22}}},"15":{"name":"O","line":80,"loc":{"start":{"line":80,"column":5},"end":{"line":80,"column":22}}},"16":{"name":"P","line":84,"loc":{"start":{"line":84,"column":5},"end":{"line":84,"column":22}}},"17":{"name":"Q","line":87,"loc":{"start":{"line":87,"column":5},"end":{"line":87,"column":22}}},"18":{"name":"R","line":90,"loc":{"start":{"line":90,"column":5},"end":{"line":90,"column":22}}},"19":{"name":"S","line":94,"loc":{"start":{"line":94,"column":5},"end":{"line":94,"column":22}}},"20":{"name":"T","line":98,"loc":{"start":{"line":98,"column":5},"end":{"line":98,"column":22}}},"21":{"name":"U","line":102,"loc":{"start":{"line":102,"column":5},"end":{"line":102,"column":22}}},"22":{"name":"V","line":106,"loc":{"start":{"line":106,"column":5},"end":{"line":106,"column":22}}},"23":{"name":"W","line":110,"loc":{"start":{"line":110,"column":5},"end":{"line":110,"column":22}}},"24":{"name":"X","line":113,"loc":{"start":{"line":113,"column":5},"end":{"line":113,"column":22}}},"25":{"name":"Y","line":117,"loc":{"start":{"line":117,"column":5},"end":{"line":117,"column":22}}},"26":{"name":"Z","line":121,"loc":{"start":{"line":121,"column":5},"end":{"line":121,"column":22}}},"27":{"name":"AA","line":124,"loc":{"start":{"line":124,"column":6},"end":{"line":124,"column":24}}},"28":{"name":"BB","line":128,"loc":{"start":{"line":128,"column":6},"end":{"line":128,"column":24}}},"29":{"name":"CC","line":131,"loc":{"start":{"line":131,"column":6},"end":{"line":131,"column":24}}},"30":{"name":"lovins","line":148,"loc":{"start":{"line":148,"column":0},"end":{"line":148,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":26,"column":0},"end":{"line":26,"column":4494}},"4":{"start":{"line":28,"column":0},"end":{"line":28,"column":17}},"5":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":55}},"7":{"start":{"line":35,"column":0},"end":{"line":135,"column":2}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":16}},"9":{"start":{"line":40,"column":4},"end":{"line":40,"column":27}},"10":{"start":{"line":43,"column":4},"end":{"line":43,"column":27}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":27}},"12":{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},"13":{"start":{"line":52,"column":4},"end":{"line":52,"column":52}},"14":{"start":{"line":55,"column":4},"end":{"line":55,"column":49}},"15":{"start":{"line":58,"column":4},"end":{"line":59,"column":6}},"16":{"start":{"line":62,"column":4},"end":{"line":62,"column":31}},"17":{"start":{"line":65,"column":4},"end":{"line":65,"column":31}},"18":{"start":{"line":68,"column":4},"end":{"line":68,"column":60}},"19":{"start":{"line":71,"column":4},"end":{"line":71,"column":40}},"20":{"start":{"line":74,"column":4},"end":{"line":74,"column":33}},"21":{"start":{"line":77,"column":4},"end":{"line":78,"column":6}},"22":{"start":{"line":81,"column":4},"end":{"line":82,"column":6}},"23":{"start":{"line":85,"column":4},"end":{"line":85,"column":28}},"24":{"start":{"line":88,"column":4},"end":{"line":88,"column":53}},"25":{"start":{"line":91,"column":4},"end":{"line":92,"column":6}},"26":{"start":{"line":95,"column":4},"end":{"line":96,"column":6}},"27":{"start":{"line":99,"column":4},"end":{"line":100,"column":6}},"28":{"start":{"line":103,"column":4},"end":{"line":104,"column":6}},"29":{"start":{"line":107,"column":4},"end":{"line":108,"column":6}},"30":{"start":{"line":111,"column":4},"end":{"line":111,"column":31}},"31":{"start":{"line":114,"column":4},"end":{"line":115,"column":6}},"32":{"start":{"line":118,"column":4},"end":{"line":119,"column":6}},"33":{"start":{"line":122,"column":4},"end":{"line":122,"column":28}},"34":{"start":{"line":125,"column":4},"end":{"line":126,"column":6}},"35":{"start":{"line":129,"column":4},"end":{"line":129,"column":58}},"36":{"start":{"line":132,"column":4},"end":{"line":133,"column":6}},"37":{"start":{"line":140,"column":0},"end":{"line":140,"column":627}},"38":{"start":{"line":148,"column":0},"end":{"line":181,"column":1}},"39":{"start":{"line":151,"column":2},"end":{"line":151,"column":50}},"40":{"start":{"line":154,"column":2},"end":{"line":154,"column":18}},"41":{"start":{"line":155,"column":2},"end":{"line":164,"column":3}},"42":{"start":{"line":156,"column":4},"end":{"line":158,"column":35}},"43":{"start":{"line":161,"column":4},"end":{"line":161,"column":35}},"44":{"start":{"line":163,"column":4},"end":{"line":163,"column":91}},"45":{"start":{"line":163,"column":85},"end":{"line":163,"column":91}},"46":{"start":{"line":167,"column":2},"end":{"line":169,"column":3}},"47":{"start":{"line":168,"column":4},"end":{"line":168,"column":29}},"48":{"start":{"line":172,"column":2},"end":{"line":178,"column":3}},"49":{"start":{"line":173,"column":4},"end":{"line":175,"column":45}},"50":{"start":{"line":177,"column":4},"end":{"line":177,"column":44}},"51":{"start":{"line":180,"column":2},"end":{"line":180,"column":14}},"52":{"start":{"line":182,"column":0},"end":{"line":182,"column":36}}},"branchMap":{"1":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":11},"end":{"line":52,"column":29}},{"start":{"line":52,"column":33},"end":{"line":52,"column":51}}]},"2":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":11},"end":{"line":55,"column":29}},{"start":{"line":55,"column":33},"end":{"line":55,"column":48}}]},"3":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":11},"end":{"line":68,"column":29}},{"start":{"line":68,"column":33},"end":{"line":68,"column":59}}]},"4":{"line":77,"type":"cond-expr","locations":[{"start":{"line":77,"column":35},"end":{"line":77,"column":53}},{"start":{"line":77,"column":56},"end":{"line":77,"column":74}}]},"5":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":11},"end":{"line":88,"column":29}},{"start":{"line":88,"column":33},"end":{"line":88,"column":52}}]},"6":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":11},"end":{"line":129,"column":29}},{"start":{"line":129,"column":33},"end":{"line":129,"column":57}}]},"7":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"8":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":8},"end":{"line":163,"column":23}},{"start":{"line":163,"column":27},"end":{"line":163,"column":52}},{"start":{"line":163,"column":56},"end":{"line":163,"column":83}}]},"9":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"10":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":36}},{"start":{"line":167,"column":40},"end":{"line":167,"column":87}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = lovins;","/* eslint no-multi-spaces: 0 */","/* eslint no-confusing-arrow: 0 */","/**"," * Talisman stemmers/lovins"," * ========================="," *"," * Julie Beth Lovins' stemmer."," *"," * [Reference]:"," * http://snowball.tartarus.org/algorithms/lovins/stemmer.html"," *"," * [Article]:"," * Lovins JB (1968) Development of a stemming algorithm. Mechanical Translation"," * and Computational Linguistics, 11: 22-31."," */","","/**"," * Endings."," */","var ENDINGS_LIST = [/alistically$/, 'B', /arizability$/, 'A', /izationally$/, 'B', /antialness$/, 'A', /arisations$/, 'A', /arizations$/, 'A', /entialness$/, 'A', /allically$/, 'C', /antaneous$/, 'A', /antiality$/, 'A', /arisation$/, 'A', /arization$/, 'A', /ationally$/, 'B', /ativeness$/, 'A', /eableness$/, 'E', /entations$/, 'A', /entiality$/, 'A', /entialize$/, 'A', /entiation$/, 'A', /ionalness$/, 'A', /istically$/, 'A', /itousness$/, 'A', /izability$/, 'A', /izational$/, 'A', /ableness$/, 'A', /arizable$/, 'A', /entation$/, 'A', /entially$/, 'A', /eousness$/, 'A', /ibleness$/, 'A', /icalness$/, 'A', /ionalism$/, 'A', /ionality$/, 'A', /ionalize$/, 'A', /iousness$/, 'A', /izations$/, 'A', /lessness$/, 'A', /ability$/, 'A', /aically$/, 'A', /alistic$/, 'B', /alities$/, 'A', /ariness$/, 'E', /aristic$/, 'A', /arizing$/, 'A', /ateness$/, 'A', /atingly$/, 'A', /ational$/, 'B', /atively$/, 'A', /ativism$/, 'A', /elihood$/, 'E', /encible$/, 'A', /entally$/, 'A', /entials$/, 'A', /entiate$/, 'A', /entness$/, 'A', /fulness$/, 'A', /ibility$/, 'A', /icalism$/, 'A', /icalist$/, 'A', /icality$/, 'A', /icalize$/, 'A', /ication$/, 'G', /icianry$/, 'A', /ination$/, 'A', /ingness$/, 'A', /ionally$/, 'A', /isation$/, 'A', /ishness$/, 'A', /istical$/, 'A', /iteness$/, 'A', /iveness$/, 'A', /ivistic$/, 'A', /ivities$/, 'A', /ization$/, 'F', /izement$/, 'A', /oidally$/, 'A', /ousness$/, 'A', /aceous$/, 'A', /acious$/, 'B', /action$/, 'G', /alness$/, 'A', /ancial$/, 'A', /ancies$/, 'A', /ancing$/, 'B', /ariser$/, 'A', /arized$/, 'A', /arizer$/, 'A', /atable$/, 'A', /ations$/, 'B', /atives$/, 'A', /eature$/, 'Z', /efully$/, 'A', /encies$/, 'A', /encing$/, 'A', /ential$/, 'A', /enting$/, 'C', /entist$/, 'A', /eously$/, 'A', /ialist$/, 'A', /iality$/, 'A', /ialize$/, 'A', /ically$/, 'A', /icance$/, 'A', /icians$/, 'A', /icists$/, 'A', /ifully$/, 'A', /ionals$/, 'A', /ionate$/, 'D', /ioning$/, 'A', /ionist$/, 'A', /iously$/, 'A', /istics$/, 'A', /izable$/, 'E', /lessly$/, 'A', /nesses$/, 'A', /oidism$/, 'A', /acies$/, 'A', /acity$/, 'A', /aging$/, 'B', /aical$/, 'A', /alist$/, 'A', /alism$/, 'B', /ality$/, 'A', /alize$/, 'A', /allic$/, 'BB', /anced$/, 'B', /ances$/, 'B', /antic$/, 'C', /arial$/, 'A', /aries$/, 'A', /arily$/, 'A', /arity$/, 'B', /arize$/, 'A', /aroid$/, 'A', /ately$/, 'A', /ating$/, 'I', /ation$/, 'B', /ative$/, 'A', /ators$/, 'A', /atory$/, 'A', /ature$/, 'E', /early$/, 'Y', /ehood$/, 'A', /eless$/, 'A', /elity$/, 'A', /ement$/, 'A', /enced$/, 'A', /ences$/, 'A', /eness$/, 'E', /ening$/, 'E', /ental$/, 'A', /ented$/, 'C', /ently$/, 'A', /fully$/, 'A', /ially$/, 'A', /icant$/, 'A', /ician$/, 'A', /icide$/, 'A', /icism$/, 'A', /icist$/, 'A', /icity$/, 'A', /idine$/, 'I', /iedly$/, 'A', /ihood$/, 'A', /inate$/, 'A', /iness$/, 'A', /ingly$/, 'B', /inism$/, 'J', /inity$/, 'CC', /ional$/, 'A', /ioned$/, 'A', /ished$/, 'A', /istic$/, 'A', /ities$/, 'A', /itous$/, 'A', /ively$/, 'A', /ivity$/, 'A', /izers$/, 'F', /izing$/, 'F', /oidal$/, 'A', /oides$/, 'A', /otide$/, 'A', /ously$/, 'A', /able$/, 'A', /ably$/, 'A', /ages$/, 'B', /ally$/, 'B', /ance$/, 'B', /ancy$/, 'B', /ants$/, 'B', /aric$/, 'A', /arly$/, 'K', /ated$/, 'I', /ates$/, 'A', /atic$/, 'B', /ator$/, 'A', /ealy$/, 'Y', /edly$/, 'E', /eful$/, 'A', /eity$/, 'A', /ence$/, 'A', /ency$/, 'A', /ened$/, 'E', /enly$/, 'E', /eous$/, 'A', /hood$/, 'A', /ials$/, 'A', /ians$/, 'A', /ible$/, 'A', /ibly$/, 'A', /ical$/, 'A', /ides$/, 'L', /iers$/, 'A', /iful$/, 'A', /ines$/, 'M', /ings$/, 'N', /ions$/, 'B', /ious$/, 'A', /isms$/, 'B', /ists$/, 'A', /itic$/, 'H', /ized$/, 'F', /izer$/, 'F', /less$/, 'A', /lily$/, 'A', /ness$/, 'A', /ogen$/, 'A', /ward$/, 'A', /wise$/, 'A', /ying$/, 'B', /yish$/, 'A', /acy$/, 'A', /age$/, 'B', /aic$/, 'A', /als$/, 'BB', /ant$/, 'B', /ars$/, 'O', /ary$/, 'F', /ata$/, 'A', /ate$/, 'A', /eal$/, 'Y', /ear$/, 'Y', /ely$/, 'E', /ene$/, 'E', /ent$/, 'C', /ery$/, 'E', /ese$/, 'A', /ful$/, 'A', /ial$/, 'A', /ian$/, 'A', /ics$/, 'A', /ide$/, 'L', /ied$/, 'A', /ier$/, 'A', /ies$/, 'P', /ily$/, 'A', /ine$/, 'M', /ing$/, 'N', /ion$/, 'Q', /ish$/, 'C', /ism$/, 'B', /ist$/, 'A', /ite$/, 'AA', /ity$/, 'A', /ium$/, 'A', /ive$/, 'A', /ize$/, 'F', /oid$/, 'A', /one$/, 'R', /ous$/, 'A', /ae$/, 'A', /al$/, 'BB', /ar$/, 'X', /as$/, 'B', /ed$/, 'E', /en$/, 'F', /es$/, 'E', /ia$/, 'A', /ic$/, 'A', /is$/, 'A', /ly$/, 'B', /on$/, 'S', /or$/, 'T', /um$/, 'U', /us$/, 'V', /yl$/, 'R', /s'/, 'A', /'s$/, 'A', /a$/, 'A', /e$/, 'A', /i$/, 'A', /o$/, 'A', /s$/, 'W', /y$/, 'B'];","","var ENDINGS = [];","","for (var i = 0, l = ENDINGS_LIST.length; i < l; i += 2) {","  ENDINGS.push([ENDINGS_LIST[i], ENDINGS_LIST[i + 1]]);","} /**","   * Conditions.","   */","var CONDITIONS = {","  A: function A() {","    return true;","  },","  B: function B(stem) {","    return stem.length > 2;","  },","  C: function C(stem) {","    return stem.length > 3;","  },","  D: function D(stem) {","    return stem.length > 4;","  },","  E: function E(stem) {","    return !/e$/.test(stem);","  },","  F: function F(stem) {","    return CONDITIONS.B(stem) && CONDITIONS.E(stem);","  },","  G: function G(stem) {","    return CONDITIONS.B(stem) && /f$/.test(stem);","  },","  H: function H(stem) {","    return (/(t|ll)$/.test(stem)","    );","  },","  I: function I(stem) {","    return !/[oe]$/.test(stem);","  },","  J: function J(stem) {","    return !/[ae]$/.test(stem);","  },","  K: function K(stem) {","    return CONDITIONS.B(stem) && /(l|i|(u\\we))$/.test(stem);","  },","  L: function L(stem) {","    return !/(u|x|([^o]s))$/.test(stem);","  },","  M: function M(stem) {","    return !/[acem]$/.test(stem);","  },","  N: function N(stem) {","    return (/s\\w{2}$/.test(stem) ? CONDITIONS.C(stem) : CONDITIONS.B(stem)","    );","  },","  O: function O(stem) {","    return (/[li]$/.test(stem)","    );","  },","  P: function P(stem) {","    return !/c$/.test(stem);","  },","  Q: function Q(stem) {","    return CONDITIONS.B(stem) && !/[ln]$/.test(stem);","  },","  R: function R(stem) {","    return (/[nr]$/.test(stem)","    );","  },","  S: function S(stem) {","    return (/(dr|[^t]t)$/.test(stem)","    );","  },","  T: function T(stem) {","    return (/(s|[^o]t)$/.test(stem)","    );","  },","  U: function U(stem) {","    return (/[lmnr]$/.test(stem)","    );","  },","  V: function V(stem) {","    return (/c$/.test(stem)","    );","  },","  W: function W(stem) {","    return !/[su]$/.test(stem);","  },","  X: function X(stem) {","    return (/(l|i|u\\we)$/.test(stem)","    );","  },","  Y: function Y(stem) {","    return (/in$/.test(stem)","    );","  },","  Z: function Z(stem) {","    return !/f$/.test(stem);","  },","  AA: function AA(stem) {","    return (/([dflt]|ph|th|er|or|es)$/.test(stem)","    );","  },","  BB: function BB(stem) {","    return CONDITIONS.B(stem) && !/(met|ryst)/.test(stem);","  },","  CC: function CC(stem) {","    return (/l$/.test(stem)","    );","  }","};","","/**"," * Endings."," */","var TRANSFORMATIONS = [[/iev$/, 'ief'], [/uct$/, 'uc'], [/umpt$/, 'um'], [/rpt$/, 'rb'], [/urs$/, 'ur'], [/istr$/, 'ister'], [/metr$/, 'meter'], [/olv$/, 'olut'], [/([^aoi])ul$/, '$1l'], [/bex$/, 'bic'], [/dex$/, 'dic'], [/pex$/, 'pic'], [/tex$/, 'tic'], [/ax$/, 'ac'], [/ex$/, 'ec'], [/ix$/, 'ic'], [/lux$/, 'luc'], [/uad$/, 'uas'], [/vad$/, 'vas'], [/cid$/, 'cis'], [/lid$/, 'lis'], [/erid$/, 'eris'], [/pand$/, 'pans'], [/([^s])end$/, '$1ens'], [/ond$/, 'ons'], [/lud$/, 'lus'], [/rud$/, 'rus'], [/([^pt])her$/, '$1hes'], [/mit$/, 'mis'], [/([^m])ent$/, '$1ens'], [/ert$/, 'ers'], [/([^n])et$/, '$1es'], [/(yt|yz)$/, 'ys']];","","/**"," * Function stemming the given world using the Lovins algorithm."," *"," * @param  {string} word - The word to stem."," * @return {string}      - The resulting stem."," */","function lovins(word) {","","  // Preparing the word","  word = word.toLowerCase().replace(/^a-z'/g, '');","","  // Dropping the longest suffix we can find in the word","  var stem = word;","  for (var _i = 0, _l = ENDINGS.length; _i < _l; _i++) {","    var _ENDINGS$_i = ENDINGS[_i],","        match = _ENDINGS$_i[0],","        condition = _ENDINGS$_i[1];","","","    stem = word.replace(match, '');","","    if (stem.length > 1 && stem.length < word.length && CONDITIONS[condition](stem)) break;","  }","","  // Dropping double occurrences of some consonants ending the stem","  if (/[bdglmnprst]{2,}$/.test(stem) && stem[stem.length - 1] === stem[stem.length - 2]) {","    stem = stem.slice(0, -1);","  }","","  // Applying transformations","  for (var _i2 = 0, _l2 = TRANSFORMATIONS.length; _i2 < _l2; _i2++) {","    var _TRANSFORMATIONS$_i = TRANSFORMATIONS[_i2],","        match = _TRANSFORMATIONS$_i[0],","        replacement = _TRANSFORMATIONS$_i[1];","","    stem = stem.replace(match, replacement);","  }","","  return stem;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"26":1,"28":1,"30":1,"31":294,"35":1,"37":0,"40":0,"43":0,"46":0,"49":0,"52":0,"55":0,"58":0,"62":0,"65":0,"68":0,"71":0,"74":0,"77":0,"81":0,"85":0,"88":0,"91":0,"95":0,"99":0,"103":0,"107":0,"111":0,"114":0,"118":0,"122":0,"125":0,"129":0,"132":0,"140":1,"148":1,"151":0,"154":0,"155":0,"156":0,"161":0,"163":0,"167":0,"168":0,"172":0,"173":0,"177":0,"180":0,"182":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/porter.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/porter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"chop","line":105,"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":22}}},"2":{"name":"match","line":109,"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":30}}},"3":{"name":"porter","line":121,"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":26,"column":0},"end":{"line":26,"column":213}},"4":{"start":{"line":28,"column":0},"end":{"line":28,"column":81}},"5":{"start":{"line":30,"column":0},"end":{"line":30,"column":151}},"6":{"start":{"line":32,"column":0},"end":{"line":34,"column":83}},"7":{"start":{"line":39,"column":0},"end":{"line":61,"column":2}},"8":{"start":{"line":63,"column":0},"end":{"line":71,"column":2}},"9":{"start":{"line":76,"column":0},"end":{"line":79,"column":26}},"10":{"start":{"line":81,"column":0},"end":{"line":84,"column":53}},"11":{"start":{"line":86,"column":0},"end":{"line":87,"column":31}},"12":{"start":{"line":89,"column":0},"end":{"line":93,"column":56}},"13":{"start":{"line":95,"column":0},"end":{"line":95,"column":46}},"14":{"start":{"line":97,"column":0},"end":{"line":97,"column":32}},"15":{"start":{"line":99,"column":0},"end":{"line":100,"column":55}},"16":{"start":{"line":105,"column":0},"end":{"line":107,"column":1}},"17":{"start":{"line":106,"column":2},"end":{"line":106,"column":29}},"18":{"start":{"line":109,"column":0},"end":{"line":113,"column":1}},"19":{"start":{"line":110,"column":2},"end":{"line":110,"column":29}},"20":{"start":{"line":111,"column":2},"end":{"line":111,"column":22}},"21":{"start":{"line":112,"column":2},"end":{"line":112,"column":11}},"22":{"start":{"line":121,"column":0},"end":{"line":212,"column":1}},"23":{"start":{"line":122,"column":2},"end":{"line":122,"column":28}},"24":{"start":{"line":125,"column":2},"end":{"line":125,"column":35}},"25":{"start":{"line":125,"column":23},"end":{"line":125,"column":35}},"26":{"start":{"line":127,"column":2},"end":{"line":127,"column":15}},"27":{"start":{"line":130,"column":2},"end":{"line":130,"column":50}},"28":{"start":{"line":130,"column":23},"end":{"line":130,"column":50}},"29":{"start":{"line":133,"column":2},"end":{"line":133,"column":39}},"30":{"start":{"line":134,"column":2},"end":{"line":134,"column":39}},"31":{"start":{"line":137,"column":2},"end":{"line":153,"column":3}},"32":{"start":{"line":138,"column":4},"end":{"line":139,"column":21}},"33":{"start":{"line":142,"column":4},"end":{"line":142,"column":43}},"34":{"start":{"line":142,"column":25},"end":{"line":142,"column":43}},"35":{"start":{"line":143,"column":9},"end":{"line":153,"column":3}},"36":{"start":{"line":144,"column":4},"end":{"line":145,"column":23}},"37":{"start":{"line":148,"column":4},"end":{"line":152,"column":5}},"38":{"start":{"line":149,"column":6},"end":{"line":149,"column":19}},"39":{"start":{"line":151,"column":6},"end":{"line":151,"column":142}},"40":{"start":{"line":151,"column":30},"end":{"line":151,"column":48}},"41":{"start":{"line":151,"column":53},"end":{"line":151,"column":142}},"42":{"start":{"line":151,"column":77},"end":{"line":151,"column":95}},"43":{"start":{"line":151,"column":100},"end":{"line":151,"column":142}},"44":{"start":{"line":151,"column":124},"end":{"line":151,"column":142}},"45":{"start":{"line":156,"column":2},"end":{"line":162,"column":3}},"46":{"start":{"line":157,"column":4},"end":{"line":158,"column":24}},"47":{"start":{"line":161,"column":4},"end":{"line":161,"column":24}},"48":{"start":{"line":165,"column":2},"end":{"line":172,"column":3}},"49":{"start":{"line":166,"column":4},"end":{"line":168,"column":24}},"50":{"start":{"line":171,"column":4},"end":{"line":171,"column":61}},"51":{"start":{"line":171,"column":27},"end":{"line":171,"column":61}},"52":{"start":{"line":175,"column":2},"end":{"line":182,"column":3}},"53":{"start":{"line":176,"column":4},"end":{"line":178,"column":25}},"54":{"start":{"line":181,"column":4},"end":{"line":181,"column":62}},"55":{"start":{"line":181,"column":27},"end":{"line":181,"column":62}},"56":{"start":{"line":185,"column":2},"end":{"line":198,"column":3}},"57":{"start":{"line":186,"column":4},"end":{"line":187,"column":24}},"58":{"start":{"line":190,"column":4},"end":{"line":190,"column":41}},"59":{"start":{"line":190,"column":27},"end":{"line":190,"column":41}},"60":{"start":{"line":191,"column":9},"end":{"line":198,"column":3}},"61":{"start":{"line":192,"column":4},"end":{"line":195,"column":32}},"62":{"start":{"line":197,"column":4},"end":{"line":197,"column":41}},"63":{"start":{"line":197,"column":27},"end":{"line":197,"column":41}},"64":{"start":{"line":201,"column":2},"end":{"line":207,"column":3}},"65":{"start":{"line":202,"column":4},"end":{"line":203,"column":24}},"66":{"start":{"line":206,"column":4},"end":{"line":206,"column":86}},"67":{"start":{"line":206,"column":72},"end":{"line":206,"column":86}},"68":{"start":{"line":209,"column":2},"end":{"line":209,"column":61}},"69":{"start":{"line":209,"column":43},"end":{"line":209,"column":61}},"70":{"start":{"line":211,"column":2},"end":{"line":211,"column":28}},"71":{"start":{"line":213,"column":0},"end":{"line":213,"column":36}}},"branchMap":{"1":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]},"2":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":2},"end":{"line":130,"column":2}},{"start":{"line":130,"column":2},"end":{"line":130,"column":2}}]},"3":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"4":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"5":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":9},"end":{"line":143,"column":9}},{"start":{"line":143,"column":9},"end":{"line":143,"column":9}}]},"6":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"7":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"8":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":53},"end":{"line":151,"column":53}},{"start":{"line":151,"column":53},"end":{"line":151,"column":53}}]},"9":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":100},"end":{"line":151,"column":100}},{"start":{"line":151,"column":100},"end":{"line":151,"column":100}}]},"10":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"11":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":2},"end":{"line":165,"column":2}},{"start":{"line":165,"column":2},"end":{"line":165,"column":2}}]},"12":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"13":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":2},"end":{"line":175,"column":2}},{"start":{"line":175,"column":2},"end":{"line":175,"column":2}}]},"14":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"15":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"16":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":190,"column":4}},{"start":{"line":190,"column":4},"end":{"line":190,"column":4}}]},"17":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":9},"end":{"line":191,"column":9}},{"start":{"line":191,"column":9},"end":{"line":191,"column":9}}]},"18":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":4},"end":{"line":197,"column":4}},{"start":{"line":197,"column":4},"end":{"line":197,"column":4}}]},"19":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"20":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"21":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":8},"end":{"line":206,"column":25}},{"start":{"line":206,"column":29},"end":{"line":206,"column":46}},{"start":{"line":206,"column":50},"end":{"line":206,"column":70}}]},"22":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"23":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":6},"end":{"line":209,"column":22}},{"start":{"line":209,"column":26},"end":{"line":209,"column":41}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = porter;","/* eslint no-cond-assign: 0 */","/**"," * Talisman stemmers/porter"," * ========================="," *"," * The classical Porter stemmer."," *"," * [Reference]:"," * http://tartarus.org/martin/PorterStemmer/"," *"," * [Article]:"," * C.J. van Rijsbergen, S.E. Robertson and M.F. Porter, 1980. New models in"," * probabilistic information retrieval. London: British Library."," * (British Library Research and Development Report, no. 5587)."," */","","/**"," * Suffixes."," */","var STEP2_SUFFIXES = ['ational', 'tional', 'enci', 'anci', 'izer', 'bli', 'alli', 'entli', 'eli', 'ousli', 'ization', 'ation', 'ator', 'alism', 'iveness', 'fulness', 'ousness', 'aliti', 'iviti', 'biliti', 'logi'];","","var STEP3_SUFFIXES = ['icate', 'ative', 'alize', 'iciti', 'ical', 'ful', 'ness'];","","var STEP4_SUFFIXES = ['al', 'ance', 'ence', 'er', 'ic', 'able', 'ible', 'ant', 'ement', 'ment', 'ent', 'ou', 'ism', 'ate', 'iti', 'ous', 'ive', 'ize'];","","var STEP2_SUFFIXES_REGEX = new RegExp('^(.+?)(' + STEP2_SUFFIXES.join('|') + ')$'),","    STEP3_SUFFIXES_REGEX = new RegExp('^(.+?)(' + STEP3_SUFFIXES.join('|') + ')$'),","    STEP4_SUFFIXES_REGEX = new RegExp('^(.+?)(' + STEP4_SUFFIXES.join('|') + ')$');","","/**"," * Steps maps."," */","var STEP2_MAP = {","  ational: 'ate',","  tional: 'tion',","  enci: 'ence',","  anci: 'ance',","  izer: 'ize',","  bli: 'ble',","  alli: 'al',","  entli: 'ent',","  eli: 'e',","  ousli: 'ous',","  ization: 'ize',","  ation: 'ate',","  ator: 'ate',","  alism: 'al',","  iveness: 'ive',","  fulness: 'ful',","  ousness: 'ous',","  aliti: 'al',","  iviti: 'ive',","  biliti: 'ble',","  logi: 'log'","};","","var STEP3_MAP = {","  icate: 'ic',","  ative: '',","  alize: 'al',","  iciti: 'ic',","  ical: 'ic',","  ful: '',","  ness: ''","};","","/**"," * Patterns."," */","var C = '[^aeiou]',","    V = '[aeiouy]',","    CC = '' + C + C + '*',","    VV = '' + V + V + '*';","","var MGR0 = new RegExp('^(' + CC + ')?' + VV + CC),","    MEQ1 = new RegExp('^(' + CC + ')?' + VV + CC + '(' + VV + ')?$'),","    MGR1 = new RegExp('^(' + CC + ')?' + VV + CC + VV + CC),","    VOWEL_IN_STEM = new RegExp('^(' + CC + ')?' + V);","","var STEP1a1 = /^(.+?)(ss|i)es$/,","    STEP1a2 = /^(.+?)([^s])s$/;","","var STEP1b1 = /^(.+?)eed$/,","    STEP1b2 = /^(.+?)(ed|ing)$/,","    STEP1b3 = /(at|bl|iz)$/,","    STEP1b4 = /([^aeiouylsz])\\1$/,","    STEP1b5 = new RegExp('^' + CC + V + '[^aeiouwxy]$');","","var STEP1c = new RegExp('^(.*' + V + '.*)y$');","","var STEP4 = /^(.+?)(s|t)(ion)$/;","","var STEP51 = /^(.+?)e$/,","    STEP52 = new RegExp('^' + CC + V + '[^aeiouwxy]$');","","/**"," * Helpers."," */","function chop(string) {","  return string.slice(0, -1);","}","","function match(regex, string) {","  var m = regex.exec(string);","  regex.lastIndex = 0;","  return m;","}","","/**"," * Function stemming the given world using the Porter algorithm."," *"," * @param  {string} word - The word to stem."," * @return {string}      - The resulting stem."," */","function porter(word) {","  word = word.toLowerCase();","","  // If the word is too short, we return it unscathed","  if (word.length < 3) return word;","","  var m = null;","","  // If the first letter is a Y, we uppercase it so it's not treated as vowel","  if (word[0] === 'y') word = 'Y' + word.slice(1);","","  //-- Step 1a","  word = word.replace(STEP1a1, '$1$2');","  word = word.replace(STEP1a2, '$1$2');","","  //-- Step 1b","  if (m = match(STEP1b1, word)) {","    var _m = m,","        stem = _m[1];","","","    if (MGR0.test(stem)) word = chop(word);","  } else if (m = match(STEP1b2, word)) {","    var _m2 = m,","        _stem = _m2[1];","","","    if (VOWEL_IN_STEM.test(_stem)) {","      word = _stem;","","      if (STEP1b3.test(word)) word = word + 'e';else if (STEP1b4.test(word)) word = chop(word);else if (STEP1b5.test(word)) word = word + 'e';","    }","  }","","  //-- Step 1c","  if (m = match(STEP1c, word)) {","    var _m3 = m,","        _stem2 = _m3[1];","","","    word = _stem2 + 'i';","  }","","  //-- Step 2","  if (m = match(STEP2_SUFFIXES_REGEX, word)) {","    var _m4 = m,","        _stem3 = _m4[1],","        suffix = _m4[2];","","","    if (MGR0.test(_stem3)) word = _stem3 + STEP2_MAP[suffix];","  }","","  //-- Step 3","  if (m = match(STEP3_SUFFIXES_REGEX, word)) {","    var _m5 = m,","        _stem4 = _m5[1],","        _suffix = _m5[2];","","","    if (MGR0.test(_stem4)) word = _stem4 + STEP3_MAP[_suffix];","  }","","  //-- Step 4","  if (m = match(STEP4_SUFFIXES_REGEX, word)) {","    var _m6 = m,","        _stem5 = _m6[1];","","","    if (MGR1.test(_stem5)) word = _stem5;","  } else if (m = match(STEP4, word)) {","    var _m7 = m,","        first = _m7[1],","        second = _m7[2],","        _stem6 = first + second;","","    if (MGR1.test(_stem6)) word = _stem6;","  }","","  //-- Step 5","  if (m = match(STEP51, word)) {","    var _m8 = m,","        _stem7 = _m8[1];","","","    if (MGR1.test(_stem7) || MEQ1.test(_stem7) && !STEP52.test(_stem7)) word = _stem7;","  }","","  if (/ll$/.test(word) && MGR1.test(word)) word = chop(word);","","  return word.toLowerCase();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"26":1,"28":1,"30":1,"32":1,"39":1,"63":1,"76":1,"81":1,"86":1,"89":1,"95":1,"97":1,"99":1,"105":1,"106":0,"109":1,"110":0,"111":0,"112":0,"121":1,"122":0,"125":0,"127":0,"130":0,"133":0,"134":0,"137":0,"138":0,"142":0,"143":0,"144":0,"148":0,"149":0,"151":0,"156":0,"157":0,"161":0,"165":0,"166":0,"171":0,"175":0,"176":0,"181":0,"185":0,"186":0,"190":0,"191":0,"192":0,"197":0,"201":0,"202":0,"206":0,"209":0,"211":0,"213":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/s-stemmer.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/s-stemmer.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"sStemmer","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":31,"column":0},"end":{"line":51,"column":1}},"4":{"start":{"line":32,"column":2},"end":{"line":32,"column":27}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":58}},"6":{"start":{"line":34,"column":46},"end":{"line":34,"column":58}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":37}},"8":{"start":{"line":38,"column":2},"end":{"line":38,"column":62}},"9":{"start":{"line":38,"column":50},"end":{"line":38,"column":62}},"10":{"start":{"line":40,"column":2},"end":{"line":48,"column":3}},"11":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"12":{"start":{"line":42,"column":6},"end":{"line":42,"column":37}},"13":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"14":{"start":{"line":46,"column":6},"end":{"line":46,"column":18}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":27}},"16":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":16}},{"start":{"line":34,"column":20},"end":{"line":34,"column":44}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"4":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":25}},{"start":{"line":38,"column":29},"end":{"line":38,"column":48}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"7":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":18}},{"start":{"line":41,"column":22},"end":{"line":41,"column":46}},{"start":{"line":41,"column":50},"end":{"line":41,"column":74}},{"start":{"line":41,"column":78},"end":{"line":41,"column":102}}]},"8":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"9":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":32}},{"start":{"line":45,"column":36},"end":{"line":45,"column":60}},{"start":{"line":45,"column":64},"end":{"line":45,"column":88}},{"start":{"line":45,"column":92},"end":{"line":45,"column":116}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = sStemmer;","/**"," * Talisman stemmers/s-stemmer"," * ============================"," *"," * Implementation of the English \"S-Stemmer\"."," *"," * [Reference]:"," * http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.104.9828&rep=rep1&type=pdf"," *"," * [Article]:"," * Donna Harman (1991) How effective is suffixing?"," * Journal of the American Society for Information Science (vol. 42 issue 1)."," *"," * [Note]:"," * I cannot find the original author of the algorithm, only its explanation in"," * the linked article."," */","","/**"," * Function stemming the given world using the \"S-Stemmer\"."," *"," * @param  {string} word - The word to stem."," * @return {string}      - The resulting stem."," */","function sStemmer(word) {","  var length = word.length;","","  if (length < 3 || word[length - 1] !== 's') return word;","","  var penultimate = word[length - 2];","","  if (penultimate === 'u' || penultimate === 's') return word;","","  if (penultimate === 'e') {","    if (length > 3 && word[length - 3] === 'i' && word[length - 4] !== 'a' && word[length - 4] !== 'e') {","      return word.slice(0, -3) + 'y';","    }","","    if (word[length - 3] === 'i' || word[length - 3] === 'a' || word[length - 3] === 'o' || word[length - 3] === 'e') {","      return word;","    }","  }","","  return word.slice(0, -1);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"31":1,"32":0,"34":0,"36":0,"38":0,"40":0,"41":0,"42":0,"45":0,"46":0,"50":0,"52":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/uea-lite.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/uea-lite.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":1,"50":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_toConsumableArray","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}}},"2":{"name":"complexSuffixing","line":34,"loc":{"start":{"line":34,"column":23},"end":{"line":34,"column":55}}},"3":{"name":"withRule","line":101,"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":24}}},"4":{"name":"ueaLite","line":148,"loc":{"start":{"line":148,"column":0},"end":{"line":148,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":195}},"5":{"start":{"line":9,"column":35},"end":{"line":9,"column":193}},"6":{"start":{"line":9,"column":61},"end":{"line":9,"column":145}},"7":{"start":{"line":9,"column":126},"end":{"line":9,"column":143}},"8":{"start":{"line":9,"column":146},"end":{"line":9,"column":158}},"9":{"start":{"line":9,"column":168},"end":{"line":9,"column":191}},"10":{"start":{"line":30,"column":0},"end":{"line":30,"column":79}},"11":{"start":{"line":32,"column":0},"end":{"line":32,"column":87}},"12":{"start":{"line":34,"column":0},"end":{"line":49,"column":2}},"13":{"start":{"line":37,"column":2},"end":{"line":37,"column":62}},"14":{"start":{"line":37,"column":37},"end":{"line":37,"column":62}},"15":{"start":{"line":40,"column":2},"end":{"line":43,"column":61}},"16":{"start":{"line":40,"column":32},"end":{"line":40,"column":57}},"17":{"start":{"line":43,"column":7},"end":{"line":43,"column":61}},"18":{"start":{"line":43,"column":36},"end":{"line":43,"column":61}},"19":{"start":{"line":46,"column":2},"end":{"line":46,"column":80}},"20":{"start":{"line":46,"column":55},"end":{"line":46,"column":80}},"21":{"start":{"line":48,"column":2},"end":{"line":48,"column":14}},"22":{"start":{"line":51,"column":0},"end":{"line":92,"column":120}},"23":{"start":{"line":101,"column":0},"end":{"line":146,"column":1}},"24":{"start":{"line":102,"column":2},"end":{"line":102,"column":18}},"25":{"start":{"line":105,"column":2},"end":{"line":105,"column":60}},"26":{"start":{"line":105,"column":26},"end":{"line":105,"column":60}},"27":{"start":{"line":108,"column":2},"end":{"line":119,"column":3}},"28":{"start":{"line":111,"column":4},"end":{"line":111,"column":61}},"29":{"start":{"line":111,"column":28},"end":{"line":111,"column":61}},"30":{"start":{"line":114,"column":4},"end":{"line":118,"column":5}},"31":{"start":{"line":115,"column":6},"end":{"line":115,"column":16}},"32":{"start":{"line":117,"column":6},"end":{"line":117,"column":86}},"33":{"start":{"line":118,"column":5},"end":{"line":118,"column":39}},"34":{"start":{"line":122,"column":2},"end":{"line":143,"column":3}},"35":{"start":{"line":123,"column":4},"end":{"line":126,"column":28}},"36":{"start":{"line":130,"column":4},"end":{"line":134,"column":5}},"37":{"start":{"line":131,"column":6},"end":{"line":131,"column":55}},"38":{"start":{"line":133,"column":6},"end":{"line":133,"column":65}},"39":{"start":{"line":133,"column":28},"end":{"line":133,"column":65}},"40":{"start":{"line":137,"column":4},"end":{"line":142,"column":5}},"41":{"start":{"line":139,"column":6},"end":{"line":139,"column":127}},"42":{"start":{"line":139,"column":45},"end":{"line":139,"column":70}},"43":{"start":{"line":139,"column":75},"end":{"line":139,"column":127}},"44":{"start":{"line":139,"column":92},"end":{"line":139,"column":127}},"45":{"start":{"line":141,"column":6},"end":{"line":141,"column":40}},"46":{"start":{"line":145,"column":2},"end":{"line":145,"column":35}},"47":{"start":{"line":148,"column":0},"end":{"line":150,"column":1}},"48":{"start":{"line":149,"column":2},"end":{"line":149,"column":29}},"49":{"start":{"line":151,"column":0},"end":{"line":151,"column":36}},"50":{"start":{"line":152,"column":0},"end":{"line":152,"column":47}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":35},"end":{"line":9,"column":35}},{"start":{"line":9,"column":35},"end":{"line":9,"column":35}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":7},"end":{"line":43,"column":7}},{"start":{"line":43,"column":7},"end":{"line":43,"column":7}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"6":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"7":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"8":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"9":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"10":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"11":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"12":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":6},"end":{"line":139,"column":6}},{"start":{"line":139,"column":6},"end":{"line":139,"column":6}}]},"13":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":75},"end":{"line":139,"column":75}},{"start":{"line":139,"column":75},"end":{"line":139,"column":75}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.withRule = withRule;","exports.default = ueaLite;","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }","","/**"," * Talisman stemmers/uea-lite"," * ==========================="," *"," * The University of East Anglia (UEA) Lite stemmer."," *"," * [Reference]:"," * http://www2.cmp.uea.ac.uk/~djs/projects/UEAlite/stemmer.html"," * http://github.com/ealdent/uea-stemmer"," *"," * [Authors]:"," * Marie-CLaire Jenkins"," * Dan Smith"," * Jason M. Adams (Ruby version additions)"," */","","/**"," * Rules."," */","var PROBLEMS = new Set(['is', 'as', 'this', 'has', 'was', 'during', 'menses']);","","var CONTRACTIONS = [[/n't/, ' not'], [/'ve/, ' have'], [/'re/, ' are'], [/'m/, ' am']];","","var complexSuffixing = function complexSuffixing(word) {","","  // Dropping final \"s\"","  if (word[word.length - 1] === 's') word = word.slice(0, -1);","","  // Dropping \"ing\"","  if (word.slice(-3) === 'ing') word = word.slice(0, -3);","","  // Dropping \"ed\"","  else if (word.slice(-2) === 'ed') word = word.slice(0, -2);","","  // Dropping potential consecutive duplicate letters","  if (word[word.length - 1] === word[word.length - 2]) word = word.slice(0, -1);","","  return word;","};","","var RULES = [[/^\\d+$/, null, '90.3'], [/^\\w+-\\w+$/, null, '90.2'], [/-/, null, '90.1'], [/_/, null, '90'], [/^[A-Z]+s$/, 1, '91.1'], [/^[A-Z]+$/, null, '91'], [/^(?:.*[A-Z].*[A-Z]|[A-Z]{1}).*$/, null, '92'], [/aceous$/, 6, '1'], [/ces$/, 1, '2'], [/cs$/, null, '3'], [/sis$/, null, '4'], [/tis$/, null, '5'], [/ss$/, null, '6'], [/eed$/, null, '7'], [/eeds$/, 1, '7'], [/ued$/, 1, '8'], [/ues$/, 1, '9'], [/ees$/, 1, '10'], [/iases$/, 2, '11.4'], [/uses$/, 1, '11.3'], [/sses$/, 2, 11.2], [/eses$/, 'esis', '11.1'], [/ses$/, 1, '11'], [/tled$/, 1, '12.5'], [/pled$/, 1, '12.4'], [/bled$/, 1, '12.3'], [/eled$/, 2, '12.2'], [/lled$/, 2, '12.1'], [/led$/, 2, '12'], [/ened$/, 2, '13.7'], [/ained$/, 2, '13.6'], [/erned$/, 2, '13.5'], [/rned$/, 2, '13.4'], [/nned$/, 3, '13.3'], [/oned$/, 2, '13.2'], [/gned$/, 2, '13.1'], [/ned$/, 1, '13'], [/ifted$/, 2, '14'], [/ected$/, 2, '15'], [/vided$/, 1, '16'], [/ved$/, 1, '17'], [/ced$/, 1, '18'],","","//--< Jason M. Adams","[/arred$/, 3, '19.1'],","//--> Jason M. Adams","","[/erred$/, 3, '19'], [/urred$/, 3, '20.5'], [/lored$/, 2, '20.4'], [/eared$/, 2, '20.3'], [/tored$/, 1, '20.2'], [/ered$/, 2, '20.1'], [/red$/, 1, '20'], [/reds$/, 2, '20'], [/tted$/, 3, '21'],","","//--< Jason M. Adams","[/noted$/, 1, '22.6'], [/leted$/, 1, '22.5'], [/[^vm]ited$/, 2, '22.4'], [/(?:ch|[vm])i[td]ed$/, 1, '22.3'], [/uted$/, 1, '22.2'], [/ated$/, 1, '22.1'], [/ted$/, 2, '22'],","//--> Jason M. Adams","","[/anges$/, 1, '23'], [/aining$/, 3, '24'], [/acting$/, 3, '25'], [/ttings?$/, 't', '26'], [/viding$/, 'vide', '27'], [/ssed$/, 2, '28'], [/sed$/, 1, '29'], [/titudes$/, 1, '30'],","","//--< Jason M. Adams","[/oed$/, 1, '31.3'], [/d?oes$/, 2, '31.2'], [/[oaiu]ked$/, 1, '31.1'], [/[aiu]med/, 1, '31'],","//--> Jason M. Adams","","[/ulted$/, 2, '32'], [/uming$/, 'ume', '33'], [/fulness$/, 4, '34'], [/ousness$/, 4, '35'], [/r[aeiou]bed$/, 1, '36.1'], [/beds?$/, 'b', '36'], [/ssings?$/, 'ss', '37'], [/ulting$/, 3, '38'], [/vings?$/, 'v', '39'], [/vings$/], [/eadings?$/, 'ead', '40.7'], [/oadings?$/, 'oad', '40.6'], [/edings?$/, 'ed', '40.5'], [/ddings?$/, 'd', '40.4'], [/ldings?$/, 'ld', '40.3'], [/rdings?$/, 'rd', '40.2'], [/ndings?$/, 'nd', '40.1'], [/dings?/, 'de', '40'], [/llings?$/, 'l', '41'], [/ealings?$/, 'eal', '42.4'], [/olings?$/, 'ol', '42.3'], [/ailings?$/, 'ail', '42.2'], [/elings?$/, 'el', '42.1'], [/lings?$/, 'le', '42'], [/nged$/, 1, '43.2'], [/gged$/, 3, '43.1'], [/ged$/, 1, '43'], [/mmings?$/, 'm', '44.3'], [/rming$/, 3, '44.2'], [/lming$/, 3, '44.1'], [/mings?$/, 'me', '44'], [/ngings?$/, 'ng', '45.2'], [/ggings?$/, 'g', '45.1'], [/gings?$/, 'ge', '45'], [/aning$/, 3, '46.6'], [/ening$/, 3, '46.5'], [/gning$/, 3, '46.4'], [/nning$/, 4, '46.3'], [/oning$/, 3, '46.2'], [/rning$/, 3, '46.1'], [/ning$/, 'ne', '46'], [/stings?$/, 'st', '47'], [/etings?$/, 'et', '48.4'], [/pting$/, 3, '48.3'], [/ntings?$/, 'nt', '48.2'], [/cting$/, 3, '48.1'], [/tings?$/, 'ct', '48.1'], [/ssed$/, 2, '49'], [/les$/, 1, '50'], [/tes$/, 1, '51'], [/zed$/, 1, '52'], [/lled$/, 2, '53'], [/irings?$/, 'ire', '54.4'], [/urings?$/, 'ure', '54.3'], [/ncings?$/, 'nce', '54.2'], [/zing$/, 3, '54.1'], [/sings?$/, 'se', '54'], [/lling$/, 3, '55'], [/ied$/, 'e', '56'], [/ating$/, 'ate', '57'],","","//--< Jason M. Adams","[/dying$/, 'die', '58.2'], [/^lying$/, 'lie', '58.2'], [/tying$/, 'tie', '58.2'],","//--> Jason M. Adams","","[/thing$/, null, '58.1'], [/things$/, 1, '58.1'], [/\\w{2}ings?$/, complexSuffixing, '58'], [/ies$/, 'y', '59'], [/lves$/, 'lf', '60.1'], [/ves$/, 1, '60'], [/aped$/, 1, '61.3'], [/uded$/, 1, '61.2'], [/oded$/, 1, '61.1'],","","// NOTE: same rule as 22.1, but present uselessly in all reference","// implementations","// [/ated$/, 1, '61'],","[/\\w{2}eds?$/, complexSuffixing, '62'],","","//--< Jason M. Adams","[/des$/, 1, '63.10'], [/res$/, 1, '63.9'],","//--> Jason M. Adams","","[/pes$/, 1, '63.8'], [/mes$/, 1, '63.7'], [/ones$/, 1, '63.6'], [/izes$/, 1, '63.5'], [/ures$/, 1, '63.4'], [/ines$/, 1, '63.3'], [/ides$/, 1, '63.2'],","","//--< Jason M. Adams","[/[kg]es$/, 1, '63.1'],","//--> Jason M. Adam","","[/es$/, 2, '63'], [/is$/, 'e', '64'], [/ous$/, null, '65'], [/ums$/, null, '66'], [/us$/, null, '67'], [/s$/, 1, '68']];","","/**"," * Function stemming the given world using the UEALite stemmer."," *"," * @param  {string} word - The word to stem."," * @return {object}      - An object containing the stemmed word and the applied"," *                         rule."," */","function withRule(word) {","  var stem = word;","","  // Is the given word problematic?","  if (PROBLEMS.has(word)) return { rule: '90', stem: stem };","","  // If the word contains apostrophe(s)","  if (/'/.test(word)) {","","    // Possessive (both singular & plural)","    if (/'s?$/i.test(word)) stem = stem.replace(/'s?$/i, '');","","    // Expand various contractions","    for (var i = 0, l = CONTRACTIONS.length; i < l; i++) {","      var _stem;","","      stem = (_stem = stem).replace.apply(_stem, _toConsumableArray(CONTRACTIONS[i]));","    }return { rule: '94', stem: stem };","  }","","  // Applying rules","  for (var _i = 0, _l = RULES.length; _i < _l; _i++) {","    var _RULES$_i = RULES[_i],","        pattern = _RULES$_i[0],","        replacement = _RULES$_i[1],","        rule = _RULES$_i[2];","","    // Replacing through string","","    if (typeof replacement === 'string') {","      var newStem = stem.replace(pattern, replacement);","","      if (newStem !== stem) return { rule: rule, stem: newStem };","    }","","    // Attempting to match the pattern","    if (pattern.test(stem)) {","","      if (typeof replacement === 'function') stem = replacement(stem);else if (replacement) stem = stem.slice(0, -replacement);","","      return { rule: rule, stem: stem };","    }","  }","","  return { rule: '0', stem: word };","}","","function ueaLite(word) {","  return withRule(word).stem;","}","module.exports = exports['default'];","exports['default'].withRule = exports.withRule;"],"l":{"3":1,"6":1,"7":1,"9":1,"30":1,"32":1,"34":1,"37":0,"40":0,"43":0,"46":0,"48":0,"51":1,"101":1,"102":0,"105":0,"108":0,"111":0,"114":0,"115":0,"117":0,"118":0,"122":0,"123":0,"130":0,"131":0,"133":0,"137":0,"139":0,"141":0,"145":0,"148":1,"149":0,"151":1,"152":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tag/averaged-perceptron.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tag/averaged-perceptron.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":1,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"_classCallCheck","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}}},"2":{"name":"hasher","line":29,"loc":{"start":{"line":29,"column":13},"end":{"line":29,"column":35}}},"3":{"name":"analyzeSentences","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":37}}},"4":{"name":"normalize","line":117,"loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":25}}},"5":{"name":"createContext","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":33}}},"6":{"name":"extractFeatures","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":68}}},"7":{"name":"predict","line":186,"loc":{"start":{"line":186,"column":0},"end":{"line":186,"column":45}}},"8":{"name":"(anonymous_8)","line":234,"loc":{"start":{"line":234,"column":31},"end":{"line":234,"column":43}}},"9":{"name":"AveragedPerceptronTagger","line":235,"loc":{"start":{"line":235,"column":2},"end":{"line":235,"column":45}}},"10":{"name":"update","line":267,"loc":{"start":{"line":267,"column":46},"end":{"line":267,"column":86}}},"11":{"name":"averageWeights","line":308,"loc":{"start":{"line":308,"column":54},"end":{"line":308,"column":80}}},"12":{"name":"train","line":338,"loc":{"start":{"line":338,"column":45},"end":{"line":338,"column":71}}},"13":{"name":"iterate","line":381,"loc":{"start":{"line":381,"column":47},"end":{"line":381,"column":75}}},"14":{"name":"tag","line":424,"loc":{"start":{"line":424,"column":43},"end":{"line":424,"column":66}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":46}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":153}},"8":{"start":{"line":13,"column":50},"end":{"line":13,"column":151}},"9":{"start":{"line":13,"column":92},"end":{"line":13,"column":149}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}},"11":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"12":{"start":{"line":30,"column":2},"end":{"line":30,"column":32}},"13":{"start":{"line":33,"column":0},"end":{"line":33,"column":43}},"14":{"start":{"line":35,"column":0},"end":{"line":36,"column":30}},"15":{"start":{"line":38,"column":0},"end":{"line":40,"column":23}},"16":{"start":{"line":45,"column":0},"end":{"line":49,"column":2}},"17":{"start":{"line":61,"column":0},"end":{"line":109,"column":1}},"18":{"start":{"line":62,"column":2},"end":{"line":64,"column":16}},"19":{"start":{"line":67,"column":2},"end":{"line":82,"column":3}},"20":{"start":{"line":68,"column":4},"end":{"line":68,"column":32}},"21":{"start":{"line":71,"column":4},"end":{"line":81,"column":5}},"22":{"start":{"line":72,"column":6},"end":{"line":74,"column":31}},"23":{"start":{"line":76,"column":6},"end":{"line":76,"column":23}},"24":{"start":{"line":78,"column":6},"end":{"line":78,"column":47}},"25":{"start":{"line":78,"column":29},"end":{"line":78,"column":47}},"26":{"start":{"line":79,"column":6},"end":{"line":79,"column":56}},"27":{"start":{"line":79,"column":34},"end":{"line":79,"column":56}},"28":{"start":{"line":80,"column":6},"end":{"line":80,"column":26}},"29":{"start":{"line":85,"column":2},"end":{"line":106,"column":3}},"30":{"start":{"line":86,"column":4},"end":{"line":86,"column":38}},"31":{"start":{"line":89,"column":4},"end":{"line":91,"column":16}},"32":{"start":{"line":93,"column":4},"end":{"line":102,"column":5}},"33":{"start":{"line":94,"column":6},"end":{"line":94,"column":38}},"34":{"start":{"line":96,"column":6},"end":{"line":99,"column":7}},"35":{"start":{"line":97,"column":8},"end":{"line":97,"column":21}},"36":{"start":{"line":98,"column":8},"end":{"line":98,"column":20}},"37":{"start":{"line":101,"column":6},"end":{"line":101,"column":19}},"38":{"start":{"line":105,"column":4},"end":{"line":105,"column":108}},"39":{"start":{"line":105,"column":88},"end":{"line":105,"column":108}},"40":{"start":{"line":108,"column":2},"end":{"line":108,"column":42}},"41":{"start":{"line":117,"column":0},"end":{"line":125,"column":1}},"42":{"start":{"line":118,"column":2},"end":{"line":118,"column":67}},"43":{"start":{"line":118,"column":50},"end":{"line":118,"column":67}},"44":{"start":{"line":120,"column":2},"end":{"line":120,"column":44}},"45":{"start":{"line":120,"column":29},"end":{"line":120,"column":44}},"46":{"start":{"line":122,"column":2},"end":{"line":122,"column":50}},"47":{"start":{"line":122,"column":33},"end":{"line":122,"column":50}},"48":{"start":{"line":124,"column":2},"end":{"line":124,"column":28}},"49":{"start":{"line":133,"column":0},"end":{"line":144,"column":1}},"50":{"start":{"line":134,"column":2},"end":{"line":134,"column":47}},"51":{"start":{"line":135,"column":2},"end":{"line":135,"column":24}},"52":{"start":{"line":136,"column":2},"end":{"line":136,"column":24}},"53":{"start":{"line":138,"column":2},"end":{"line":140,"column":3}},"54":{"start":{"line":139,"column":4},"end":{"line":139,"column":47}},"55":{"start":{"line":140,"column":3},"end":{"line":140,"column":40}},"56":{"start":{"line":141,"column":2},"end":{"line":141,"column":39}},"57":{"start":{"line":143,"column":2},"end":{"line":143,"column":17}},"58":{"start":{"line":156,"column":0},"end":{"line":175,"column":1}},"59":{"start":{"line":157,"column":2},"end":{"line":157,"column":29}},"60":{"start":{"line":158,"column":2},"end":{"line":158,"column":13}},"61":{"start":{"line":160,"column":2},"end":{"line":160,"column":45}},"62":{"start":{"line":161,"column":2},"end":{"line":161,"column":37}},"63":{"start":{"line":162,"column":2},"end":{"line":162,"column":38}},"64":{"start":{"line":163,"column":2},"end":{"line":163,"column":39}},"65":{"start":{"line":164,"column":2},"end":{"line":164,"column":62}},"66":{"start":{"line":165,"column":2},"end":{"line":165,"column":43}},"67":{"start":{"line":166,"column":2},"end":{"line":166,"column":68}},"68":{"start":{"line":167,"column":2},"end":{"line":167,"column":49}},"69":{"start":{"line":168,"column":2},"end":{"line":168,"column":61}},"70":{"start":{"line":169,"column":2},"end":{"line":169,"column":49}},"71":{"start":{"line":170,"column":2},"end":{"line":170,"column":49}},"72":{"start":{"line":171,"column":2},"end":{"line":171,"column":61}},"73":{"start":{"line":172,"column":2},"end":{"line":172,"column":49}},"74":{"start":{"line":174,"column":2},"end":{"line":174,"column":18}},"75":{"start":{"line":186,"column":0},"end":{"line":223,"column":1}},"76":{"start":{"line":187,"column":2},"end":{"line":187,"column":18}},"77":{"start":{"line":190,"column":2},"end":{"line":202,"column":3}},"78":{"start":{"line":191,"column":4},"end":{"line":191,"column":34}},"79":{"start":{"line":193,"column":4},"end":{"line":193,"column":50}},"80":{"start":{"line":193,"column":41},"end":{"line":193,"column":50}},"81":{"start":{"line":195,"column":4},"end":{"line":195,"column":43}},"82":{"start":{"line":197,"column":4},"end":{"line":201,"column":5}},"83":{"start":{"line":198,"column":6},"end":{"line":198,"column":42}},"84":{"start":{"line":199,"column":6},"end":{"line":199,"column":41}},"85":{"start":{"line":200,"column":6},"end":{"line":200,"column":38}},"86":{"start":{"line":205,"column":2},"end":{"line":206,"column":28}},"87":{"start":{"line":209,"column":2},"end":{"line":220,"column":3}},"88":{"start":{"line":210,"column":4},"end":{"line":211,"column":36}},"89":{"start":{"line":213,"column":4},"end":{"line":219,"column":5}},"90":{"start":{"line":214,"column":6},"end":{"line":214,"column":24}},"91":{"start":{"line":215,"column":6},"end":{"line":215,"column":25}},"92":{"start":{"line":216,"column":11},"end":{"line":219,"column":5}},"93":{"start":{"line":218,"column":6},"end":{"line":218,"column":49}},"94":{"start":{"line":218,"column":30},"end":{"line":218,"column":49}},"95":{"start":{"line":222,"column":2},"end":{"line":222,"column":19}},"96":{"start":{"line":234,"column":0},"end":{"line":452,"column":4}},"97":{"start":{"line":235,"column":2},"end":{"line":255,"column":3}},"98":{"start":{"line":236,"column":4},"end":{"line":236,"column":52}},"99":{"start":{"line":238,"column":4},"end":{"line":238,"column":28}},"100":{"start":{"line":240,"column":4},"end":{"line":242,"column":6}},"101":{"start":{"line":245,"column":4},"end":{"line":245,"column":75}},"102":{"start":{"line":248,"column":4},"end":{"line":248,"column":25}},"103":{"start":{"line":249,"column":4},"end":{"line":249,"column":19}},"104":{"start":{"line":250,"column":4},"end":{"line":250,"column":24}},"105":{"start":{"line":251,"column":4},"end":{"line":251,"column":22}},"106":{"start":{"line":252,"column":4},"end":{"line":252,"column":27}},"107":{"start":{"line":253,"column":4},"end":{"line":253,"column":21}},"108":{"start":{"line":254,"column":4},"end":{"line":254,"column":25}},"109":{"start":{"line":267,"column":2},"end":{"line":298,"column":4}},"110":{"start":{"line":268,"column":4},"end":{"line":268,"column":25}},"111":{"start":{"line":271,"column":4},"end":{"line":271,"column":37}},"112":{"start":{"line":271,"column":25},"end":{"line":271,"column":37}},"113":{"start":{"line":273,"column":4},"end":{"line":295,"column":5}},"114":{"start":{"line":274,"column":6},"end":{"line":274,"column":65}},"115":{"start":{"line":274,"column":38},"end":{"line":274,"column":65}},"116":{"start":{"line":276,"column":6},"end":{"line":276,"column":42}},"117":{"start":{"line":279,"column":6},"end":{"line":280,"column":44}},"118":{"start":{"line":282,"column":6},"end":{"line":282,"column":57}},"119":{"start":{"line":283,"column":6},"end":{"line":283,"column":101}},"120":{"start":{"line":284,"column":6},"end":{"line":284,"column":53}},"121":{"start":{"line":285,"column":6},"end":{"line":285,"column":39}},"122":{"start":{"line":288,"column":6},"end":{"line":289,"column":44}},"123":{"start":{"line":291,"column":6},"end":{"line":291,"column":57}},"124":{"start":{"line":292,"column":6},"end":{"line":292,"column":101}},"125":{"start":{"line":293,"column":6},"end":{"line":293,"column":53}},"126":{"start":{"line":294,"column":6},"end":{"line":294,"column":39}},"127":{"start":{"line":297,"column":4},"end":{"line":297,"column":16}},"128":{"start":{"line":308,"column":2},"end":{"line":328,"column":4}},"129":{"start":{"line":309,"column":4},"end":{"line":325,"column":5}},"130":{"start":{"line":310,"column":6},"end":{"line":310,"column":30}},"131":{"start":{"line":312,"column":6},"end":{"line":322,"column":7}},"132":{"start":{"line":313,"column":8},"end":{"line":314,"column":41}},"133":{"start":{"line":316,"column":8},"end":{"line":316,"column":37}},"134":{"start":{"line":317,"column":8},"end":{"line":317,"column":70}},"135":{"start":{"line":319,"column":8},"end":{"line":319,"column":65}},"136":{"start":{"line":321,"column":8},"end":{"line":321,"column":55}},"137":{"start":{"line":321,"column":22},"end":{"line":321,"column":55}},"138":{"start":{"line":324,"column":6},"end":{"line":324,"column":45}},"139":{"start":{"line":327,"column":4},"end":{"line":327,"column":16}},"140":{"start":{"line":338,"column":2},"end":{"line":372,"column":4}},"141":{"start":{"line":340,"column":4},"end":{"line":340,"column":115}},"142":{"start":{"line":340,"column":22},"end":{"line":340,"column":115}},"143":{"start":{"line":342,"column":4},"end":{"line":344,"column":38}},"144":{"start":{"line":349,"column":4},"end":{"line":349,"column":39}},"145":{"start":{"line":350,"column":4},"end":{"line":350,"column":21}},"146":{"start":{"line":353,"column":4},"end":{"line":358,"column":5}},"147":{"start":{"line":354,"column":6},"end":{"line":354,"column":30}},"148":{"start":{"line":357,"column":6},"end":{"line":357,"column":59}},"149":{"start":{"line":357,"column":23},"end":{"line":357,"column":59}},"150":{"start":{"line":361,"column":4},"end":{"line":361,"column":26}},"151":{"start":{"line":364,"column":4},"end":{"line":364,"column":30}},"152":{"start":{"line":365,"column":4},"end":{"line":365,"column":23}},"153":{"start":{"line":366,"column":4},"end":{"line":366,"column":27}},"154":{"start":{"line":369,"column":4},"end":{"line":369,"column":24}},"155":{"start":{"line":371,"column":4},"end":{"line":371,"column":16}},"156":{"start":{"line":381,"column":2},"end":{"line":414,"column":4}},"157":{"start":{"line":384,"column":4},"end":{"line":411,"column":5}},"158":{"start":{"line":385,"column":6},"end":{"line":385,"column":34}},"159":{"start":{"line":387,"column":6},"end":{"line":388,"column":31}},"160":{"start":{"line":391,"column":6},"end":{"line":391,"column":44}},"161":{"start":{"line":393,"column":6},"end":{"line":410,"column":7}},"162":{"start":{"line":394,"column":8},"end":{"line":396,"column":34}},"163":{"start":{"line":398,"column":8},"end":{"line":398,"column":36}},"164":{"start":{"line":400,"column":8},"end":{"line":406,"column":9}},"165":{"start":{"line":401,"column":10},"end":{"line":401,"column":80}},"166":{"start":{"line":403,"column":10},"end":{"line":403,"column":64}},"167":{"start":{"line":405,"column":10},"end":{"line":405,"column":44}},"168":{"start":{"line":408,"column":8},"end":{"line":408,"column":29}},"169":{"start":{"line":409,"column":8},"end":{"line":409,"column":25}},"170":{"start":{"line":413,"column":4},"end":{"line":413,"column":16}},"171":{"start":{"line":424,"column":2},"end":{"line":449,"column":4}},"172":{"start":{"line":425,"column":4},"end":{"line":425,"column":114}},"173":{"start":{"line":425,"column":23},"end":{"line":425,"column":114}},"174":{"start":{"line":427,"column":4},"end":{"line":428,"column":42}},"175":{"start":{"line":430,"column":4},"end":{"line":431,"column":26}},"176":{"start":{"line":433,"column":4},"end":{"line":446,"column":5}},"177":{"start":{"line":434,"column":6},"end":{"line":434,"column":29}},"178":{"start":{"line":436,"column":6},"end":{"line":436,"column":32}},"179":{"start":{"line":438,"column":6},"end":{"line":441,"column":7}},"180":{"start":{"line":439,"column":8},"end":{"line":439,"column":78}},"181":{"start":{"line":440,"column":8},"end":{"line":440,"column":60}},"182":{"start":{"line":443,"column":6},"end":{"line":443,"column":30}},"183":{"start":{"line":444,"column":6},"end":{"line":444,"column":27}},"184":{"start":{"line":445,"column":6},"end":{"line":445,"column":21}},"185":{"start":{"line":448,"column":4},"end":{"line":448,"column":18}},"186":{"start":{"line":451,"column":2},"end":{"line":451,"column":34}},"187":{"start":{"line":454,"column":0},"end":{"line":454,"column":43}},"188":{"start":{"line":455,"column":0},"end":{"line":455,"column":36}},"189":{"start":{"line":456,"column":0},"end":{"line":456,"column":63}},"190":{"start":{"line":457,"column":0},"end":{"line":457,"column":49}},"191":{"start":{"line":458,"column":0},"end":{"line":458,"column":61}},"192":{"start":{"line":459,"column":0},"end":{"line":459,"column":45}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":50},"end":{"line":13,"column":50}},{"start":{"line":13,"column":50},"end":{"line":13,"column":50}}]},"2":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":6}},{"start":{"line":78,"column":6},"end":{"line":78,"column":6}}]},"3":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"4":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":6}},{"start":{"line":96,"column":6},"end":{"line":96,"column":6}}]},"5":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"6":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":42}},{"start":{"line":105,"column":46},"end":{"line":105,"column":86}}]},"7":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"8":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":6},"end":{"line":118,"column":29}},{"start":{"line":118,"column":33},"end":{"line":118,"column":48}}]},"9":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":2},"end":{"line":120,"column":2}},{"start":{"line":120,"column":2},"end":{"line":120,"column":2}}]},"10":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":2},"end":{"line":122,"column":2}},{"start":{"line":122,"column":2},"end":{"line":122,"column":2}}]},"11":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"12":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":14}},{"start":{"line":193,"column":18},"end":{"line":193,"column":39}}]},"13":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":22},"end":{"line":199,"column":35}},{"start":{"line":199,"column":39},"end":{"line":199,"column":40}}]},"14":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":16},"end":{"line":211,"column":30}},{"start":{"line":211,"column":34},"end":{"line":211,"column":35}}]},"15":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":213,"column":4}},{"start":{"line":213,"column":4},"end":{"line":213,"column":4}}]},"16":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":11},"end":{"line":216,"column":11}},{"start":{"line":216,"column":11},"end":{"line":216,"column":11}}]},"17":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":6},"end":{"line":218,"column":6}},{"start":{"line":218,"column":6},"end":{"line":218,"column":6}}]},"18":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":14},"end":{"line":238,"column":21}},{"start":{"line":238,"column":25},"end":{"line":238,"column":27}}]},"19":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":18},"end":{"line":241,"column":36}},{"start":{"line":241,"column":40},"end":{"line":241,"column":59}}]},"20":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":47},"end":{"line":245,"column":58}},{"start":{"line":245,"column":62},"end":{"line":245,"column":73}}]},"21":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4}},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"22":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":6},"end":{"line":274,"column":6}},{"start":{"line":274,"column":6},"end":{"line":274,"column":6}}]},"23":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":24},"end":{"line":280,"column":38}},{"start":{"line":280,"column":42},"end":{"line":280,"column":43}}]},"24":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":30},"end":{"line":282,"column":51}},{"start":{"line":282,"column":55},"end":{"line":282,"column":56}}]},"25":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":54},"end":{"line":283,"column":79}},{"start":{"line":283,"column":83},"end":{"line":283,"column":84}}]},"26":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":24},"end":{"line":289,"column":38}},{"start":{"line":289,"column":42},"end":{"line":289,"column":43}}]},"27":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":30},"end":{"line":291,"column":51}},{"start":{"line":291,"column":55},"end":{"line":291,"column":56}}]},"28":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":54},"end":{"line":292,"column":79}},{"start":{"line":292,"column":83},"end":{"line":292,"column":84}}]},"29":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":8},"end":{"line":321,"column":8}},{"start":{"line":321,"column":8},"end":{"line":321,"column":8}}]},"30":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":340,"column":4}},{"start":{"line":340,"column":4},"end":{"line":340,"column":4}}]},"31":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":6},"end":{"line":357,"column":6}},{"start":{"line":357,"column":6},"end":{"line":357,"column":6}}]},"32":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":8},"end":{"line":400,"column":8}},{"start":{"line":400,"column":8},"end":{"line":400,"column":8}}]},"33":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":425,"column":4}},{"start":{"line":425,"column":4},"end":{"line":425,"column":4}}]},"34":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":6},"end":{"line":438,"column":6}},{"start":{"line":438,"column":6},"end":{"line":438,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.analyzeSentences = analyzeSentences;","exports.normalize = normalize;","exports.extractFeatures = extractFeatures;","exports.predict = predict;","","var _shuffle = require('pandemonium/shuffle');","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**","                                                                                                                                                           * Talisman tag/averaged-perceptronhe Averaged Perceptron POS tagging method.","                                                                                                                                                           *","                                                                                                                                                           * [Author]: Matthew Honnibal","                                                                                                                                                           *","                                                                                                                                                           * [Reference]: http://spacy.io/blog/part-of-speech-POS-tagger-in-python/","                                                                                                                                                           */","","","/**"," * Constants."," */","var HASH_DELIMITER = '‡';","var hasher = function hasher(a, b) {","  return a + HASH_DELIMITER + b;","};","","var LOWEST_STRING = String.fromCharCode(0);","","var START = ['-START-', '-START2-'],","    END = ['-END-', '-END2-'];","","var HYPHEN_REGEX = /-/,","    YEAR_REGEX = /\\d{4}/,","    DIGIT_REGEX = /\\d/;","","/**"," * Defaults."," */","var DEFAULTS = {","  iterations: 5,","  ambiguityThreshold: 0.97,","  frequencyThreshold: 20","};","","/**"," * Helpers."," */","","/**"," * Function taking training sentences and returning"," *"," * @param  {array}  sentences - Array of sentences being arrays of (word, tag)."," * @return {object}           - Found classes & tags."," */","function analyzeSentences(sentences) {","  var classes = new Set(),","      counts = {},","      tags = {};","","  // Iterating over sentences","  for (var i = 0, l = sentences.length; i < l; i++) {","    var sentence = sentences[i];","","    // Iterating over words","    for (var j = 0, m = sentence.length; j < m; j++) {","      var _sentence$j = sentence[j],","          word = _sentence$j[0],","          tag = _sentence$j[1];","","      classes.add(tag);","","      if (!(word in counts)) counts[word] = {};","      if (!(tag in counts[word])) counts[word][tag] = 0;","      counts[word][tag]++;","    }","  }","","  // Adding words to the tag dictionary","  for (var word in counts) {","    var tagFrequencies = counts[word];","","    // Finding max frequency","    var max = -Infinity,","        maxTag = null,","        sum = 0;","","    for (var tag in tagFrequencies) {","      var count = tagFrequencies[tag];","","      if (count > max) {","        maxTag = tag;","        max = count;","      }","","      sum += count;","    }","","    // We don't add rare words to the dictionary, just unambiguous ones","    if (sum >= DEFAULTS.frequencyThreshold && max / sum >= DEFAULTS.ambiguityThreshold) tags[word] = maxTag;","  }","","  return { classes: classes, tags: tags };","}","","/**"," * Function normalizing the given word before its pass through the perceptron."," *"," * @param  {string} word - Target word."," * @return {string}      - Normalized word."," */","function normalize(word) {","  if (HYPHEN_REGEX.test(word) && word[0] !== '-') return '!HYPHEN';","","  if (YEAR_REGEX.test(word)) return '!YEAR';","","  if (DIGIT_REGEX.test(word[0])) return '!DIGITS';","","  return word.toLowerCase();","}","","/**"," * Function used to build a context from the given tokenized sentence."," *"," * @param  {array} sentence - Target sentence."," * @return {array}          - Context."," */","function createContext(sentence) {","  var context = new Array(sentence.length + 4);","  context[0] = START[0];","  context[1] = START[1];","","  for (var j = 0, m = sentence.length; j < m; j++) {","    context[j + 2] = normalize(sentence[j][0]);","  }context[context.length - 2] = END[0];","  context[context.length - 1] = END[1];","","  return context;","}","","/**"," * Function extracting feature from the given word & its context."," *"," * @param  {string} word    - Target word."," * @param  {number} index   - Index of the word in the sentence."," * @param  {array}  context - Word's context."," * @param  {array}  prev    - Previous."," * @param  {array}  prev2   - Previous 2."," * @return {array}          - Features."," */","function extractFeatures(index, word, context, previous, previous2) {","  var features = { bias: 1 };","  index += 2;","","  features['i suffix ' + word.slice(-3)] = 1;","  features['i pref1 ' + word[0]] = 1;","  features['i-1 tag ' + previous] = 1;","  features['i-2 tag ' + previous2] = 1;","  features['i tag+i-2 tag ' + previous + ' ' + previous2] = 1;","  features['i word ' + context[index]] = 1;","  features['i-1 tag+i word ' + previous + ' ' + context[index]] = 1;","  features['i-1 word ' + context[index - 1]] = 1;","  features['i-1 suffix ' + context[index - 1].slice(-3)] = 1;","  features['i-2 word ' + context[index - 2]] = 1;","  features['i+1 word ' + context[index + 1]] = 1;","  features['i+1 suffix ' + context[index + 1].slice(-3)] = 1;","  features['i+2 word ' + context[index + 2]] = 1;","","  return features;","}","","/**"," * Given features, weights & classes, this function will return the best"," * label by computing the dot product of the features & weights."," *"," * @param  {object} features - Target features."," * @param  {object} weights  - Current weights."," * @param  {array}  classes  - Array of possible classes."," * @return {array}           - The best label."," */","function predict(features, weights, classes) {","  var scores = {};","","  // Iterating over features","  for (var feature in features) {","    var value = features[feature];","","    if (!value || !(feature in weights)) continue;","","    var relevantWeights = weights[feature];","","    for (var label in relevantWeights) {","      var weight = relevantWeights[label];","      scores[label] = scores[label] || 0;","      scores[label] += value * weight;","    }","  }","","  // Retrieving the best label","  var bestLabel = LOWEST_STRING,","      bestScore = -Infinity;","","  // NOTE: this part is not strictly equal to its Python counterpart","  for (var i = 0, l = classes.length; i < l; i++) {","    var _label = classes[i],","        score = scores[_label] || 0;","","    if (score > bestScore) {","      bestScore = score;","      bestLabel = _label;","    } else if (score === bestScore) {","","      if (_label > bestLabel) bestLabel = _label;","    }","  }","","  return bestLabel;","}","","/**"," * The AveragedPerceptronTagger class."," *"," * @constructor"," * @param {object}   [options]           - Customization options."," * @param {number}   [options.iteration] - Number of training operations."," * @param {function} [options.rng]       - RNG function."," */","","var AveragedPerceptronTagger = function () {","  function AveragedPerceptronTagger(options) {","    _classCallCheck(this, AveragedPerceptronTagger);","","    options = options || {};","","    this.options = {","      iterations: options.iterations || DEFAULTS.iterations","    };","","    // Creating shuffler","    this.shuffle = (0, _shuffle.createShuffle)(options.rng || Math.random);","","    // Properties","    this.trained = false;","    this.tags = {};","    this.classes = null;","    this.weights = {};","    this.seenInstances = 0;","    this.totals = {};","    this.timestamps = {};","  }","","  /**","   * Method used to update the model's weights.","   *","   * @param  {string} truth    - The correct label.","   * @param  {string} guess    - The predicted label.","   * @param  {object} features - The features.","   * @return {AveragedPerceptronTagger} - Returns itself for chaining.","   */","","","  AveragedPerceptronTagger.prototype.update = function update(truth, guess, features) {","    this.seenInstances++;","","    // If the guess is correct, we don't have much to do","    if (truth === guess) return this;","","    for (var feature in features) {","      if (!(feature in this.weights)) this.weights[feature] = {};","","      var weights = this.weights[feature];","","      // For truth","      var truthKey = hasher(feature, truth),","          truthWeight = weights[truth] || 0;","","      this.totals[truthKey] = this.totals[truthKey] || 0;","      this.totals[truthKey] += (this.seenInstances - (this.timestamps[truthKey] || 0)) * truthWeight;","      this.timestamps[truthKey] = this.seenInstances;","      weights[truth] = truthWeight + 1;","","      // For guess","      var guessKey = hasher(feature, guess),","          guessWeight = weights[guess] || 0;","","      this.totals[guessKey] = this.totals[guessKey] || 0;","      this.totals[guessKey] += (this.seenInstances - (this.timestamps[guessKey] || 0)) * guessWeight;","      this.timestamps[guessKey] = this.seenInstances;","      weights[guess] = guessWeight - 1;","    }","","    return this;","  };","","  /**","   * Method used to finalize training by computing average weights from","   * all iterations.","   *","   * @return {AveragedPerceptronTagger} - Returns itself for chaining.","   */","","","  AveragedPerceptronTagger.prototype.averageWeights = function averageWeights() {","    for (var feature in this.weights) {","      var updatedWeights = {};","","      for (var label in this.weights[feature]) {","        var weight = this.weights[feature][label],","            key = hasher(feature, label);","","        var total = this.totals[key];","        total += (this.seenInstances - this.timestamps[key]) * weight;","","        var averaged = Math.round(total / this.seenInstances, 3);","","        if (averaged) updatedWeights[label] = averaged;","      }","","      this.weights[feature] = updatedWeights;","    }","","    return this;","  };","","  /**","   * Method used to train the tagger with the input sentences.","   *","   * @param  {array} sentences - Array of sentences being arrays of (word, tag).","   * @return {AveragedPerceptronTagger} - Returns itself for chaining.","   */","","","  AveragedPerceptronTagger.prototype.train = function train(sentences) {","","    if (this.trained) throw Error('talisman/tag/averaged-perceptron.train: this tagger has already been trained.');","","    var _analyzeSentences = analyzeSentences(sentences),","        classes = _analyzeSentences.classes,","        tags = _analyzeSentences.tags;","","    // Setting properties","","","    this.classes = Array.from(classes);","    this.tags = tags;","","    // Performing iterations","    for (var i = 0, l = this.options.iterations; i < l; i++) {","      this.iterate(sentences);","","      // Shuffling the sentences for next iteration","      if (i !== l - 1) sentences = this.shuffle(sentences);","    }","","    // Get average weights","    this.averageWeights();","","    // Cleanup","    delete this.seenInstances;","    delete this.totals;","    delete this.timestamps;","","    // The tagger is now trained","    this.trained = true;","","    return this;","  };","","  /**","   * Method used to perform a single training operation.","   *","   * @return {AveragedPerceptronTagger} - Returns itself for chaining.","   */","","","  AveragedPerceptronTagger.prototype.iterate = function iterate(sentences) {","","    // Iterating over sentences","    for (var i = 0, l = sentences.length; i < l; i++) {","      var sentence = sentences[i];","","      var previous = START[0],","          previous2 = START[1];","","      // Building context","      var context = createContext(sentence);","","      for (var j = 0, m = sentence.length; j < m; j++) {","        var _sentence$j2 = sentence[j],","            word = _sentence$j2[0],","            tag = _sentence$j2[1];","","        var guess = this.tags[word];","","        if (!guess) {","          var features = extractFeatures(j, word, context, previous, previous2);","","          guess = predict(features, this.weights, this.classes);","","          this.update(tag, guess, features);","        }","","        previous2 = previous;","        previous = guess;","      }","    }","","    return this;","  };","","  /**","   * Method used to tag the provided tokenized sentence.","   *","   * @param  {array} sentence - Array of word tokens.","   * @return {array}          - The tagged tokens.","   */","","","  AveragedPerceptronTagger.prototype.tag = function tag(sentence) {","    if (!this.trained) throw Error('talisman/tag/averaged-perceptron.tag: this tagger hasn\\'t been trained yet.');","","    var output = new Array(sentence.length),","        context = createContext(sentence);","","    var previous = START,","        previous2 = START;","","    for (var i = 0, l = sentence.length; i < l; i++) {","      var word = sentence[i];","","      var tag = this.tags[word];","","      if (!tag) {","        var features = extractFeatures(i, word, context, previous, previous2);","        tag = predict(features, this.weights, this.classes);","      }","","      output[i] = [word, tag];","      previous2 = previous;","      previous = tag;","    }","","    return output;","  };","","  return AveragedPerceptronTagger;","}();","","exports.default = AveragedPerceptronTagger;","module.exports = exports['default'];","exports['default'].analyzeSentences = exports.analyzeSentences;","exports['default'].normalize = exports.normalize;","exports['default'].extractFeatures = exports.extractFeatures;","exports['default'].predict = exports.predict;"],"l":{"3":1,"6":1,"7":1,"8":1,"9":1,"11":1,"13":1,"28":1,"29":1,"30":0,"33":1,"35":1,"38":1,"45":1,"61":1,"62":0,"67":0,"68":0,"71":0,"72":0,"76":0,"78":0,"79":0,"80":0,"85":0,"86":0,"89":0,"93":0,"94":0,"96":0,"97":0,"98":0,"101":0,"105":0,"108":0,"117":1,"118":0,"120":0,"122":0,"124":0,"133":1,"134":0,"135":0,"136":0,"138":0,"139":0,"140":0,"141":0,"143":0,"156":1,"157":0,"158":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"174":0,"186":1,"187":0,"190":0,"191":0,"193":0,"195":0,"197":0,"198":0,"199":0,"200":0,"205":0,"209":0,"210":0,"213":0,"214":0,"215":0,"216":0,"218":0,"222":0,"234":1,"235":1,"236":0,"238":0,"240":0,"245":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"267":1,"268":0,"271":0,"273":0,"274":0,"276":0,"279":0,"282":0,"283":0,"284":0,"285":0,"288":0,"291":0,"292":0,"293":0,"294":0,"297":0,"308":1,"309":0,"310":0,"312":0,"313":0,"316":0,"317":0,"319":0,"321":0,"324":0,"327":0,"338":1,"340":0,"342":0,"349":0,"350":0,"353":0,"354":0,"357":0,"361":0,"364":0,"365":0,"366":0,"369":0,"371":0,"381":1,"384":0,"385":0,"387":0,"391":0,"393":0,"394":0,"398":0,"400":0,"401":0,"403":0,"405":0,"408":0,"409":0,"413":0,"424":1,"425":0,"427":0,"430":0,"433":0,"434":0,"436":0,"438":0,"439":0,"440":0,"443":0,"444":0,"445":0,"448":0,"451":1,"454":1,"455":1,"456":1,"457":1,"458":1,"459":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/classification/naive-bayes/discrete.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/classification/naive-bayes/discrete.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_classCallCheck","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":33},"end":{"line":23,"column":45}}},"3":{"name":"AbstractDiscreteNaiveBayes","line":24,"loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":47}}},"4":{"name":"reset","line":41,"loc":{"start":{"line":41,"column":47},"end":{"line":41,"column":64}}},"5":{"name":"fit","line":60,"loc":{"start":{"line":60,"column":45},"end":{"line":60,"column":76}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":153}},"3":{"start":{"line":7,"column":50},"end":{"line":7,"column":151}},"4":{"start":{"line":7,"column":92},"end":{"line":7,"column":149}},"5":{"start":{"line":23,"column":0},"end":{"line":102,"column":4}},"6":{"start":{"line":24,"column":2},"end":{"line":32,"column":3}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":54}},"8":{"start":{"line":27,"column":4},"end":{"line":29,"column":60}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":23}},"10":{"start":{"line":41,"column":2},"end":{"line":46,"column":4}},"11":{"start":{"line":42,"column":4},"end":{"line":42,"column":24}},"12":{"start":{"line":43,"column":4},"end":{"line":43,"column":23}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":16}},"14":{"start":{"line":60,"column":2},"end":{"line":99,"column":4}},"15":{"start":{"line":61,"column":4},"end":{"line":61,"column":36}},"16":{"start":{"line":63,"column":4},"end":{"line":63,"column":139}},"17":{"start":{"line":63,"column":37},"end":{"line":63,"column":139}},"18":{"start":{"line":66,"column":4},"end":{"line":66,"column":17}},"19":{"start":{"line":69,"column":4},"end":{"line":69,"column":21}},"20":{"start":{"line":71,"column":4},"end":{"line":76,"column":5}},"21":{"start":{"line":72,"column":6},"end":{"line":72,"column":28}},"22":{"start":{"line":74,"column":6},"end":{"line":74,"column":43}},"23":{"start":{"line":75,"column":6},"end":{"line":75,"column":23}},"24":{"start":{"line":79,"column":4},"end":{"line":79,"column":20}},"25":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"26":{"start":{"line":82,"column":6},"end":{"line":82,"column":21}},"27":{"start":{"line":83,"column":5},"end":{"line":93,"column":5}},"28":{"start":{"line":84,"column":6},"end":{"line":85,"column":32}},"29":{"start":{"line":87,"column":6},"end":{"line":92,"column":7}},"30":{"start":{"line":88,"column":8},"end":{"line":88,"column":30}},"31":{"start":{"line":90,"column":8},"end":{"line":90,"column":37}},"32":{"start":{"line":91,"column":8},"end":{"line":91,"column":21}},"33":{"start":{"line":95,"column":4},"end":{"line":95,"column":27}},"34":{"start":{"line":96,"column":4},"end":{"line":96,"column":25}},"35":{"start":{"line":98,"column":4},"end":{"line":98,"column":16}},"36":{"start":{"line":101,"column":2},"end":{"line":101,"column":36}},"37":{"start":{"line":104,"column":0},"end":{"line":104,"column":45}},"38":{"start":{"line":105,"column":0},"end":{"line":105,"column":36}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":50},"end":{"line":7,"column":50}},{"start":{"line":7,"column":50},"end":{"line":7,"column":50}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":15},"end":{"line":27,"column":22}},{"start":{"line":27,"column":26},"end":{"line":27,"column":28}}]},"3":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":43},"end":{"line":29,"column":46}},{"start":{"line":29,"column":49},"end":{"line":29,"column":59}}]},"4":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"5":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":23},"end":{"line":74,"column":37}},{"start":{"line":74,"column":41},"end":{"line":74,"column":42}}]},"6":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":21},"end":{"line":90,"column":31}},{"start":{"line":90,"column":35},"end":{"line":90,"column":36}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","/**"," * Talisman classification/naive-bayes/discrete"," * ============================================="," *"," * Abstract discrete Naive-Bayes classifier."," *"," * [Reference]: https://en.wikipedia.org/wiki/Naive_Bayes_classifier"," */","","/**"," * Abstract discrete Naive-Bayes classifier."," *"," * @constructor"," */","var AbstractDiscreteNaiveBayes = function () {","  function AbstractDiscreteNaiveBayes(options) {","    _classCallCheck(this, AbstractDiscreteNaiveBayes);","","    var _ref = options || {},","        _ref$alpha = _ref.alpha,","        alpha = _ref$alpha === undefined ? 1.0 : _ref$alpha;","","    this.alpha = alpha;","  }","","  /**","   * Method used to reset the internal state of the classifier.","   *","   * @return {NaiveBayes} - Returns itself for chaining.","   */","","","  AbstractDiscreteNaiveBayes.prototype.reset = function reset() {","    this.classes = null;","    this.counts = null;","","    return this;","  };","","  /**","   * Method used to train the classifier and taking the dataset's vectors &","   * labels.","   *","   * @param  {array}      features - Training vectors.","   * @param  {array}      labels   - Target values.","   * @return {NaiveBayes}          - Returns itself for chaining.","   *","   * @throws {Error} - Will throw if features and labels are not of same length.","   */","","","  AbstractDiscreteNaiveBayes.prototype.fit = function fit(features, labels) {","    var nbVectors = features.length;","","    if (nbVectors !== labels.length) throw Error('talisman/classification/naive-bayes/discrete.fit: given arrays have different lengths.');","","    // Resetting internal state","    this.reset();","","    // Finding classes","    var classes = {};","","    for (var i = 0, l = labels.length; i < l; i++) {","      var label = labels[i];","","      classes[label] = classes[label] || 0;","      classes[label]++;","    }","","    // Counting features per classes","    var counts = {};","","    for (var k in classes) {","      counts[k] = {};","    }for (var _i = 0; _i < nbVectors; _i++) {","      var cls = counts[labels[_i]],","          vector = features[_i];","","      for (var j = 0, _l = vector.length; j < _l; j++) {","        var value = vector[j];","","        cls[value] = cls[value] || 0;","        cls[value]++;","      }","    }","","    this.classes = classes;","    this.counts = counts;","","    return this;","  };","","  return AbstractDiscreteNaiveBayes;","}();","","exports.default = AbstractDiscreteNaiveBayes;","module.exports = exports['default'];"],"l":{"3":1,"7":1,"23":1,"24":1,"25":0,"27":0,"31":0,"41":1,"42":0,"43":0,"45":0,"60":1,"61":0,"63":0,"66":0,"69":0,"71":0,"72":0,"74":0,"75":0,"79":0,"81":0,"82":0,"83":0,"84":0,"87":0,"88":0,"90":0,"91":0,"95":0,"96":0,"98":0,"101":1,"104":1,"105":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/classification/naive-bayes/gaussian.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/classification/naive-bayes/gaussian.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":1,"96":1,"97":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"_toConsumableArray","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}}},"2":{"name":"_classCallCheck","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":37}}},"4":{"name":"GaussianNaiveBayes","line":31,"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":32}}},"5":{"name":"reset","line":40,"loc":{"start":{"line":40,"column":39},"end":{"line":40,"column":56}}},"6":{"name":"fit","line":62,"loc":{"start":{"line":62,"column":37},"end":{"line":62,"column":68}}},"7":{"name":"jointLogLikelihood","line":145,"loc":{"start":{"line":145,"column":52},"end":{"line":145,"column":88}}},"8":{"name":"predict","line":184,"loc":{"start":{"line":184,"column":41},"end":{"line":184,"column":66}}},"9":{"name":"_export","line":208,"loc":{"start":{"line":208,"column":40},"end":{"line":208,"column":59}}},"10":{"name":"_import","line":226,"loc":{"start":{"line":226,"column":40},"end":{"line":226,"column":64}}},"11":{"name":"toJSON","line":242,"loc":{"start":{"line":242,"column":40},"end":{"line":242,"column":58}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":54}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":195}},"6":{"start":{"line":13,"column":35},"end":{"line":13,"column":193}},"7":{"start":{"line":13,"column":61},"end":{"line":13,"column":145}},"8":{"start":{"line":13,"column":126},"end":{"line":13,"column":143}},"9":{"start":{"line":13,"column":146},"end":{"line":13,"column":158}},"10":{"start":{"line":13,"column":168},"end":{"line":13,"column":191}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":153}},"12":{"start":{"line":15,"column":50},"end":{"line":15,"column":151}},"13":{"start":{"line":15,"column":92},"end":{"line":15,"column":149}},"14":{"start":{"line":30,"column":0},"end":{"line":247,"column":4}},"15":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"16":{"start":{"line":32,"column":4},"end":{"line":32,"column":46}},"17":{"start":{"line":40,"column":2},"end":{"line":48,"column":4}},"18":{"start":{"line":41,"column":4},"end":{"line":41,"column":24}},"19":{"start":{"line":42,"column":4},"end":{"line":42,"column":23}},"20":{"start":{"line":43,"column":4},"end":{"line":43,"column":24}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":22}},"22":{"start":{"line":45,"column":4},"end":{"line":45,"column":22}},"23":{"start":{"line":47,"column":4},"end":{"line":47,"column":16}},"24":{"start":{"line":62,"column":2},"end":{"line":132,"column":4}},"25":{"start":{"line":63,"column":4},"end":{"line":63,"column":36}},"26":{"start":{"line":65,"column":4},"end":{"line":65,"column":139}},"27":{"start":{"line":65,"column":37},"end":{"line":65,"column":139}},"28":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"29":{"start":{"line":71,"column":4},"end":{"line":72,"column":20}},"30":{"start":{"line":75,"column":4},"end":{"line":80,"column":5}},"31":{"start":{"line":76,"column":6},"end":{"line":76,"column":28}},"32":{"start":{"line":78,"column":6},"end":{"line":78,"column":43}},"33":{"start":{"line":79,"column":6},"end":{"line":79,"column":23}},"34":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"35":{"start":{"line":83,"column":6},"end":{"line":83,"column":41}},"36":{"start":{"line":85,"column":4},"end":{"line":85,"column":40}},"37":{"start":{"line":88,"column":4},"end":{"line":90,"column":64}},"38":{"start":{"line":92,"column":4},"end":{"line":95,"column":5}},"39":{"start":{"line":93,"column":6},"end":{"line":93,"column":65}},"40":{"start":{"line":94,"column":6},"end":{"line":94,"column":53}},"41":{"start":{"line":97,"column":4},"end":{"line":105,"column":5}},"42":{"start":{"line":98,"column":6},"end":{"line":99,"column":36}},"43":{"start":{"line":101,"column":6},"end":{"line":104,"column":7}},"44":{"start":{"line":102,"column":8},"end":{"line":102,"column":58}},"45":{"start":{"line":103,"column":8},"end":{"line":103,"column":45}},"46":{"start":{"line":108,"column":4},"end":{"line":109,"column":37}},"47":{"start":{"line":112,"column":4},"end":{"line":113,"column":19}},"48":{"start":{"line":115,"column":4},"end":{"line":123,"column":5}},"49":{"start":{"line":116,"column":6},"end":{"line":116,"column":22}},"50":{"start":{"line":117,"column":6},"end":{"line":117,"column":22}},"51":{"start":{"line":119,"column":6},"end":{"line":122,"column":7}},"52":{"start":{"line":120,"column":8},"end":{"line":120,"column":69}},"53":{"start":{"line":121,"column":8},"end":{"line":121,"column":83}},"54":{"start":{"line":125,"column":4},"end":{"line":125,"column":27}},"55":{"start":{"line":126,"column":4},"end":{"line":126,"column":25}},"56":{"start":{"line":127,"column":4},"end":{"line":127,"column":33}},"57":{"start":{"line":128,"column":4},"end":{"line":128,"column":23}},"58":{"start":{"line":129,"column":4},"end":{"line":129,"column":23}},"59":{"start":{"line":131,"column":4},"end":{"line":131,"column":16}},"60":{"start":{"line":145,"column":2},"end":{"line":174,"column":4}},"61":{"start":{"line":146,"column":4},"end":{"line":146,"column":129}},"62":{"start":{"line":146,"column":21},"end":{"line":146,"column":129}},"63":{"start":{"line":148,"column":4},"end":{"line":148,"column":223}},"64":{"start":{"line":148,"column":43},"end":{"line":148,"column":223}},"65":{"start":{"line":150,"column":4},"end":{"line":150,"column":27}},"66":{"start":{"line":152,"column":4},"end":{"line":171,"column":5}},"67":{"start":{"line":153,"column":6},"end":{"line":155,"column":44}},"68":{"start":{"line":157,"column":6},"end":{"line":158,"column":17}},"69":{"start":{"line":160,"column":6},"end":{"line":167,"column":7}},"70":{"start":{"line":161,"column":8},"end":{"line":163,"column":26}},"71":{"start":{"line":165,"column":8},"end":{"line":165,"column":40}},"72":{"start":{"line":166,"column":8},"end":{"line":166,"column":37}},"73":{"start":{"line":169,"column":6},"end":{"line":169,"column":37}},"74":{"start":{"line":170,"column":6},"end":{"line":170,"column":38}},"75":{"start":{"line":173,"column":4},"end":{"line":173,"column":25}},"76":{"start":{"line":184,"column":2},"end":{"line":199,"column":4}},"77":{"start":{"line":185,"column":4},"end":{"line":185,"column":56}},"78":{"start":{"line":188,"column":4},"end":{"line":189,"column":30}},"79":{"start":{"line":191,"column":4},"end":{"line":196,"column":5}},"80":{"start":{"line":192,"column":6},"end":{"line":195,"column":7}},"81":{"start":{"line":193,"column":8},"end":{"line":193,"column":22}},"82":{"start":{"line":194,"column":8},"end":{"line":194,"column":37}},"83":{"start":{"line":198,"column":4},"end":{"line":198,"column":21}},"84":{"start":{"line":208,"column":2},"end":{"line":216,"column":4}},"85":{"start":{"line":209,"column":4},"end":{"line":215,"column":6}},"86":{"start":{"line":226,"column":2},"end":{"line":234,"column":4}},"87":{"start":{"line":227,"column":4},"end":{"line":227,"column":17}},"88":{"start":{"line":229,"column":4},"end":{"line":229,"column":33}},"89":{"start":{"line":230,"column":4},"end":{"line":230,"column":31}},"90":{"start":{"line":231,"column":4},"end":{"line":231,"column":39}},"91":{"start":{"line":232,"column":4},"end":{"line":232,"column":29}},"92":{"start":{"line":233,"column":4},"end":{"line":233,"column":29}},"93":{"start":{"line":242,"column":2},"end":{"line":244,"column":4}},"94":{"start":{"line":243,"column":4},"end":{"line":243,"column":25}},"95":{"start":{"line":246,"column":2},"end":{"line":246,"column":28}},"96":{"start":{"line":249,"column":0},"end":{"line":249,"column":37}},"97":{"start":{"line":250,"column":0},"end":{"line":250,"column":36}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":35},"end":{"line":13,"column":35}},{"start":{"line":13,"column":35},"end":{"line":13,"column":35}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":50},"end":{"line":15,"column":50}},{"start":{"line":15,"column":50},"end":{"line":15,"column":50}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"4":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":23},"end":{"line":78,"column":37}},{"start":{"line":78,"column":41},"end":{"line":78,"column":42}}]},"5":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"6":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"7":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":6},"end":{"line":192,"column":6}},{"start":{"line":192,"column":6},"end":{"line":192,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _vectors = require('../../helpers/vectors');","","var _matrices = require('../../helpers/matrices');","","var _descriptive = require('../../stats/descriptive');","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**","                                                                                                                                                           * Talisman classification/naive-bayes/gaussianmplementation of the Gaussian Naive-Bayes classifier.","                                                                                                                                                           *","                                                                                                                                                           * [Reference]: https://en.wikipedia.org/wiki/Naive_Bayes_classifier","                                                                                                                                                           */","","","/**"," * The Gaussian Naive Bayes classifier."," *"," * @constructor"," */","var GaussianNaiveBayes = function () {","  function GaussianNaiveBayes() {","    _classCallCheck(this, GaussianNaiveBayes);","  }","","  /**","   * Method used to reset the internal state of the classifier.","   *","   * @return {NaiveBayes} - Returns itself for chaining.","   */","  GaussianNaiveBayes.prototype.reset = function reset() {","    this.classes = null;","    this.priors = null;","    this.dimensions = 0;","    this.theta = null;","    this.sigma = null;","","    return this;","  };","","  /**","   * Method used to train the classifier and taking the dataset's vectors &","   * labels.","   *","   * @param  {array}      features    - Training vectors.","   * @param  {array}      labels      - Target values.","   * @return {NaiveBayes}             - Returns itself for chaining.","   *","   * @throws {Error} - Will throw if features and labels are not of same length.","   */","","","  GaussianNaiveBayes.prototype.fit = function fit(features, labels) {","    var nbVectors = features.length;","","    if (nbVectors !== labels.length) throw Error('talisman/classification/naive-bayes/gaussian.fit: given arrays have different lengths.');","","    // Resetting internal state","    this.reset();","","    // Classes","    var classes = {},","        priors = {};","","    // Finding unique classes","    for (var i = 0, l = labels.length; i < l; i++) {","      var label = labels[i];","","      classes[label] = classes[label] || 0;","      classes[label]++;","    }","","    for (var k in classes) {","      priors[k] = classes[k] / nbVectors;","    } // Lengths","    var dimensions = features[0].length;","","    // Building matrices","    var matrices = {},","        offsets = {},","        featureSets = (0, _matrices.mat)(dimensions, nbVectors);","","    for (var _k in classes) {","      matrices[_k] = (0, _matrices.mat)(dimensions, classes[_k]);","      offsets[_k] = (0, _vectors.vec)(dimensions, 0);","    }","","    for (var _i = 0; _i < nbVectors; _i++) {","      var _label = labels[_i],","          matrix = matrices[_label];","","      for (var j = 0; j < dimensions; j++) {","        matrix[j][offsets[_label][j]++] = features[_i][j];","        featureSets[j][_i] = features[_i][j];","      }","    }","","    // Epsilon","    var maxVariance = Math.max.apply(Math, _toConsumableArray(featureSets.map(_descriptive.variance))),","        espilon = 1e-9 * maxVariance;","","    // Computing means & variances","    var theta = {},","        sigma = {};","","    for (var _k2 in matrices) {","      theta[_k2] = [];","      sigma[_k2] = [];","","      for (var _i2 = 0; _i2 < dimensions; _i2++) {","        theta[_k2][_i2] = (0, _descriptive.mean)(matrices[_k2][_i2]);","        sigma[_k2][_i2] = (0, _descriptive.variance)(matrices[_k2][_i2]) + espilon;","      }","    }","","    this.classes = classes;","    this.priors = priors;","    this.dimensions = dimensions;","    this.theta = theta;","    this.sigma = sigma;","","    return this;","  };","","  /**","   * Method used to get the joint log likelihood for a new vector.","   *","   * @param  {array} vector - The vector to classify.","   * @return {object}       - The probabilities.","   *","   * @throw {Error} - The classifier cannot predict if not yet fitted.","   * @throw {Error} - The classifier expects a vector of correct dimension.","   */","","","  GaussianNaiveBayes.prototype.jointLogLikelihood = function jointLogLikelihood(vector) {","    if (!this.theta) throw Error('talisman/classification/naive-bayes/gaussian.probabilities: the classifier is not yet fitted');","","    if (vector.length !== this.dimensions) throw Error('talisman/classification/naive-bayes/gaussian.probabilities: the given vector is not of correct dimension (' + vector.length + ' instead of ' + this.dimensions + ').');","","    var probabilities = {};","","    for (var k in this.classes) {","      var theta = this.theta[k],","          sigma = this.sigma[k],","          jointi = Math.log(this.priors[k]);","","      var s1 = 0,","          s2 = 0;","","      for (var i = 0; i < this.dimensions; i++) {","        var t = theta[i],","            s = sigma[i],","            x = vector[i];","","        s1 += Math.log(2 * Math.PI * s);","        s2 += Math.pow(x - t, 2) / s;","      }","","      var nij = -0.5 * s1 - 0.5 * s2;","      probabilities[k] = jointi + nij;","    }","","    return probabilities;","  };","","  /**","   * Method used to classify a new vector.","   *","   * @param  {array} vector - The vector to classify.","   * @return {mixed}        - The predicted label.","   */","","","  GaussianNaiveBayes.prototype.predict = function predict(vector) {","    var probabilities = this.jointLogLikelihood(vector);","","    // Finding the best class","    var bestClass = null,","        bestScore = -Infinity;","","    for (var k in probabilities) {","      if (bestScore < probabilities[k]) {","        bestClass = k;","        bestScore = probabilities[k];","      }","    }","","    return bestClass;","  };","","  /**","   * Method used to export the classifier's model to a JSON representation.","   *","   * @return {object} - The JSON model.","   */","","","  GaussianNaiveBayes.prototype.export = function _export() {","    return {","      classes: this.classes,","      priors: this.priors,","      dimensions: this.dimensions,","      theta: this.theta,","      sigma: this.sigma","    };","  };","","  /**","   * Method used to import a JSON model into the classifier.","   *","   * @param  {object}     model - The JSON model.","   * @return {NaiveBayes}       - Returns itself for chaining.","   */","","","  GaussianNaiveBayes.prototype.import = function _import(model) {","    this.reset();","","    this.classes = model.classes;","    this.priors = model.priors;","    this.dimensions = model.dimensions;","    this.theta = model.theta;","    this.sigma = model.sigma;","  };","","  /**","   * Method used to force JSON.stringify to format the classifier using the","   * #.export method.","   */","","","  GaussianNaiveBayes.prototype.toJSON = function toJSON() {","    return this.export();","  };","","  return GaussianNaiveBayes;","}();","","exports.default = GaussianNaiveBayes;","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"30":1,"31":1,"32":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"62":1,"63":0,"65":0,"68":0,"71":0,"75":0,"76":0,"78":0,"79":0,"82":0,"83":0,"85":0,"88":0,"92":0,"93":0,"94":0,"97":0,"98":0,"101":0,"102":0,"103":0,"108":0,"112":0,"115":0,"116":0,"117":0,"119":0,"120":0,"121":0,"125":0,"126":0,"127":0,"128":0,"129":0,"131":0,"145":1,"146":0,"148":0,"150":0,"152":0,"153":0,"157":0,"160":0,"161":0,"165":0,"166":0,"169":0,"170":0,"173":0,"184":1,"185":0,"188":0,"191":0,"192":0,"193":0,"194":0,"198":0,"208":1,"209":0,"226":1,"227":0,"229":0,"230":0,"231":0,"232":0,"233":0,"242":1,"243":0,"246":1,"249":1,"250":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/classification/naive-bayes/multinomial.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/classification/naive-bayes/multinomial.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":1,"15":0,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":1,"25":1,"26":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,1],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}},"2":{"name":"_classCallCheck","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}}},"3":{"name":"_possibleConstructorReturn","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}}},"4":{"name":"_inherits","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":41}}},"5":{"name":"(anonymous_5)","line":32,"loc":{"start":{"line":32,"column":28},"end":{"line":32,"column":61}}},"6":{"name":"MultinomialNaiveBayes","line":35,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"5":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":153}},"7":{"start":{"line":13,"column":50},"end":{"line":13,"column":151}},"8":{"start":{"line":13,"column":92},"end":{"line":13,"column":149}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":240}},"10":{"start":{"line":15,"column":50},"end":{"line":15,"column":151}},"11":{"start":{"line":15,"column":63},"end":{"line":15,"column":149}},"12":{"start":{"line":15,"column":152},"end":{"line":15,"column":238}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":494}},"14":{"start":{"line":17,"column":43},"end":{"line":17,"column":208}},"15":{"start":{"line":17,"column":106},"end":{"line":17,"column":206}},"16":{"start":{"line":17,"column":209},"end":{"line":17,"column":373}},"17":{"start":{"line":17,"column":374},"end":{"line":17,"column":492}},"18":{"start":{"line":17,"column":390},"end":{"line":17,"column":492}},"19":{"start":{"line":32,"column":0},"end":{"line":42,"column":22}},"20":{"start":{"line":33,"column":2},"end":{"line":33,"column":58}},"21":{"start":{"line":35,"column":2},"end":{"line":39,"column":3}},"22":{"start":{"line":36,"column":4},"end":{"line":36,"column":49}},"23":{"start":{"line":38,"column":4},"end":{"line":38,"column":90}},"24":{"start":{"line":41,"column":2},"end":{"line":41,"column":31}},"25":{"start":{"line":44,"column":0},"end":{"line":44,"column":40}},"26":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":50},"end":{"line":13,"column":50}},{"start":{"line":13,"column":50},"end":{"line":13,"column":50}}]},"4":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":50},"end":{"line":15,"column":50}},{"start":{"line":15,"column":50},"end":{"line":15,"column":50}}]},"5":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":226},"end":{"line":15,"column":230}},{"start":{"line":15,"column":233},"end":{"line":15,"column":237}}]},"6":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":159},"end":{"line":15,"column":163}},{"start":{"line":15,"column":168},"end":{"line":15,"column":192}},{"start":{"line":15,"column":196},"end":{"line":15,"column":222}}]},"7":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":43},"end":{"line":17,"column":43}},{"start":{"line":17,"column":43},"end":{"line":17,"column":43}}]},"8":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":47},"end":{"line":17,"column":79}},{"start":{"line":17,"column":83},"end":{"line":17,"column":102}}]},"9":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":244},"end":{"line":17,"column":254}},{"start":{"line":17,"column":258},"end":{"line":17,"column":278}}]},"10":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":374},"end":{"line":17,"column":374}},{"start":{"line":17,"column":374},"end":{"line":17,"column":374}}]},"11":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":414},"end":{"line":17,"column":457}},{"start":{"line":17,"column":460},"end":{"line":17,"column":491}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _discrete = require('./discrete');","","var _discrete2 = _interopRequireDefault(_discrete);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }alisman classification/naive-bayes/multinomialmplementation of the Multinomial Naive-Bayes classifiereference]: https://en.wikipedia.org/wiki/Naive_Bayes_classifierhe Multinomial Naive Bayes classifier."," *"," * @constructor"," */","var MultinomialNaiveBayes = function (_AbstractDiscreteNaiv) {","  _inherits(MultinomialNaiveBayes, _AbstractDiscreteNaiv);","","  function MultinomialNaiveBayes() {","    _classCallCheck(this, MultinomialNaiveBayes);","","    return _possibleConstructorReturn(this, _AbstractDiscreteNaiv.apply(this, arguments));","  }","","  return MultinomialNaiveBayes;","}(_discrete2.default);","","exports.default = MultinomialNaiveBayes;","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"32":1,"33":1,"35":1,"36":0,"38":0,"41":1,"44":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/abstract.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/abstract.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":84},"end":{"line":7,"column":99}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":124},"end":{"line":7,"column":139}}},"3":{"name":"_classCallCheck","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}}},"4":{"name":"RecordLinkageClusterer","line":34,"loc":{"start":{"line":34,"column":29},"end":{"line":34,"column":76}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":269}},"3":{"start":{"line":7,"column":101},"end":{"line":7,"column":119}},"4":{"start":{"line":7,"column":141},"end":{"line":7,"column":266}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":153}},"6":{"start":{"line":9,"column":50},"end":{"line":9,"column":151}},"7":{"start":{"line":9,"column":92},"end":{"line":9,"column":149}},"8":{"start":{"line":22,"column":0},"end":{"line":24,"column":2}},"9":{"start":{"line":34,"column":0},"end":{"line":46,"column":2}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":48}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":188}},"12":{"start":{"line":37,"column":95},"end":{"line":37,"column":188}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":120}},"14":{"start":{"line":39,"column":29},"end":{"line":39,"column":120}},"15":{"start":{"line":42,"column":2},"end":{"line":42,"column":21}},"16":{"start":{"line":43,"column":2},"end":{"line":45,"column":4}},"17":{"start":{"line":48,"column":0},"end":{"line":48,"column":41}},"18":{"start":{"line":49,"column":0},"end":{"line":49,"column":36}}},"branchMap":{"1":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":84},"end":{"line":7,"column":121}},{"start":{"line":7,"column":124},"end":{"line":7,"column":268}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":14},"end":{"line":7,"column":42}},{"start":{"line":7,"column":46},"end":{"line":7,"column":81}}]},"3":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":244},"end":{"line":7,"column":252}},{"start":{"line":7,"column":255},"end":{"line":7,"column":265}}]},"4":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":148},"end":{"line":7,"column":151}},{"start":{"line":7,"column":155},"end":{"line":7,"column":183}},{"start":{"line":7,"column":187},"end":{"line":7,"column":213}},{"start":{"line":7,"column":217},"end":{"line":7,"column":241}}]},"5":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":50},"end":{"line":9,"column":50}},{"start":{"line":9,"column":50},"end":{"line":9,"column":50}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"7":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":13}},{"start":{"line":37,"column":17},"end":{"line":37,"column":93}}]},"8":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":50},"end":{"line":37,"column":61}},{"start":{"line":37,"column":64},"end":{"line":37,"column":79}}]},"9":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"10":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":20},"end":{"line":44,"column":41}},{"start":{"line":44,"column":45},"end":{"line":44,"column":68}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","/**"," * Talisman clustering/record-linkage/abstract"," * ============================================"," *"," * Abstract class used by every record-linkage clusterer to expose a same"," * interface."," */","","/**"," * Defaults."," */","var DEFAULTS = {","  minClusterSize: 2","};","","/**"," * Record Linkage Clusterer class."," *"," * @constructor"," * @param {object} params - Clusterer parameters."," * @param {array}  items  - Items to cluster."," */","","var RecordLinkageClusterer = function RecordLinkageClusterer(params, items) {","  _classCallCheck(this, RecordLinkageClusterer);","","  if (!params || (typeof params === 'undefined' ? 'undefined' : _typeof(params)) !== 'object') throw new Error('talisman/clustering/record-linkage: the given params should be an object.');","","  if (!Array.isArray(items)) throw new Error('talisman/clustering/record-linkage: the given items should be an array.');","","  // Properties","  this.items = items;","  this.params = {","    minClusterSize: params.minClusterSize || DEFAULTS.minClusterSize","  };","};","","exports.default = RecordLinkageClusterer;","module.exports = exports['default'];"],"l":{"3":1,"7":1,"9":1,"22":1,"34":1,"35":0,"37":0,"39":0,"42":0,"43":0,"48":1,"49":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/blocking.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/blocking.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":1,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":1,"58":0,"59":0,"60":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,1],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"_classCallCheck","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}}},"3":{"name":"_possibleConstructorReturn","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}}},"4":{"name":"_inherits","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":52},"end":{"line":37,"column":85}}},"6":{"name":"BlockingClusterer","line":40,"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":44}}},"7":{"name":"run","line":55,"loc":{"start":{"line":55,"column":36},"end":{"line":55,"column":51}}},"8":{"name":"blocking","line":108,"loc":{"start":{"line":108,"column":0},"end":{"line":108,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"8":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":153}},"10":{"start":{"line":17,"column":50},"end":{"line":17,"column":151}},"11":{"start":{"line":17,"column":92},"end":{"line":17,"column":149}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":240}},"13":{"start":{"line":19,"column":50},"end":{"line":19,"column":151}},"14":{"start":{"line":19,"column":63},"end":{"line":19,"column":149}},"15":{"start":{"line":19,"column":152},"end":{"line":19,"column":238}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":494}},"17":{"start":{"line":21,"column":43},"end":{"line":21,"column":208}},"18":{"start":{"line":21,"column":106},"end":{"line":21,"column":206}},"19":{"start":{"line":21,"column":209},"end":{"line":21,"column":373}},"20":{"start":{"line":21,"column":374},"end":{"line":21,"column":492}},"21":{"start":{"line":21,"column":390},"end":{"line":21,"column":492}},"22":{"start":{"line":37,"column":0},"end":{"line":98,"column":22}},"23":{"start":{"line":38,"column":2},"end":{"line":38,"column":54}},"24":{"start":{"line":40,"column":2},"end":{"line":53,"column":3}},"25":{"start":{"line":41,"column":4},"end":{"line":41,"column":45}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":98}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":63}},"28":{"start":{"line":47,"column":4},"end":{"line":47,"column":48}},"29":{"start":{"line":49,"column":4},"end":{"line":49,"column":140}},"30":{"start":{"line":49,"column":39},"end":{"line":49,"column":140}},"31":{"start":{"line":51,"column":4},"end":{"line":51,"column":28}},"32":{"start":{"line":52,"column":4},"end":{"line":52,"column":17}},"33":{"start":{"line":55,"column":2},"end":{"line":95,"column":4}},"34":{"start":{"line":56,"column":4},"end":{"line":57,"column":37}},"35":{"start":{"line":59,"column":4},"end":{"line":72,"column":5}},"36":{"start":{"line":60,"column":6},"end":{"line":60,"column":61}},"37":{"start":{"line":62,"column":6},"end":{"line":71,"column":7}},"38":{"start":{"line":63,"column":8},"end":{"line":63,"column":30}},"39":{"start":{"line":66,"column":8},"end":{"line":66,"column":29}},"40":{"start":{"line":66,"column":20},"end":{"line":66,"column":29}},"41":{"start":{"line":68,"column":8},"end":{"line":68,"column":47}},"42":{"start":{"line":68,"column":28},"end":{"line":68,"column":47}},"43":{"start":{"line":70,"column":8},"end":{"line":70,"column":30}},"44":{"start":{"line":74,"column":4},"end":{"line":92,"column":5}},"45":{"start":{"line":75,"column":6},"end":{"line":75,"column":28}},"46":{"start":{"line":77,"column":6},"end":{"line":91,"column":7}},"47":{"start":{"line":78,"column":8},"end":{"line":78,"column":38}},"48":{"start":{"line":80,"column":8},"end":{"line":90,"column":9}},"49":{"start":{"line":81,"column":10},"end":{"line":81,"column":40}},"50":{"start":{"line":83,"column":10},"end":{"line":89,"column":11}},"51":{"start":{"line":84,"column":12},"end":{"line":84,"column":61}},"52":{"start":{"line":85,"column":12},"end":{"line":85,"column":44}},"53":{"start":{"line":87,"column":12},"end":{"line":87,"column":61}},"54":{"start":{"line":88,"column":12},"end":{"line":88,"column":44}},"55":{"start":{"line":94,"column":4},"end":{"line":94,"column":93}},"56":{"start":{"line":97,"column":2},"end":{"line":97,"column":27}},"57":{"start":{"line":108,"column":0},"end":{"line":112,"column":1}},"58":{"start":{"line":109,"column":2},"end":{"line":109,"column":55}},"59":{"start":{"line":111,"column":2},"end":{"line":111,"column":25}},"60":{"start":{"line":113,"column":0},"end":{"line":113,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":50},"end":{"line":17,"column":50}},{"start":{"line":17,"column":50},"end":{"line":17,"column":50}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":50},"end":{"line":19,"column":50}},{"start":{"line":19,"column":50},"end":{"line":19,"column":50}}]},"5":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":226},"end":{"line":19,"column":230}},{"start":{"line":19,"column":233},"end":{"line":19,"column":237}}]},"6":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":159},"end":{"line":19,"column":163}},{"start":{"line":19,"column":168},"end":{"line":19,"column":192}},{"start":{"line":19,"column":196},"end":{"line":19,"column":222}}]},"7":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":43},"end":{"line":21,"column":43}},{"start":{"line":21,"column":43},"end":{"line":21,"column":43}}]},"8":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":47},"end":{"line":21,"column":79}},{"start":{"line":21,"column":83},"end":{"line":21,"column":102}}]},"9":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":244},"end":{"line":21,"column":254}},{"start":{"line":21,"column":258},"end":{"line":21,"column":278}}]},"10":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":374},"end":{"line":21,"column":374}},{"start":{"line":21,"column":374},"end":{"line":21,"column":374}}]},"11":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":414},"end":{"line":21,"column":457}},{"start":{"line":21,"column":460},"end":{"line":21,"column":491}}]},"12":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":18},"end":{"line":47,"column":31}},{"start":{"line":47,"column":35},"end":{"line":47,"column":47}}]},"13":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"14":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]},"15":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"16":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":10},"end":{"line":83,"column":10}},{"start":{"line":83,"column":10},"end":{"line":83,"column":10}}]},"17":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":31},"end":{"line":84,"column":47}},{"start":{"line":84,"column":51},"end":{"line":84,"column":60}}]},"18":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":31},"end":{"line":87,"column":47}},{"start":{"line":87,"column":51},"end":{"line":87,"column":60}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.BlockingClusterer = undefined;","exports.default = blocking;","","var _abstract = require('./abstract');","","var _abstract2 = _interopRequireDefault(_abstract);","","var _helpers = require('./helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }alisman clustering/record-linkage/blockinglusterer dispatching documents to blocks which we will then clusterdocument may be attached to more than one block since the algorithm usesan inverted index. Time complexity is nb(b-1)/2 where n is the numberof blocks and b the average size of a block.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */","","","/**"," * Blocking Clusterer class."," *"," * @constructor"," */","var BlockingClusterer = exports.BlockingClusterer = function (_RecordLinkageCluster) {","  _inherits(BlockingClusterer, _RecordLinkageCluster);","","  function BlockingClusterer(params, items) {","    _classCallCheck(this, BlockingClusterer);","","    var _this = _possibleConstructorReturn(this, _RecordLinkageCluster.call(this, params, items));","","    (0, _helpers.handleSimilarityPolymorphisms)(_this, params);","","    var blocker = params.blocks || params.block;","","    if (typeof blocker !== 'function') throw new Error('talisman/clustering/record-linkage/blocking: the given blocker is not a function.');","","    _this.blocker = blocker;","    return _this;","  }","","  BlockingClusterer.prototype.run = function run() {","    var graph = {},","        blocks = Object.create(null);","","    for (var i = 0, l = this.items.length; i < l; i++) {","      var tokens = [].concat(this.blocker(this.items[i], i));","","      for (var j = 0, m = tokens.length; j < m; j++) {","        var token = tokens[j];","","        // We skip falsey tokens","        if (!token) continue;","","        if (!blocks[token]) blocks[token] = [];","","        blocks[token].push(i);","      }","    }","","    for (var k in blocks) {","      var block = blocks[k];","","      for (var _i = 0, _l = block.length; _i < _l; _i++) {","        var a = this.items[block[_i]];","","        for (var _j = _i + 1; _j < _l; _j++) {","          var b = this.items[block[_j]];","","          if (this.similarity(a, b)) {","            graph[block[_i]] = graph[block[_i]] || new Set();","            graph[block[_i]].add(block[_j]);","","            graph[block[_j]] = graph[block[_j]] || new Set();","            graph[block[_j]].add(block[_i]);","          }","        }","      }","    }","","    return (0, _helpers.clustersFromSetGraph)(this.items, graph, this.params.minClusterSize);","  };","","  return BlockingClusterer;","}(_abstract2.default);","","/**"," * Shortcut function for the blocking clusterer."," *"," * @param {object} params - Clusterer parameters."," * @param {array}  items  - Items to cluster."," */","","","function blocking(params, items) {","  var clusterer = new BlockingClusterer(params, items);","","  return clusterer.run();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"37":1,"38":1,"40":1,"41":0,"43":0,"45":0,"47":0,"49":0,"51":0,"52":0,"55":1,"56":0,"59":0,"60":0,"62":0,"63":0,"66":0,"68":0,"70":0,"74":0,"75":0,"77":0,"78":0,"80":0,"81":0,"83":0,"84":0,"85":0,"87":0,"88":0,"94":0,"97":1,"108":1,"109":0,"111":0,"113":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/helpers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"handleSimilarityPolymorphisms","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":55}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":45},"end":{"line":30,"column":61}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":31},"end":{"line":32,"column":47}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":45},"end":{"line":37,"column":61}}},"5":{"name":"clustersFromArrayGraph","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":62}}},"6":{"name":"clustersFromSetGraph","line":102,"loc":{"start":{"line":102,"column":0},"end":{"line":102,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":70}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"5":{"start":{"line":22,"column":0},"end":{"line":41,"column":1}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":155}},"7":{"start":{"line":23,"column":63},"end":{"line":23,"column":155}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":210}},"9":{"start":{"line":25,"column":88},"end":{"line":25,"column":210}},"10":{"start":{"line":27,"column":2},"end":{"line":40,"column":3}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":34}},"12":{"start":{"line":30,"column":4},"end":{"line":34,"column":6}},"13":{"start":{"line":30,"column":25},"end":{"line":32,"column":6}},"14":{"start":{"line":31,"column":6},"end":{"line":31,"column":52}},"15":{"start":{"line":32,"column":11},"end":{"line":34,"column":6}},"16":{"start":{"line":33,"column":6},"end":{"line":33,"column":54}},"17":{"start":{"line":37,"column":4},"end":{"line":39,"column":49}},"18":{"start":{"line":37,"column":25},"end":{"line":39,"column":6}},"19":{"start":{"line":38,"column":6},"end":{"line":38,"column":36}},"20":{"start":{"line":39,"column":11},"end":{"line":39,"column":49}},"21":{"start":{"line":60,"column":0},"end":{"line":92,"column":1}},"22":{"start":{"line":61,"column":2},"end":{"line":62,"column":26}},"23":{"start":{"line":64,"column":2},"end":{"line":64,"column":23}},"24":{"start":{"line":66,"column":2},"end":{"line":89,"column":3}},"25":{"start":{"line":67,"column":4},"end":{"line":67,"column":24}},"26":{"start":{"line":69,"column":4},"end":{"line":69,"column":33}},"27":{"start":{"line":69,"column":24},"end":{"line":69,"column":33}},"28":{"start":{"line":71,"column":4},"end":{"line":71,"column":28}},"29":{"start":{"line":71,"column":19},"end":{"line":71,"column":28}},"30":{"start":{"line":73,"column":4},"end":{"line":73,"column":55}},"31":{"start":{"line":73,"column":46},"end":{"line":73,"column":55}},"32":{"start":{"line":75,"column":4},"end":{"line":75,"column":45}},"33":{"start":{"line":76,"column":4},"end":{"line":76,"column":22}},"34":{"start":{"line":77,"column":4},"end":{"line":77,"column":19}},"35":{"start":{"line":80,"column":4},"end":{"line":86,"column":5}},"36":{"start":{"line":81,"column":6},"end":{"line":82,"column":42}},"37":{"start":{"line":84,"column":6},"end":{"line":84,"column":32}},"38":{"start":{"line":85,"column":6},"end":{"line":85,"column":33}},"39":{"start":{"line":88,"column":4},"end":{"line":88,"column":27}},"40":{"start":{"line":91,"column":2},"end":{"line":91,"column":18}},"41":{"start":{"line":102,"column":0},"end":{"line":140,"column":1}},"42":{"start":{"line":103,"column":2},"end":{"line":104,"column":26}},"43":{"start":{"line":106,"column":2},"end":{"line":106,"column":23}},"44":{"start":{"line":108,"column":2},"end":{"line":137,"column":3}},"45":{"start":{"line":109,"column":4},"end":{"line":109,"column":24}},"46":{"start":{"line":111,"column":4},"end":{"line":111,"column":33}},"47":{"start":{"line":111,"column":24},"end":{"line":111,"column":33}},"48":{"start":{"line":113,"column":4},"end":{"line":113,"column":28}},"49":{"start":{"line":113,"column":19},"end":{"line":113,"column":28}},"50":{"start":{"line":115,"column":4},"end":{"line":115,"column":53}},"51":{"start":{"line":115,"column":44},"end":{"line":115,"column":53}},"52":{"start":{"line":117,"column":4},"end":{"line":117,"column":43}},"53":{"start":{"line":118,"column":4},"end":{"line":118,"column":22}},"54":{"start":{"line":119,"column":4},"end":{"line":119,"column":19}},"55":{"start":{"line":122,"column":4},"end":{"line":122,"column":37}},"56":{"start":{"line":124,"column":4},"end":{"line":125,"column":14}},"57":{"start":{"line":127,"column":4},"end":{"line":134,"column":5}},"58":{"start":{"line":128,"column":6},"end":{"line":129,"column":42}},"59":{"start":{"line":131,"column":6},"end":{"line":131,"column":28}},"60":{"start":{"line":132,"column":6},"end":{"line":132,"column":33}},"61":{"start":{"line":133,"column":6},"end":{"line":133,"column":10}},"62":{"start":{"line":136,"column":4},"end":{"line":136,"column":27}},"63":{"start":{"line":139,"column":2},"end":{"line":139,"column":18}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":24}},{"start":{"line":23,"column":28},"end":{"line":23,"column":61}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"4":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":43}},{"start":{"line":25,"column":47},"end":{"line":25,"column":86}}]},"5":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"6":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"7":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"8":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"10":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"11":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"12":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"13":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"14":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":34}},{"start":{"line":127,"column":39},"end":{"line":127,"column":49}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.handleSimilarityPolymorphisms = handleSimilarityPolymorphisms;","exports.clustersFromArrayGraph = clustersFromArrayGraph;","exports.clustersFromSetGraph = clustersFromSetGraph;","/**"," * Talisman clustering/record-linkage/helpers"," * ==========================================="," *"," * Common function used throughout the clustering/record-linkage namespace."," */","","/**"," * Function handling distance/similarity & radius parameter polymorphisms."," *"," * @param {RecordLinkageClusterer} target - Target instance."," * @param {object}                 params - Parameters."," */","function handleSimilarityPolymorphisms(target, params) {","  if ('radius' in params && typeof params.radius !== 'number') throw new Error('talisman/clustering/record-linkage: the given radius should be a number.');","","  if (typeof params.distance !== 'function' && typeof params.similarity !== 'function') throw new Error('talisman/clustering/record-linkage: the clusterer should be given a distance or a similarity function.');","","  if ('radius' in params) {","    target.radius = params.radius;","","    if (params.distance) target.similarity = function (a, b) {","      return params.distance(a, b) <= target.radius;","    };else target.similarity = function (a, b) {","      return params.similarity(a, b) >= target.radius;","    };","  } else {","","    if (params.distance) target.similarity = function (a, b) {","      return !params.distance(a, b);","    };else target.similarity = params.similarity;","  }","}","","// NOTE: it is possible to sort the clusters by size beforehand to make","// the largest clusters possible, or even to order in reverse","","// NOTE: since we'd want to sort by lenghts here, it's possible to use","// a linear time algorithm such as radix sort","","// NOTE: should iterate on graph rather than on items & delete keys from the","// graph rather than having a set register","","/**"," * Function returning a list of clusters from the given items & similarity"," * graph represented as an index of items to the array of neighbors."," *"," * @param  {array}  items          - List of items."," * @param  {object} graph          - Similarity graph."," * @param  {number} minClusterSize - Minimum number of items in a cluster."," */","function clustersFromArrayGraph(items, graph, minClusterSize) {","  var clusters = [],","      visited = new Set();","","  var cluster = void 0;","","  for (var i = 0, l = items.length; i < l; i++) {","    var item = items[i];","","    if (visited.has(i)) continue;","","    if (!graph[i]) continue;","","    if (graph[i].length + 1 < minClusterSize) continue;","","    cluster = new Array(graph[i].length + 1);","    cluster[0] = item;","    visited.add(i);","","    // Adding neighbors to the cluster","    for (var j = 0, m = graph[i].length; j < m; j++) {","      var neighborIndex = graph[i][j],","          neighbor = items[neighborIndex];","","      cluster[j + 1] = neighbor;","      visited.add(neighborIndex);","    }","","    clusters.push(cluster);","  }","","  return clusters;","}","","/**"," * Function returning a list of clusters from the given items & similarity"," * graph represented as an index of items to the set of neighbors."," *"," * @param  {array}  items          - List of items."," * @param  {object} graph          - Similarity graph."," * @param  {number} minClusterSize - Minimum number of items in a cluster."," */","function clustersFromSetGraph(items, graph, minClusterSize) {","  var clusters = [],","      visited = new Set();","","  var cluster = void 0;","","  for (var i = 0, l = items.length; i < l; i++) {","    var item = items[i];","","    if (visited.has(i)) continue;","","    if (!graph[i]) continue;","","    if (graph[i].size + 1 < minClusterSize) continue;","","    cluster = new Array(graph[i].size + 1);","    cluster[0] = item;","    visited.add(i);","","    // Adding neighbors to the cluster","    var iterator = graph[i].values();","","    var step = void 0,","        j = 1;","","    while ((step = iterator.next()) && !step.done) {","      var neighborIndex = step.value,","          neighbor = items[neighborIndex];","","      cluster[j] = neighbor;","      visited.add(neighborIndex);","      j++;","    }","","    clusters.push(cluster);","  }","","  return clusters;","}"],"l":{"3":1,"6":1,"7":1,"8":1,"22":1,"23":0,"25":0,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"37":0,"38":0,"39":0,"60":1,"61":0,"64":0,"66":0,"67":0,"69":0,"71":0,"73":0,"75":0,"76":0,"77":0,"80":0,"81":0,"84":0,"85":0,"88":0,"91":0,"102":1,"103":0,"106":0,"108":0,"109":0,"111":0,"113":0,"115":0,"117":0,"118":0,"119":0,"122":0,"124":0,"127":0,"128":0,"131":0,"132":0,"133":0,"136":0,"139":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/canopy.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/canopy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":1,"56":0,"57":0,"58":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,1],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"2":{"name":"_classCallCheck","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}}},"3":{"name":"_possibleConstructorReturn","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}}},"4":{"name":"_inherits","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":41}}},"5":{"name":"(anonymous_5)","line":32,"loc":{"start":{"line":32,"column":48},"end":{"line":32,"column":81}}},"6":{"name":"CanopyClusterer","line":35,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":42}}},"7":{"name":"run","line":55,"loc":{"start":{"line":55,"column":34},"end":{"line":55,"column":49}}},"8":{"name":"canopy","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":95}},"7":{"start":{"line":13,"column":39},"end":{"line":13,"column":93}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":153}},"9":{"start":{"line":15,"column":50},"end":{"line":15,"column":151}},"10":{"start":{"line":15,"column":92},"end":{"line":15,"column":149}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":240}},"12":{"start":{"line":17,"column":50},"end":{"line":17,"column":151}},"13":{"start":{"line":17,"column":63},"end":{"line":17,"column":149}},"14":{"start":{"line":17,"column":152},"end":{"line":17,"column":238}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":494}},"16":{"start":{"line":19,"column":43},"end":{"line":19,"column":208}},"17":{"start":{"line":19,"column":106},"end":{"line":19,"column":206}},"18":{"start":{"line":19,"column":209},"end":{"line":19,"column":373}},"19":{"start":{"line":19,"column":374},"end":{"line":19,"column":492}},"20":{"start":{"line":19,"column":390},"end":{"line":19,"column":492}},"21":{"start":{"line":32,"column":0},"end":{"line":85,"column":22}},"22":{"start":{"line":33,"column":2},"end":{"line":33,"column":52}},"23":{"start":{"line":35,"column":2},"end":{"line":53,"column":3}},"24":{"start":{"line":36,"column":4},"end":{"line":36,"column":43}},"25":{"start":{"line":39,"column":4},"end":{"line":39,"column":98}},"26":{"start":{"line":41,"column":4},"end":{"line":41,"column":147}},"27":{"start":{"line":41,"column":47},"end":{"line":41,"column":147}},"28":{"start":{"line":44,"column":4},"end":{"line":44,"column":146}},"29":{"start":{"line":44,"column":42},"end":{"line":44,"column":146}},"30":{"start":{"line":45,"column":4},"end":{"line":45,"column":146}},"31":{"start":{"line":45,"column":42},"end":{"line":45,"column":146}},"32":{"start":{"line":47,"column":4},"end":{"line":47,"column":153}},"33":{"start":{"line":47,"column":37},"end":{"line":47,"column":153}},"34":{"start":{"line":49,"column":4},"end":{"line":49,"column":37}},"35":{"start":{"line":50,"column":4},"end":{"line":50,"column":38}},"36":{"start":{"line":51,"column":4},"end":{"line":51,"column":38}},"37":{"start":{"line":52,"column":4},"end":{"line":52,"column":17}},"38":{"start":{"line":55,"column":2},"end":{"line":82,"column":4}},"39":{"start":{"line":56,"column":4},"end":{"line":57,"column":22}},"40":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"41":{"start":{"line":60,"column":6},"end":{"line":60,"column":27}},"42":{"start":{"line":61,"column":5},"end":{"line":79,"column":5}},"43":{"start":{"line":62,"column":6},"end":{"line":62,"column":28}},"44":{"start":{"line":65,"column":6},"end":{"line":65,"column":27}},"45":{"start":{"line":66,"column":6},"end":{"line":66,"column":24}},"46":{"start":{"line":69,"column":6},"end":{"line":76,"column":7}},"47":{"start":{"line":70,"column":8},"end":{"line":71,"column":36}},"48":{"start":{"line":73,"column":8},"end":{"line":73,"column":52}},"49":{"start":{"line":73,"column":36},"end":{"line":73,"column":52}},"50":{"start":{"line":75,"column":8},"end":{"line":75,"column":58}},"51":{"start":{"line":75,"column":36},"end":{"line":75,"column":58}},"52":{"start":{"line":78,"column":6},"end":{"line":78,"column":29}},"53":{"start":{"line":81,"column":4},"end":{"line":81,"column":20}},"54":{"start":{"line":84,"column":2},"end":{"line":84,"column":25}},"55":{"start":{"line":95,"column":0},"end":{"line":99,"column":1}},"56":{"start":{"line":96,"column":2},"end":{"line":96,"column":53}},"57":{"start":{"line":98,"column":2},"end":{"line":98,"column":25}},"58":{"start":{"line":100,"column":0},"end":{"line":100,"column":36}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":70},"end":{"line":13,"column":73}},{"start":{"line":13,"column":76},"end":{"line":13,"column":92}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":49}},{"start":{"line":13,"column":53},"end":{"line":13,"column":67}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":50},"end":{"line":15,"column":50}},{"start":{"line":15,"column":50},"end":{"line":15,"column":50}}]},"4":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":50},"end":{"line":17,"column":50}},{"start":{"line":17,"column":50},"end":{"line":17,"column":50}}]},"5":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":226},"end":{"line":17,"column":230}},{"start":{"line":17,"column":233},"end":{"line":17,"column":237}}]},"6":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":159},"end":{"line":17,"column":163}},{"start":{"line":17,"column":168},"end":{"line":17,"column":192}},{"start":{"line":17,"column":196},"end":{"line":17,"column":222}}]},"7":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":43},"end":{"line":19,"column":43}},{"start":{"line":19,"column":43},"end":{"line":19,"column":43}}]},"8":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":47},"end":{"line":19,"column":79}},{"start":{"line":19,"column":83},"end":{"line":19,"column":102}}]},"9":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":244},"end":{"line":19,"column":254}},{"start":{"line":19,"column":258},"end":{"line":19,"column":278}}]},"10":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":374},"end":{"line":19,"column":374}},{"start":{"line":19,"column":374},"end":{"line":19,"column":374}}]},"11":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":414},"end":{"line":19,"column":457}},{"start":{"line":19,"column":460},"end":{"line":19,"column":491}}]},"12":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"13":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"14":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"15":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"16":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":8}},{"start":{"line":73,"column":8},"end":{"line":73,"column":8}}]},"17":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.CanopyClusterer = undefined;","exports.default = canopy;","","var _abstract = require('./abstract');","","var _abstract2 = _interopRequireDefault(_abstract);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }alisman clustering/record-linkage/canopyanopy clustering implementationanopy Clusterer class."," *"," * @constructor"," */","var CanopyClusterer = exports.CanopyClusterer = function (_RecordLinkageCluster) {","  _inherits(CanopyClusterer, _RecordLinkageCluster);","","  function CanopyClusterer(params, items) {","    _classCallCheck(this, CanopyClusterer);","","    // Validating the distance function","    var _this = _possibleConstructorReturn(this, _RecordLinkageCluster.call(this, params, items));","","    if (typeof params.distance !== 'function') throw new Error('talisman/clustering/record-linkage/canopy: the given distance is not a function.');","","    // Validating the thresholds","    if (typeof params.loose !== 'number') throw new Error('talisman/clustering/record-linkage/canopy: the given loose distance is not a number.');","    if (typeof params.tight !== 'number') throw new Error('talisman/clustering/record-linkage/canopy: the given tight distance is not a number.');","","    if (params.loose < params.tight) throw new Error('talisman/clustering/record-linkage/canopy: loose distance should be greater than tight distance.');","","    _this.distance = params.distance;","    _this.params.loose = params.loose;","    _this.params.tight = params.tight;","    return _this;","  }","","  CanopyClusterer.prototype.run = function run() {","    var itemsIndex = {},","        clusters = [];","","    for (var i = 0, l = this.items.length; i < l; i++) {","      itemsIndex[i] = true;","    }for (var k in itemsIndex) {","      var a = this.items[k];","","      // Starting a new canopy","      delete itemsIndex[k];","      var cluster = [a];","","      // Comparing to other elements in the set","      for (var k2 in itemsIndex) {","        var b = this.items[k2],","            d = this.distance(a, b);","","        if (d <= this.params.loose) cluster.push(b);","","        if (d <= this.params.tight) delete itemsIndex[k2];","      }","","      clusters.push(cluster);","    }","","    return clusters;","  };","","  return CanopyClusterer;","}(_abstract2.default);","","/**"," * Shortcut function for the canopy clusterer."," *"," * @param {object} params - Clusterer parameters."," * @param {array}  items  - Items to cluster."," */","","","function canopy(params, items) {","  var clusterer = new CanopyClusterer(params, items);","","  return clusterer.run();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"32":1,"33":1,"35":1,"36":0,"39":0,"41":0,"44":0,"45":0,"47":0,"49":0,"50":0,"51":0,"52":0,"55":1,"56":0,"59":0,"60":0,"61":0,"62":0,"65":0,"66":0,"69":0,"70":0,"73":0,"75":0,"78":0,"81":0,"84":1,"95":1,"96":0,"98":0,"100":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/key-collision.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/key-collision.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":1,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":1,"74":1,"75":0,"76":0,"77":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,1],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"_classCallCheck","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}}},"3":{"name":"_possibleConstructorReturn","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}}},"4":{"name":"_inherits","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}}},"5":{"name":"(anonymous_5)","line":36,"loc":{"start":{"line":36,"column":60},"end":{"line":36,"column":93}}},"6":{"name":"KeyCollisionClusterer","line":39,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":48}}},"7":{"name":"runWithMerge","line":52,"loc":{"start":{"line":52,"column":49},"end":{"line":52,"column":73}}},"8":{"name":"runWithoutMerge","line":92,"loc":{"start":{"line":92,"column":52},"end":{"line":92,"column":79}}},"9":{"name":"run","line":121,"loc":{"start":{"line":121,"column":40},"end":{"line":121,"column":55}}},"10":{"name":"keyCollision","line":136,"loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"8":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":153}},"10":{"start":{"line":17,"column":50},"end":{"line":17,"column":151}},"11":{"start":{"line":17,"column":92},"end":{"line":17,"column":149}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":240}},"13":{"start":{"line":19,"column":50},"end":{"line":19,"column":151}},"14":{"start":{"line":19,"column":63},"end":{"line":19,"column":149}},"15":{"start":{"line":19,"column":152},"end":{"line":19,"column":238}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":494}},"17":{"start":{"line":21,"column":43},"end":{"line":21,"column":208}},"18":{"start":{"line":21,"column":106},"end":{"line":21,"column":206}},"19":{"start":{"line":21,"column":209},"end":{"line":21,"column":373}},"20":{"start":{"line":21,"column":374},"end":{"line":21,"column":492}},"21":{"start":{"line":21,"column":390},"end":{"line":21,"column":492}},"22":{"start":{"line":36,"column":0},"end":{"line":126,"column":22}},"23":{"start":{"line":37,"column":2},"end":{"line":37,"column":58}},"24":{"start":{"line":39,"column":2},"end":{"line":50,"column":3}},"25":{"start":{"line":40,"column":4},"end":{"line":40,"column":49}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":98}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":44}},"28":{"start":{"line":46,"column":4},"end":{"line":46,"column":40}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":147}},"30":{"start":{"line":48,"column":43},"end":{"line":48,"column":147}},"31":{"start":{"line":49,"column":4},"end":{"line":49,"column":17}},"32":{"start":{"line":52,"column":2},"end":{"line":90,"column":4}},"33":{"start":{"line":53,"column":4},"end":{"line":53,"column":34}},"34":{"start":{"line":56,"column":4},"end":{"line":69,"column":5}},"35":{"start":{"line":57,"column":6},"end":{"line":58,"column":48}},"36":{"start":{"line":60,"column":6},"end":{"line":68,"column":7}},"37":{"start":{"line":61,"column":8},"end":{"line":61,"column":26}},"38":{"start":{"line":64,"column":8},"end":{"line":64,"column":27}},"39":{"start":{"line":64,"column":18},"end":{"line":64,"column":27}},"40":{"start":{"line":66,"column":8},"end":{"line":66,"column":44}},"41":{"start":{"line":66,"column":23},"end":{"line":66,"column":44}},"42":{"start":{"line":67,"column":8},"end":{"line":67,"column":24}},"43":{"start":{"line":73,"column":4},"end":{"line":73,"column":36}},"44":{"start":{"line":75,"column":4},"end":{"line":87,"column":5}},"45":{"start":{"line":76,"column":6},"end":{"line":76,"column":41}},"46":{"start":{"line":78,"column":6},"end":{"line":86,"column":7}},"47":{"start":{"line":79,"column":8},"end":{"line":85,"column":9}},"48":{"start":{"line":80,"column":10},"end":{"line":80,"column":61}},"49":{"start":{"line":81,"column":10},"end":{"line":81,"column":44}},"50":{"start":{"line":83,"column":10},"end":{"line":83,"column":61}},"51":{"start":{"line":84,"column":10},"end":{"line":84,"column":44}},"52":{"start":{"line":89,"column":4},"end":{"line":89,"column":93}},"53":{"start":{"line":92,"column":2},"end":{"line":119,"column":4}},"54":{"start":{"line":93,"column":4},"end":{"line":93,"column":34}},"55":{"start":{"line":96,"column":4},"end":{"line":109,"column":5}},"56":{"start":{"line":97,"column":6},"end":{"line":98,"column":48}},"57":{"start":{"line":100,"column":6},"end":{"line":108,"column":7}},"58":{"start":{"line":101,"column":8},"end":{"line":101,"column":26}},"59":{"start":{"line":104,"column":8},"end":{"line":104,"column":27}},"60":{"start":{"line":104,"column":18},"end":{"line":104,"column":27}},"61":{"start":{"line":106,"column":8},"end":{"line":106,"column":44}},"62":{"start":{"line":106,"column":23},"end":{"line":106,"column":44}},"63":{"start":{"line":107,"column":8},"end":{"line":107,"column":27}},"64":{"start":{"line":112,"column":4},"end":{"line":112,"column":22}},"65":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"66":{"start":{"line":115,"column":6},"end":{"line":115,"column":95}},"67":{"start":{"line":115,"column":57},"end":{"line":115,"column":95}},"68":{"start":{"line":118,"column":4},"end":{"line":118,"column":20}},"69":{"start":{"line":121,"column":2},"end":{"line":123,"column":4}},"70":{"start":{"line":122,"column":4},"end":{"line":122,"column":82}},"71":{"start":{"line":122,"column":20},"end":{"line":122,"column":47}},"72":{"start":{"line":122,"column":52},"end":{"line":122,"column":82}},"73":{"start":{"line":125,"column":2},"end":{"line":125,"column":31}},"74":{"start":{"line":136,"column":0},"end":{"line":140,"column":1}},"75":{"start":{"line":137,"column":2},"end":{"line":137,"column":59}},"76":{"start":{"line":139,"column":2},"end":{"line":139,"column":25}},"77":{"start":{"line":141,"column":0},"end":{"line":141,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":50},"end":{"line":17,"column":50}},{"start":{"line":17,"column":50},"end":{"line":17,"column":50}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":50},"end":{"line":19,"column":50}},{"start":{"line":19,"column":50},"end":{"line":19,"column":50}}]},"5":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":226},"end":{"line":19,"column":230}},{"start":{"line":19,"column":233},"end":{"line":19,"column":237}}]},"6":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":159},"end":{"line":19,"column":163}},{"start":{"line":19,"column":168},"end":{"line":19,"column":192}},{"start":{"line":19,"column":196},"end":{"line":19,"column":222}}]},"7":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":43},"end":{"line":21,"column":43}},{"start":{"line":21,"column":43},"end":{"line":21,"column":43}}]},"8":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":47},"end":{"line":21,"column":79}},{"start":{"line":21,"column":83},"end":{"line":21,"column":102}}]},"9":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":244},"end":{"line":21,"column":254}},{"start":{"line":21,"column":258},"end":{"line":21,"column":278}}]},"10":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":374},"end":{"line":21,"column":374}},{"start":{"line":21,"column":374},"end":{"line":21,"column":374}}]},"11":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":414},"end":{"line":21,"column":457}},{"start":{"line":21,"column":460},"end":{"line":21,"column":491}}]},"12":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":18},"end":{"line":45,"column":29}},{"start":{"line":45,"column":33},"end":{"line":45,"column":43}}]},"13":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":18},"end":{"line":46,"column":30}},{"start":{"line":46,"column":34},"end":{"line":46,"column":39}}]},"14":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"15":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"16":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]},"17":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":30},"end":{"line":80,"column":47}},{"start":{"line":80,"column":51},"end":{"line":80,"column":60}}]},"18":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":30},"end":{"line":83,"column":47}},{"start":{"line":83,"column":51},"end":{"line":83,"column":60}}]},"19":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"20":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":8}},{"start":{"line":106,"column":8},"end":{"line":106,"column":8}}]},"21":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":6}},{"start":{"line":115,"column":6},"end":{"line":115,"column":6}}]},"22":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.KeyCollisionClusterer = undefined;","exports.default = keyCollision;","","var _abstract = require('./abstract');","","var _abstract2 = _interopRequireDefault(_abstract);","","var _helpers = require('./helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }alisman clustering/record-linkage/key-collisionimple clustering algorithm running in linear time just applying akeying function to each data point and grouping them when the resultingkeys collideey Collision Clusterer class."," *"," * @constructor"," */","var KeyCollisionClusterer = exports.KeyCollisionClusterer = function (_RecordLinkageCluster) {","  _inherits(KeyCollisionClusterer, _RecordLinkageCluster);","","  function KeyCollisionClusterer(params, items) {","    _classCallCheck(this, KeyCollisionClusterer);","","    // Validating keyer","    var _this = _possibleConstructorReturn(this, _RecordLinkageCluster.call(this, params, items));","","    _this.keyer = params.keys || params.key;","    _this.merge = params.merge || false;","","    if (typeof _this.keyer !== 'function') throw new Error('talisman/clustering/record-linkage/key-collision: the given keyer is not a function.');","    return _this;","  }","","  KeyCollisionClusterer.prototype.runWithMerge = function runWithMerge() {","    var map = Object.create(null);","","    // Computing buckets map","    for (var i = 0, l = this.items.length; i < l; i++) {","      var item = this.items[i],","          keys = [].concat(this.keyer(item, i));","","      for (var j = 0, m = keys.length; j < m; j++) {","        var key = keys[j];","","        // If the key is falsy, we continue","        if (!key) continue;","","        if (!map[key]) map[key] = new Set();","        map[key].add(i);","      }","    }","","    // Computing graph","    // TODO: I sense that we can do better & faster","    var graph = Object.create(null);","","    for (var _key in map) {","      var bucket = Array.from(map[_key]);","","      for (var _i = 0, _l = bucket.length; _i < _l; _i++) {","        for (var _j = _i + 1; _j < _l; _j++) {","          graph[bucket[_i]] = graph[bucket[_i]] || new Set();","          graph[bucket[_i]].add(bucket[_j]);","","          graph[bucket[_j]] = graph[bucket[_j]] || new Set();","          graph[bucket[_j]].add(bucket[_i]);","        }","      }","    }","","    return (0, _helpers.clustersFromSetGraph)(this.items, graph, this.params.minClusterSize);","  };","","  KeyCollisionClusterer.prototype.runWithoutMerge = function runWithoutMerge() {","    var map = Object.create(null);","","    // Computing buckets map","    for (var i = 0, l = this.items.length; i < l; i++) {","      var item = this.items[i],","          keys = [].concat(this.keyer(item, i));","","      for (var j = 0, m = keys.length; j < m; j++) {","        var key = keys[j];","","        // If the key is falsy, we continue","        if (!key) continue;","","        if (!map[key]) map[key] = new Set();","        map[key].add(item);","      }","    }","","    // Retrieving clusters","    var clusters = [];","","    for (var _key2 in map) {","      if (map[_key2].size >= this.params.minClusterSize) clusters.push(Array.from(map[_key2]));","    }","","    return clusters;","  };","","  KeyCollisionClusterer.prototype.run = function run() {","    if (this.merge) return this.runWithMerge();else return this.runWithoutMerge();","  };","","  return KeyCollisionClusterer;","}(_abstract2.default);","","/**"," * Shortcut function for the key collision clusterer."," *"," * @param {object} params - Clusterer parameters."," * @param {array}  items  - Items to cluster."," */","","","function keyCollision(params, items) {","  var clusterer = new KeyCollisionClusterer(params, items);","","  return clusterer.run();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"36":1,"37":1,"39":1,"40":0,"43":0,"45":0,"46":0,"48":0,"49":0,"52":1,"53":0,"56":0,"57":0,"60":0,"61":0,"64":0,"66":0,"67":0,"73":0,"75":0,"76":0,"78":0,"79":0,"80":0,"81":0,"83":0,"84":0,"89":0,"92":1,"93":0,"96":0,"97":0,"100":0,"101":0,"104":0,"106":0,"107":0,"112":0,"114":0,"115":0,"118":0,"121":1,"122":0,"125":1,"136":1,"137":0,"139":0,"141":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/leader.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/leader.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":1,"49":0,"50":0,"51":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,1],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"2":{"name":"_classCallCheck","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":48}}},"3":{"name":"_possibleConstructorReturn","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}}},"4":{"name":"_inherits","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":41}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":48},"end":{"line":37,"column":81}}},"6":{"name":"LeaderClusterer","line":40,"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":42}}},"7":{"name":"run","line":56,"loc":{"start":{"line":56,"column":34},"end":{"line":56,"column":49}}},"8":{"name":"leader","line":96,"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":95}},"7":{"start":{"line":13,"column":39},"end":{"line":13,"column":93}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":153}},"9":{"start":{"line":15,"column":50},"end":{"line":15,"column":151}},"10":{"start":{"line":15,"column":92},"end":{"line":15,"column":149}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":240}},"12":{"start":{"line":17,"column":50},"end":{"line":17,"column":151}},"13":{"start":{"line":17,"column":63},"end":{"line":17,"column":149}},"14":{"start":{"line":17,"column":152},"end":{"line":17,"column":238}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":494}},"16":{"start":{"line":19,"column":43},"end":{"line":19,"column":208}},"17":{"start":{"line":19,"column":106},"end":{"line":19,"column":206}},"18":{"start":{"line":19,"column":209},"end":{"line":19,"column":373}},"19":{"start":{"line":19,"column":374},"end":{"line":19,"column":492}},"20":{"start":{"line":19,"column":390},"end":{"line":19,"column":492}},"21":{"start":{"line":37,"column":0},"end":{"line":86,"column":22}},"22":{"start":{"line":38,"column":2},"end":{"line":38,"column":52}},"23":{"start":{"line":40,"column":2},"end":{"line":54,"column":3}},"24":{"start":{"line":41,"column":4},"end":{"line":41,"column":43}},"25":{"start":{"line":44,"column":4},"end":{"line":44,"column":98}},"26":{"start":{"line":46,"column":4},"end":{"line":46,"column":147}},"27":{"start":{"line":46,"column":47},"end":{"line":46,"column":147}},"28":{"start":{"line":49,"column":4},"end":{"line":49,"column":145}},"29":{"start":{"line":49,"column":46},"end":{"line":49,"column":145}},"30":{"start":{"line":51,"column":4},"end":{"line":51,"column":37}},"31":{"start":{"line":52,"column":4},"end":{"line":52,"column":46}},"32":{"start":{"line":53,"column":4},"end":{"line":53,"column":17}},"33":{"start":{"line":56,"column":2},"end":{"line":83,"column":4}},"34":{"start":{"line":57,"column":4},"end":{"line":57,"column":22}},"35":{"start":{"line":59,"column":4},"end":{"line":80,"column":5}},"36":{"start":{"line":60,"column":6},"end":{"line":60,"column":31}},"37":{"start":{"line":62,"column":6},"end":{"line":63,"column":29}},"38":{"start":{"line":65,"column":6},"end":{"line":73,"column":7}},"39":{"start":{"line":66,"column":8},"end":{"line":67,"column":58}},"40":{"start":{"line":69,"column":8},"end":{"line":72,"column":9}},"41":{"start":{"line":70,"column":10},"end":{"line":70,"column":29}},"42":{"start":{"line":71,"column":10},"end":{"line":71,"column":34}},"43":{"start":{"line":75,"column":6},"end":{"line":79,"column":7}},"44":{"start":{"line":76,"column":8},"end":{"line":76,"column":49}},"45":{"start":{"line":78,"column":8},"end":{"line":78,"column":30}},"46":{"start":{"line":82,"column":4},"end":{"line":82,"column":20}},"47":{"start":{"line":85,"column":2},"end":{"line":85,"column":25}},"48":{"start":{"line":96,"column":0},"end":{"line":100,"column":1}},"49":{"start":{"line":97,"column":2},"end":{"line":97,"column":53}},"50":{"start":{"line":99,"column":2},"end":{"line":99,"column":25}},"51":{"start":{"line":101,"column":0},"end":{"line":101,"column":36}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":70},"end":{"line":13,"column":73}},{"start":{"line":13,"column":76},"end":{"line":13,"column":92}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":49}},{"start":{"line":13,"column":53},"end":{"line":13,"column":67}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":50},"end":{"line":15,"column":50}},{"start":{"line":15,"column":50},"end":{"line":15,"column":50}}]},"4":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":50},"end":{"line":17,"column":50}},{"start":{"line":17,"column":50},"end":{"line":17,"column":50}}]},"5":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":226},"end":{"line":17,"column":230}},{"start":{"line":17,"column":233},"end":{"line":17,"column":237}}]},"6":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":159},"end":{"line":17,"column":163}},{"start":{"line":17,"column":168},"end":{"line":17,"column":192}},{"start":{"line":17,"column":196},"end":{"line":17,"column":222}}]},"7":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":43},"end":{"line":19,"column":43}},{"start":{"line":19,"column":43},"end":{"line":19,"column":43}}]},"8":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":47},"end":{"line":19,"column":79}},{"start":{"line":19,"column":83},"end":{"line":19,"column":102}}]},"9":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":244},"end":{"line":19,"column":254}},{"start":{"line":19,"column":258},"end":{"line":19,"column":278}}]},"10":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":374},"end":{"line":19,"column":374}},{"start":{"line":19,"column":374},"end":{"line":19,"column":374}}]},"11":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":414},"end":{"line":19,"column":457}},{"start":{"line":19,"column":460},"end":{"line":19,"column":491}}]},"12":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"13":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"14":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"15":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.LeaderClusterer = undefined;","exports.default = leader;","","var _abstract = require('./abstract');","","var _abstract2 = _interopRequireDefault(_abstract);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }alisman clustering/record-linkage/leaderhe Leader clustering algorithm is a quite simple algorithm used to partition","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * arbitrary data and running in O(ln) time complexity, l being the number ofclusterst's also important to note that the resulting partition might change with","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the order of given itemseader Clusterer class."," *"," * @constructor"," */","var LeaderClusterer = exports.LeaderClusterer = function (_RecordLinkageCluster) {","  _inherits(LeaderClusterer, _RecordLinkageCluster);","","  function LeaderClusterer(params, items) {","    _classCallCheck(this, LeaderClusterer);","","    // Validating the distance function","    var _this = _possibleConstructorReturn(this, _RecordLinkageCluster.call(this, params, items));","","    if (typeof params.distance !== 'function') throw new Error('talisman/clustering/record-linkage/leader: the given distance is not a function.');","","    // Validating the thresholds","    if (typeof params.threshold !== 'number') throw new Error('talisman/clustering/record-linkage/leader: the given threshold is not a number.');","","    _this.distance = params.distance;","    _this.params.threshold = params.threshold;","    return _this;","  }","","  LeaderClusterer.prototype.run = function run() {","    var clusters = [];","","    for (var i = 0, l = this.items.length; i < l; i++) {","      var item = this.items[i];","","      var closestClusterIndex = null,","          closest = Infinity;","","      for (var j = 0, m = clusters.length; j < m; j++) {","        var clusterLeader = clusters[j][0],","            distance = this.distance(clusterLeader, item);","","        if (distance < closest) {","          closest = distance;","          closestClusterIndex = j;","        }","      }","","      if (closest <= this.params.threshold) {","        clusters[closestClusterIndex].push(item);","      } else {","        clusters.push([item]);","      }","    }","","    return clusters;","  };","","  return LeaderClusterer;","}(_abstract2.default);","","/**"," * Shortcut function for the leader clusterer."," *"," * @param {object} params - Clusterer parameters."," * @param {array}  items  - Items to cluster."," */","","","function leader(params, items) {","  var clusterer = new LeaderClusterer(params, items);","","  return clusterer.run();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"37":1,"38":1,"40":1,"41":0,"44":0,"46":0,"49":0,"51":0,"52":0,"53":0,"56":1,"57":0,"59":0,"60":0,"62":0,"65":0,"66":0,"69":0,"70":0,"71":0,"75":0,"76":0,"78":0,"82":0,"85":1,"96":1,"97":0,"99":0,"101":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/naive.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/naive.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":1,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1,"43":0,"44":0,"45":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,1],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"_classCallCheck","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}}},"3":{"name":"_possibleConstructorReturn","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}}},"4":{"name":"_inherits","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":46},"end":{"line":38,"column":79}}},"6":{"name":"NaiveClusterer","line":41,"loc":{"start":{"line":41,"column":2},"end":{"line":41,"column":41}}},"7":{"name":"run","line":50,"loc":{"start":{"line":50,"column":33},"end":{"line":50,"column":48}}},"8":{"name":"naive","line":86,"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"8":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":153}},"10":{"start":{"line":17,"column":50},"end":{"line":17,"column":151}},"11":{"start":{"line":17,"column":92},"end":{"line":17,"column":149}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":240}},"13":{"start":{"line":19,"column":50},"end":{"line":19,"column":151}},"14":{"start":{"line":19,"column":63},"end":{"line":19,"column":149}},"15":{"start":{"line":19,"column":152},"end":{"line":19,"column":238}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":494}},"17":{"start":{"line":21,"column":43},"end":{"line":21,"column":208}},"18":{"start":{"line":21,"column":106},"end":{"line":21,"column":206}},"19":{"start":{"line":21,"column":209},"end":{"line":21,"column":373}},"20":{"start":{"line":21,"column":374},"end":{"line":21,"column":492}},"21":{"start":{"line":21,"column":390},"end":{"line":21,"column":492}},"22":{"start":{"line":38,"column":0},"end":{"line":76,"column":22}},"23":{"start":{"line":39,"column":2},"end":{"line":39,"column":51}},"24":{"start":{"line":41,"column":2},"end":{"line":48,"column":3}},"25":{"start":{"line":42,"column":4},"end":{"line":42,"column":42}},"26":{"start":{"line":44,"column":4},"end":{"line":44,"column":98}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":63}},"28":{"start":{"line":47,"column":4},"end":{"line":47,"column":17}},"29":{"start":{"line":50,"column":2},"end":{"line":73,"column":4}},"30":{"start":{"line":51,"column":4},"end":{"line":51,"column":19}},"31":{"start":{"line":54,"column":4},"end":{"line":69,"column":5}},"32":{"start":{"line":55,"column":6},"end":{"line":55,"column":28}},"33":{"start":{"line":57,"column":6},"end":{"line":68,"column":7}},"34":{"start":{"line":58,"column":8},"end":{"line":58,"column":30}},"35":{"start":{"line":60,"column":8},"end":{"line":67,"column":9}},"36":{"start":{"line":61,"column":10},"end":{"line":61,"column":36}},"37":{"start":{"line":62,"column":10},"end":{"line":62,"column":27}},"38":{"start":{"line":65,"column":10},"end":{"line":65,"column":36}},"39":{"start":{"line":66,"column":10},"end":{"line":66,"column":27}},"40":{"start":{"line":72,"column":4},"end":{"line":72,"column":95}},"41":{"start":{"line":75,"column":2},"end":{"line":75,"column":24}},"42":{"start":{"line":86,"column":0},"end":{"line":90,"column":1}},"43":{"start":{"line":87,"column":2},"end":{"line":87,"column":52}},"44":{"start":{"line":89,"column":2},"end":{"line":89,"column":25}},"45":{"start":{"line":91,"column":0},"end":{"line":91,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":50},"end":{"line":17,"column":50}},{"start":{"line":17,"column":50},"end":{"line":17,"column":50}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":50},"end":{"line":19,"column":50}},{"start":{"line":19,"column":50},"end":{"line":19,"column":50}}]},"5":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":226},"end":{"line":19,"column":230}},{"start":{"line":19,"column":233},"end":{"line":19,"column":237}}]},"6":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":159},"end":{"line":19,"column":163}},{"start":{"line":19,"column":168},"end":{"line":19,"column":192}},{"start":{"line":19,"column":196},"end":{"line":19,"column":222}}]},"7":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":43},"end":{"line":21,"column":43}},{"start":{"line":21,"column":43},"end":{"line":21,"column":43}}]},"8":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":47},"end":{"line":21,"column":79}},{"start":{"line":21,"column":83},"end":{"line":21,"column":102}}]},"9":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":244},"end":{"line":21,"column":254}},{"start":{"line":21,"column":258},"end":{"line":21,"column":278}}]},"10":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":374},"end":{"line":21,"column":374}},{"start":{"line":21,"column":374},"end":{"line":21,"column":374}}]},"11":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":414},"end":{"line":21,"column":457}},{"start":{"line":21,"column":460},"end":{"line":21,"column":491}}]},"12":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"13":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":21},"end":{"line":61,"column":29}},{"start":{"line":61,"column":33},"end":{"line":61,"column":35}}]},"14":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":21},"end":{"line":65,"column":29}},{"start":{"line":65,"column":33},"end":{"line":65,"column":35}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.NaiveClusterer = undefined;","exports.default = naive;","","var _abstract = require('./abstract');","","var _abstract2 = _interopRequireDefault(_abstract);","","var _helpers = require('./helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }alisman clustering/record-linkage/naiveaive clustering working by performing the n(n-1)/2 distance calculationsbetween all relevant pairs. Time complexity of such a clustering is thereforen^2), which is quite badote that the produced clusters are fuzzy.","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */","","","/**"," * Naive Clusterer class."," *"," * @constructor"," */","var NaiveClusterer = exports.NaiveClusterer = function (_RecordLinkageCluster) {","  _inherits(NaiveClusterer, _RecordLinkageCluster);","","  function NaiveClusterer(params, items) {","    _classCallCheck(this, NaiveClusterer);","","    var _this = _possibleConstructorReturn(this, _RecordLinkageCluster.call(this, params, items));","","    (0, _helpers.handleSimilarityPolymorphisms)(_this, params);","    return _this;","  }","","  NaiveClusterer.prototype.run = function run() {","    var graph = {};","","    // Iterating over the needed pairs","    for (var i = 0, l = this.items.length; i < l; i++) {","      var a = this.items[i];","","      for (var j = i + 1; j < l; j++) {","        var b = this.items[j];","","        if (this.similarity(a, b)) {","          graph[i] = graph[i] || [];","          graph[i].push(j);","","          // NOTE: undirected link seems to be mandatory for it to work","          graph[j] = graph[j] || [];","          graph[j].push(i);","        }","      }","    }","","    // Computing clusters","    return (0, _helpers.clustersFromArrayGraph)(this.items, graph, this.params.minClusterSize);","  };","","  return NaiveClusterer;","}(_abstract2.default);","","/**"," * Shortcut function for the naive clusterer."," *"," * @param {object} params - Clusterer parameters."," * @param {array}  items  - Items to cluster."," */","","","function naive(params, items) {","  var clusterer = new NaiveClusterer(params, items);","","  return clusterer.run();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"38":1,"39":1,"41":1,"42":0,"44":0,"46":0,"47":0,"50":1,"51":0,"54":0,"55":0,"57":0,"58":0,"60":0,"61":0,"62":0,"65":0,"66":0,"72":0,"75":1,"86":1,"87":0,"89":0,"91":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/nn-descent.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/nn-descent.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":1,"146":0,"147":0,"148":1,"149":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,1],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"_classCallCheck","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}}},"3":{"name":"_possibleConstructorReturn","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}}},"4":{"name":"_inherits","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":41}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":54},"end":{"line":66,"column":87}}},"6":{"name":"NNDescentClusterer","line":69,"loc":{"start":{"line":69,"column":2},"end":{"line":69,"column":45}}},"7":{"name":"sampleItems","line":114,"loc":{"start":{"line":114,"column":45},"end":{"line":114,"column":75}}},"8":{"name":"(anonymous_8)","line":128,"loc":{"start":{"line":128,"column":33},"end":{"line":128,"column":49}}},"9":{"name":"sample","line":137,"loc":{"start":{"line":137,"column":40},"end":{"line":137,"column":66}}},"10":{"name":"pickFalses","line":145,"loc":{"start":{"line":145,"column":44},"end":{"line":145,"column":74}}},"11":{"name":"pickTruesAndMarkFalses","line":157,"loc":{"start":{"line":157,"column":56},"end":{"line":157,"column":98}}},"12":{"name":"reverse","line":172,"loc":{"start":{"line":172,"column":41},"end":{"line":172,"column":65}}},"13":{"name":"union","line":189,"loc":{"start":{"line":189,"column":39},"end":{"line":189,"column":60}}},"14":{"name":"updateNN","line":197,"loc":{"start":{"line":197,"column":42},"end":{"line":197,"column":81}}},"15":{"name":"run","line":230,"loc":{"start":{"line":230,"column":37},"end":{"line":230,"column":52}}},"16":{"name":"nnDescent","line":315,"loc":{"start":{"line":315,"column":0},"end":{"line":315,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":44}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":91}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"9":{"start":{"line":17,"column":39},"end":{"line":17,"column":93}},"10":{"start":{"line":19,"column":0},"end":{"line":19,"column":153}},"11":{"start":{"line":19,"column":50},"end":{"line":19,"column":151}},"12":{"start":{"line":19,"column":92},"end":{"line":19,"column":149}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":240}},"14":{"start":{"line":21,"column":50},"end":{"line":21,"column":151}},"15":{"start":{"line":21,"column":63},"end":{"line":21,"column":149}},"16":{"start":{"line":21,"column":152},"end":{"line":21,"column":238}},"17":{"start":{"line":23,"column":0},"end":{"line":23,"column":494}},"18":{"start":{"line":23,"column":43},"end":{"line":23,"column":208}},"19":{"start":{"line":23,"column":106},"end":{"line":23,"column":206}},"20":{"start":{"line":23,"column":209},"end":{"line":23,"column":373}},"21":{"start":{"line":23,"column":374},"end":{"line":23,"column":492}},"22":{"start":{"line":23,"column":390},"end":{"line":23,"column":492}},"23":{"start":{"line":45,"column":0},"end":{"line":58,"column":2}},"24":{"start":{"line":66,"column":0},"end":{"line":305,"column":22}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":55}},"26":{"start":{"line":69,"column":2},"end":{"line":112,"column":3}},"27":{"start":{"line":70,"column":4},"end":{"line":70,"column":46}},"28":{"start":{"line":73,"column":4},"end":{"line":73,"column":98}},"29":{"start":{"line":75,"column":4},"end":{"line":75,"column":43}},"30":{"start":{"line":77,"column":4},"end":{"line":77,"column":204}},"31":{"start":{"line":77,"column":74},"end":{"line":77,"column":204}},"32":{"start":{"line":80,"column":4},"end":{"line":80,"column":49}},"33":{"start":{"line":82,"column":4},"end":{"line":82,"column":204}},"34":{"start":{"line":82,"column":81},"end":{"line":82,"column":204}},"35":{"start":{"line":85,"column":4},"end":{"line":85,"column":73}},"36":{"start":{"line":87,"column":4},"end":{"line":87,"column":128}},"37":{"start":{"line":87,"column":34},"end":{"line":87,"column":128}},"38":{"start":{"line":90,"column":4},"end":{"line":90,"column":41}},"39":{"start":{"line":92,"column":4},"end":{"line":92,"column":147}},"40":{"start":{"line":92,"column":48},"end":{"line":92,"column":147}},"41":{"start":{"line":95,"column":4},"end":{"line":95,"column":43}},"42":{"start":{"line":97,"column":4},"end":{"line":97,"column":133}},"43":{"start":{"line":97,"column":41},"end":{"line":97,"column":133}},"44":{"start":{"line":99,"column":4},"end":{"line":99,"column":108}},"45":{"start":{"line":100,"column":4},"end":{"line":100,"column":64}},"46":{"start":{"line":103,"column":4},"end":{"line":103,"column":23}},"47":{"start":{"line":105,"column":4},"end":{"line":105,"column":135}},"48":{"start":{"line":105,"column":53},"end":{"line":105,"column":135}},"49":{"start":{"line":108,"column":4},"end":{"line":108,"column":25}},"50":{"start":{"line":109,"column":4},"end":{"line":109,"column":27}},"51":{"start":{"line":110,"column":4},"end":{"line":110,"column":16}},"52":{"start":{"line":111,"column":4},"end":{"line":111,"column":17}},"53":{"start":{"line":114,"column":2},"end":{"line":135,"column":4}},"54":{"start":{"line":115,"column":4},"end":{"line":115,"column":22}},"55":{"start":{"line":117,"column":4},"end":{"line":117,"column":65}},"56":{"start":{"line":120,"column":4},"end":{"line":126,"column":5}},"57":{"start":{"line":121,"column":6},"end":{"line":121,"column":28}},"58":{"start":{"line":123,"column":6},"end":{"line":125,"column":7}},"59":{"start":{"line":124,"column":8},"end":{"line":124,"column":51}},"60":{"start":{"line":128,"column":4},"end":{"line":134,"column":7}},"61":{"start":{"line":129,"column":6},"end":{"line":133,"column":8}},"62":{"start":{"line":137,"column":2},"end":{"line":143,"column":4}},"63":{"start":{"line":140,"column":4},"end":{"line":140,"column":48}},"64":{"start":{"line":140,"column":27},"end":{"line":140,"column":48}},"65":{"start":{"line":142,"column":4},"end":{"line":142,"column":41}},"66":{"start":{"line":145,"column":2},"end":{"line":155,"column":4}},"67":{"start":{"line":146,"column":4},"end":{"line":146,"column":18}},"68":{"start":{"line":148,"column":4},"end":{"line":152,"column":5}},"69":{"start":{"line":149,"column":6},"end":{"line":149,"column":32}},"70":{"start":{"line":151,"column":6},"end":{"line":151,"column":53}},"71":{"start":{"line":151,"column":29},"end":{"line":151,"column":53}},"72":{"start":{"line":154,"column":4},"end":{"line":154,"column":16}},"73":{"start":{"line":157,"column":2},"end":{"line":170,"column":4}},"74":{"start":{"line":158,"column":4},"end":{"line":158,"column":18}},"75":{"start":{"line":160,"column":4},"end":{"line":167,"column":5}},"76":{"start":{"line":161,"column":6},"end":{"line":161,"column":32}},"77":{"start":{"line":163,"column":6},"end":{"line":166,"column":7}},"78":{"start":{"line":164,"column":8},"end":{"line":164,"column":33}},"79":{"start":{"line":165,"column":8},"end":{"line":165,"column":32}},"80":{"start":{"line":169,"column":4},"end":{"line":169,"column":16}},"81":{"start":{"line":172,"column":2},"end":{"line":187,"column":4}},"82":{"start":{"line":173,"column":4},"end":{"line":173,"column":22}},"83":{"start":{"line":175,"column":4},"end":{"line":177,"column":5}},"84":{"start":{"line":176,"column":6},"end":{"line":176,"column":31}},"85":{"start":{"line":177,"column":5},"end":{"line":184,"column":5}},"86":{"start":{"line":178,"column":6},"end":{"line":179,"column":33}},"87":{"start":{"line":181,"column":6},"end":{"line":183,"column":7}},"88":{"start":{"line":182,"column":8},"end":{"line":182,"column":34}},"89":{"start":{"line":186,"column":4},"end":{"line":186,"column":13}},"90":{"start":{"line":189,"column":2},"end":{"line":195,"column":4}},"91":{"start":{"line":190,"column":4},"end":{"line":190,"column":25}},"92":{"start":{"line":192,"column":4},"end":{"line":194,"column":5}},"93":{"start":{"line":193,"column":6},"end":{"line":193,"column":20}},"94":{"start":{"line":194,"column":5},"end":{"line":194,"column":28}},"95":{"start":{"line":197,"column":2},"end":{"line":228,"column":4}},"96":{"start":{"line":201,"column":4},"end":{"line":202,"column":32}},"97":{"start":{"line":204,"column":4},"end":{"line":213,"column":5}},"98":{"start":{"line":205,"column":6},"end":{"line":205,"column":25}},"99":{"start":{"line":207,"column":6},"end":{"line":207,"column":40}},"100":{"start":{"line":207,"column":33},"end":{"line":207,"column":40}},"101":{"start":{"line":209,"column":6},"end":{"line":212,"column":7}},"102":{"start":{"line":210,"column":8},"end":{"line":210,"column":43}},"103":{"start":{"line":211,"column":8},"end":{"line":211,"column":31}},"104":{"start":{"line":215,"column":4},"end":{"line":227,"column":5}},"105":{"start":{"line":218,"column":6},"end":{"line":222,"column":8}},"106":{"start":{"line":226,"column":6},"end":{"line":226,"column":15}},"107":{"start":{"line":230,"column":2},"end":{"line":302,"column":4}},"108":{"start":{"line":231,"column":4},"end":{"line":232,"column":44}},"109":{"start":{"line":234,"column":4},"end":{"line":238,"column":5}},"110":{"start":{"line":235,"column":6},"end":{"line":235,"column":31}},"111":{"start":{"line":237,"column":6},"end":{"line":237,"column":42}},"112":{"start":{"line":240,"column":4},"end":{"line":241,"column":28}},"113":{"start":{"line":244,"column":4},"end":{"line":299,"column":5}},"114":{"start":{"line":245,"column":6},"end":{"line":245,"column":24}},"115":{"start":{"line":246,"column":6},"end":{"line":246,"column":17}},"116":{"start":{"line":248,"column":6},"end":{"line":253,"column":7}},"117":{"start":{"line":249,"column":8},"end":{"line":249,"column":36}},"118":{"start":{"line":251,"column":8},"end":{"line":251,"column":57}},"119":{"start":{"line":252,"column":8},"end":{"line":252,"column":70}},"120":{"start":{"line":255,"column":6},"end":{"line":256,"column":43}},"121":{"start":{"line":258,"column":6},"end":{"line":294,"column":7}},"122":{"start":{"line":259,"column":8},"end":{"line":259,"column":37}},"123":{"start":{"line":261,"column":8},"end":{"line":261,"column":99}},"124":{"start":{"line":263,"column":8},"end":{"line":263,"column":102}},"125":{"start":{"line":265,"column":8},"end":{"line":266,"column":47}},"126":{"start":{"line":268,"column":8},"end":{"line":293,"column":9}},"127":{"start":{"line":269,"column":10},"end":{"line":269,"column":37}},"128":{"start":{"line":271,"column":10},"end":{"line":279,"column":11}},"129":{"start":{"line":272,"column":12},"end":{"line":273,"column":53}},"130":{"start":{"line":275,"column":12},"end":{"line":275,"column":32}},"131":{"start":{"line":277,"column":12},"end":{"line":277,"column":53}},"132":{"start":{"line":278,"column":12},"end":{"line":278,"column":53}},"133":{"start":{"line":281,"column":10},"end":{"line":292,"column":11}},"134":{"start":{"line":282,"column":12},"end":{"line":282,"column":39}},"135":{"start":{"line":284,"column":12},"end":{"line":284,"column":36}},"136":{"start":{"line":284,"column":27},"end":{"line":284,"column":36}},"137":{"start":{"line":286,"column":12},"end":{"line":286,"column":54}},"138":{"start":{"line":288,"column":12},"end":{"line":288,"column":32}},"139":{"start":{"line":290,"column":12},"end":{"line":290,"column":54}},"140":{"start":{"line":291,"column":12},"end":{"line":291,"column":54}},"141":{"start":{"line":298,"column":6},"end":{"line":298,"column":108}},"142":{"start":{"line":298,"column":102},"end":{"line":298,"column":108}},"143":{"start":{"line":301,"column":4},"end":{"line":301,"column":13}},"144":{"start":{"line":304,"column":2},"end":{"line":304,"column":28}},"145":{"start":{"line":315,"column":0},"end":{"line":319,"column":1}},"146":{"start":{"line":316,"column":2},"end":{"line":316,"column":56}},"147":{"start":{"line":318,"column":2},"end":{"line":318,"column":25}},"148":{"start":{"line":320,"column":0},"end":{"line":320,"column":36}},"149":{"start":{"line":321,"column":0},"end":{"line":321,"column":67}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":92}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":50},"end":{"line":19,"column":50}},{"start":{"line":19,"column":50},"end":{"line":19,"column":50}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":50},"end":{"line":21,"column":50}},{"start":{"line":21,"column":50},"end":{"line":21,"column":50}}]},"5":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":226},"end":{"line":21,"column":230}},{"start":{"line":21,"column":233},"end":{"line":21,"column":237}}]},"6":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":159},"end":{"line":21,"column":163}},{"start":{"line":21,"column":168},"end":{"line":21,"column":192}},{"start":{"line":21,"column":196},"end":{"line":21,"column":222}}]},"7":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":43},"end":{"line":23,"column":43}},{"start":{"line":23,"column":43},"end":{"line":23,"column":43}}]},"8":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":47},"end":{"line":23,"column":79}},{"start":{"line":23,"column":83},"end":{"line":23,"column":102}}]},"9":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":244},"end":{"line":23,"column":254}},{"start":{"line":23,"column":258},"end":{"line":23,"column":278}}]},"10":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":374},"end":{"line":23,"column":374}},{"start":{"line":23,"column":374},"end":{"line":23,"column":374}}]},"11":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":414},"end":{"line":23,"column":457}},{"start":{"line":23,"column":460},"end":{"line":23,"column":491}}]},"12":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":16},"end":{"line":75,"column":26}},{"start":{"line":75,"column":30},"end":{"line":75,"column":42}}]},"13":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"14":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":37}},{"start":{"line":77,"column":41},"end":{"line":77,"column":54}},{"start":{"line":77,"column":58},"end":{"line":77,"column":72}}]},"15":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":18},"end":{"line":80,"column":30}},{"start":{"line":80,"column":34},"end":{"line":80,"column":48}}]},"16":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"17":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":39}},{"start":{"line":82,"column":43},"end":{"line":82,"column":59}},{"start":{"line":82,"column":63},"end":{"line":82,"column":79}}]},"18":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":26},"end":{"line":85,"column":46}},{"start":{"line":85,"column":50},"end":{"line":85,"column":72}}]},"19":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"20":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"21":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":16},"end":{"line":95,"column":26}},{"start":{"line":95,"column":30},"end":{"line":95,"column":42}}]},"22":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"23":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"24":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":35}},{"start":{"line":105,"column":39},"end":{"line":105,"column":51}}]},"25":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"26":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"27":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"28":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":163,"column":6}},{"start":{"line":163,"column":6},"end":{"line":163,"column":6}}]},"29":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":10},"end":{"line":163,"column":28}},{"start":{"line":163,"column":32},"end":{"line":163,"column":53}}]},"30":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":6},"end":{"line":207,"column":6}},{"start":{"line":207,"column":6},"end":{"line":207,"column":6}}]},"31":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":6},"end":{"line":209,"column":6}},{"start":{"line":209,"column":6},"end":{"line":209,"column":6}}]},"32":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"33":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":12},"end":{"line":284,"column":12}},{"start":{"line":284,"column":12},"end":{"line":284,"column":12}}]},"34":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":6},"end":{"line":298,"column":6}},{"start":{"line":298,"column":6},"end":{"line":298,"column":6}}]},"35":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":10},"end":{"line":298,"column":47}},{"start":{"line":298,"column":51},"end":{"line":298,"column":100}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.NNDescentClusterer = undefined;","exports.default = nnDescent;","","var _abstract = require('./abstract');","","var _abstract2 = _interopRequireDefault(_abstract);","","var _choice = require('pandemonium/choice');","","var _dangerousButPerformantSample = require('pandemonium/dangerous-but-performant-sample');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-constant-condition: 0 */","/**"," * Talisman clustering/record-linkage/nn-descent"," * =============================================="," *"," * JavaScript implementation of the NN-Descent algorithm designed to generate"," * k-NN graphs approximations in a performant fashion."," *"," * [Reference]:"," * http://www.cs.princeton.edu/cass/papers/www11.pdf"," *"," * [Article]:"," * \"Efficient K-Nearest Neighbor Graph Construction for Generic Similarity"," * Measures\" Wei Dong, Moses Charikar, Kai Li."," */","","","// TODO: JSDoc","","/**"," * Defaults."," */","var DEFAULTS = {","","  // Sampling coefficient","  rho: 0.5,","","  // Early termination coefficient","  delta: 0.001,","","  // Maximum number of iterations to perform","  maxIterations: Infinity,","","  // RNG to use","  rng: Math.random","};","","/**"," * NN-Descent Clusterer class."," *"," * @constructor"," */","","var NNDescentClusterer = exports.NNDescentClusterer = function (_RecordLinkageCluster) {","  _inherits(NNDescentClusterer, _RecordLinkageCluster);","","  function NNDescentClusterer(params, items) {","    _classCallCheck(this, NNDescentClusterer);","","    // Checking rho","    var _this = _possibleConstructorReturn(this, _RecordLinkageCluster.call(this, params, items));","","    _this.rho = params.rho || DEFAULTS.rho;","","    if (typeof _this.rho !== 'number' || _this.rho > 1 || _this.rho <= 0) throw new Error('talisman/clustering/record-linkage/nn-descent: rho should be a number greater than 0 and less or equal than 1.');","","    // Checking delta","    _this.delta = params.delta || DEFAULTS.delta;","","    if (typeof _this.delta !== 'number' || _this.delta >= 1 || _this.delta <= 0) throw new Error('talisman/clustering/record-linkage/nn-descent: delta should be a number greater than 0 and less than 1.');","","    // Checking maxIterations","    _this.maxIterations = params.maxIterations || DEFAULTS.maxIterations;","","    if (_this.maxIterations <= 0) throw new Error('talisman/clustering/record-linkage/nn-descent: maxIterations should be > 0');","","    // Checking similarity","    _this.similarity = params.similarity;","","    if (typeof _this.similarity !== 'function') throw new Error('talisman/clustering/record-linkage/nn-descent: similarity should be a function.');","","    // Checking RNG","    _this.rng = params.rng || DEFAULTS.rng;","","    if (typeof _this.rng !== 'function') throw new Error('talisman/clustering/record-linkage/nn-descent: rng should be a function.');","","    _this.sampleFunction = (0, _dangerousButPerformantSample.createDangerousButPerformantSample)(_this.rng);","    _this.choiceFunction = (0, _choice.createChoice)(_this.rng);","","    // Checking k","    _this.k = params.k;","","    if (typeof _this.k !== 'number' || _this.k <= 0) throw new Error('talisman/clustering/record-linkage/nn-descent: k should be > 0');","","    // Properties","    _this.iterations = 0;","    _this.computations = 0;","    _this.c = 0;","    return _this;","  }","","  NNDescentClusterer.prototype.sampleItems = function sampleItems(forItem) {","    var _this2 = this;","","    var items = new Set(this.sampleFunction(this.k, this.items));","","    // The original item should obviously not be in the sample","    if (items.has(forItem)) {","      items.delete(forItem);","","      while (items.size < this.k) {","        items.add(this.choiceFunction(this.items));","      }","    }","","    return Array.from(items).map(function (item) {","      return {","        item: item,","        similarity: _this2.similarity(item, forItem),","        processed: false","      };","    });","  };","","  NNDescentClusterer.prototype.sample = function sample(items, n) {","","    // NOTE: Probably possible to mutate here, but not sure.","    if (items.length <= n) return items.slice();","","    return this.sampleFunction(n, items);","  };","","  NNDescentClusterer.prototype.pickFalses = function pickFalses(elements) {","    var list = [];","","    for (var i = 0, l = elements.length; i < l; i++) {","      var element = elements[i];","","      if (element.processed) list.push(element.item);","    }","","    return list;","  };","","  NNDescentClusterer.prototype.pickTruesAndMarkFalses = function pickTruesAndMarkFalses(elements) {","    var list = [];","","    for (var i = 0, l = elements.length; i < l; i++) {","      var element = elements[i];","","      if (!element.processed && this.rng() < this.rho) {","        element.processed = true;","        list.push(element.item);","      }","    }","","    return list;","  };","","  NNDescentClusterer.prototype.reverse = function reverse(lists) {","    var R = new Map();","","    for (var i = 0, l = this.items.length; i < l; i++) {","      R.set(this.items[i], []);","    }for (var _i = 0, _l = this.items.length; _i < _l; _i++) {","      var item = this.items[_i],","          list = lists.get(item);","","      for (var j = 0, m = list.length; j < m; j++) {","        R.get(list[j]).push(item);","      }","    }","","    return R;","  };","","  NNDescentClusterer.prototype.union = function union(a, b) {","    var set = new Set(a);","","    for (var i = 0, l = b.length; i < l; i++) {","      set.add(b[i]);","    }return Array.from(set);","  };","","  NNDescentClusterer.prototype.updateNN = function updateNN(K, item, similarity) {","","    // NOTE: this is a naive approach that could be bested by a priority queue","    // or by caching the min similarity + holding elements in a Set","    var minSimilarity = Infinity,","        minSimilarityIndex = -1;","","    for (var i = 0, l = K.length; i < l; i++) {","      var element = K[i];","","      if (item === element.item) return;","","      if (element.similarity < minSimilarity) {","        minSimilarity = element.similarity;","        minSimilarityIndex = i;","      }","    }","","    if (minSimilarity < similarity) {","","      // Replacing the item","      K[minSimilarityIndex] = {","        item: item,","        similarity: similarity,","        processed: false","      };","","      // NOTE: we could avoid to store c in instance state by making this","      // function return something meaningful.","      this.c++;","    }","  };","","  NNDescentClusterer.prototype.run = function run() {","    var B = new Map(),","        rhok = Math.ceil(this.rho * this.k);","","    for (var i = 0, l = this.items.length; i < l; i++) {","      var item = this.items[i];","","      B.set(item, this.sampleItems(item));","    }","","    var before = new Map(),","        current = new Map();","","    // Performing the iterations","    while (true) {","      this.iterations++;","      this.c = 0;","","      for (var _i2 = 0, _l2 = this.items.length; _i2 < _l2; _i2++) {","        var _item = this.items[_i2];","","        before.set(_item, this.pickFalses(B.get(_item)));","        current.set(_item, this.pickTruesAndMarkFalses(B.get(_item)));","      }","","      var before2 = this.reverse(before),","          current2 = this.reverse(current);","","      for (var _i3 = 0, _l3 = this.items.length; _i3 < _l3; _i3++) {","        var _item2 = this.items[_i3];","","        before.set(_item2, this.union(before.get(_item2), this.sample(before2.get(_item2), rhok)));","","        current.set(_item2, this.union(current.get(_item2), this.sample(current2.get(_item2), rhok)));","","        var currentTargets = current.get(_item2),","            beforeTargets = before.get(_item2);","","        for (var j = 0, m = currentTargets.length; j < m; j++) {","          var u1 = currentTargets[j];","","          for (var k = j + 1; k < m; k++) {","            var u2 = currentTargets[k],","                similarity = this.similarity(u1, u2);","","            this.computations++;","","            this.updateNN(B.get(u1), u2, similarity);","            this.updateNN(B.get(u2), u1, similarity);","          }","","          for (var _k = 0, n = beforeTargets.length; _k < n; _k++) {","            var _u = beforeTargets[_k];","","            if (u1 === _u) continue;","","            var _similarity = this.similarity(u1, _u);","","            this.computations++;","","            this.updateNN(B.get(u1), _u, _similarity);","            this.updateNN(B.get(_u), u1, _similarity);","          }","        }","      }","","      // Termination?","      // console.log('iteration', this.c, this.delta * this.items.length * this.k, this.computations);","      if (this.iterations >= this.maxIterations || this.c <= this.delta * this.items.length * this.k) break;","    }","","    return B;","  };","","  return NNDescentClusterer;","}(_abstract2.default);","","/**"," * Shortcut function for the NN-Descent clusterer."," *"," * @param {object} params - Clusterer parameters."," * @param {array}  items  - Items to cluster."," */","","","function nnDescent(params, items) {","  var clusterer = new NNDescentClusterer(params, items);","","  return clusterer.run();","}","module.exports = exports['default'];","exports['default'].NNDescentClusterer = exports.NNDescentClusterer;"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"45":1,"66":1,"67":1,"69":1,"70":0,"73":0,"75":0,"77":0,"80":0,"82":0,"85":0,"87":0,"90":0,"92":0,"95":0,"97":0,"99":0,"100":0,"103":0,"105":0,"108":0,"109":0,"110":0,"111":0,"114":1,"115":0,"117":0,"120":0,"121":0,"123":0,"124":0,"128":0,"129":0,"137":1,"140":0,"142":0,"145":1,"146":0,"148":0,"149":0,"151":0,"154":0,"157":1,"158":0,"160":0,"161":0,"163":0,"164":0,"165":0,"169":0,"172":1,"173":0,"175":0,"176":0,"177":0,"178":0,"181":0,"182":0,"186":0,"189":1,"190":0,"192":0,"193":0,"194":0,"197":1,"201":0,"204":0,"205":0,"207":0,"209":0,"210":0,"211":0,"215":0,"218":0,"226":0,"230":1,"231":0,"234":0,"235":0,"237":0,"240":0,"244":0,"245":0,"246":0,"248":0,"249":0,"251":0,"252":0,"255":0,"258":0,"259":0,"261":0,"263":0,"265":0,"268":0,"269":0,"271":0,"272":0,"275":0,"277":0,"278":0,"281":0,"282":0,"284":0,"286":0,"288":0,"290":0,"291":0,"298":0,"301":0,"304":1,"315":1,"316":0,"318":0,"320":1,"321":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/sorted-neighborhood.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/sorted-neighborhood.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":1,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":1,"61":0,"62":0,"63":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,1],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"_classCallCheck","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}}},"3":{"name":"_possibleConstructorReturn","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}}},"4":{"name":"_inherits","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}}},"5":{"name":"(anonymous_5)","line":36,"loc":{"start":{"line":36,"column":72},"end":{"line":36,"column":105}}},"6":{"name":"SortedNeighborhoodClusterer","line":39,"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":54}}},"7":{"name":"(anonymous_7)","line":52,"loc":{"start":{"line":52,"column":25},"end":{"line":52,"column":47}}},"8":{"name":"run","line":67,"loc":{"start":{"line":67,"column":46},"end":{"line":67,"column":61}}},"9":{"name":"_loop","line":75,"loc":{"start":{"line":75,"column":16},"end":{"line":75,"column":37}}},"10":{"name":"(anonymous_10)","line":79,"loc":{"start":{"line":79,"column":25},"end":{"line":79,"column":41}}},"11":{"name":"sortedNeighborhood","line":122,"loc":{"start":{"line":122,"column":0},"end":{"line":122,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":51}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"8":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":153}},"10":{"start":{"line":17,"column":50},"end":{"line":17,"column":151}},"11":{"start":{"line":17,"column":92},"end":{"line":17,"column":149}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":240}},"13":{"start":{"line":19,"column":50},"end":{"line":19,"column":151}},"14":{"start":{"line":19,"column":63},"end":{"line":19,"column":149}},"15":{"start":{"line":19,"column":152},"end":{"line":19,"column":238}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":494}},"17":{"start":{"line":21,"column":43},"end":{"line":21,"column":208}},"18":{"start":{"line":21,"column":106},"end":{"line":21,"column":206}},"19":{"start":{"line":21,"column":209},"end":{"line":21,"column":373}},"20":{"start":{"line":21,"column":374},"end":{"line":21,"column":492}},"21":{"start":{"line":21,"column":390},"end":{"line":21,"column":492}},"22":{"start":{"line":36,"column":0},"end":{"line":112,"column":22}},"23":{"start":{"line":37,"column":2},"end":{"line":37,"column":64}},"24":{"start":{"line":39,"column":2},"end":{"line":65,"column":3}},"25":{"start":{"line":40,"column":4},"end":{"line":40,"column":55}},"26":{"start":{"line":42,"column":4},"end":{"line":42,"column":98}},"27":{"start":{"line":44,"column":4},"end":{"line":44,"column":63}},"28":{"start":{"line":46,"column":4},"end":{"line":46,"column":180}},"29":{"start":{"line":46,"column":64},"end":{"line":46,"column":180}},"30":{"start":{"line":48,"column":4},"end":{"line":48,"column":33}},"31":{"start":{"line":50,"column":4},"end":{"line":50,"column":73}},"32":{"start":{"line":52,"column":4},"end":{"line":54,"column":130}},"33":{"start":{"line":53,"column":6},"end":{"line":53,"column":46}},"34":{"start":{"line":54,"column":8},"end":{"line":54,"column":130}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":36}},"36":{"start":{"line":59,"column":4},"end":{"line":59,"column":49}},"37":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"38":{"start":{"line":62,"column":6},"end":{"line":62,"column":26}},"39":{"start":{"line":64,"column":4},"end":{"line":64,"column":17}},"40":{"start":{"line":67,"column":2},"end":{"line":109,"column":4}},"41":{"start":{"line":68,"column":4},"end":{"line":68,"column":22}},"42":{"start":{"line":70,"column":4},"end":{"line":71,"column":24}},"43":{"start":{"line":75,"column":4},"end":{"line":102,"column":6}},"44":{"start":{"line":76,"column":6},"end":{"line":76,"column":45}},"45":{"start":{"line":79,"column":6},"end":{"line":81,"column":9}},"46":{"start":{"line":80,"column":8},"end":{"line":80,"column":60}},"47":{"start":{"line":84,"column":6},"end":{"line":101,"column":7}},"48":{"start":{"line":85,"column":8},"end":{"line":86,"column":37}},"49":{"start":{"line":88,"column":8},"end":{"line":100,"column":9}},"50":{"start":{"line":89,"column":10},"end":{"line":90,"column":39}},"51":{"start":{"line":92,"column":10},"end":{"line":99,"column":11}},"52":{"start":{"line":93,"column":12},"end":{"line":93,"column":55}},"53":{"start":{"line":94,"column":12},"end":{"line":94,"column":38}},"54":{"start":{"line":97,"column":12},"end":{"line":97,"column":55}},"55":{"start":{"line":98,"column":12},"end":{"line":98,"column":38}},"56":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"57":{"start":{"line":105,"column":6},"end":{"line":105,"column":18}},"58":{"start":{"line":108,"column":4},"end":{"line":108,"column":93}},"59":{"start":{"line":111,"column":2},"end":{"line":111,"column":37}},"60":{"start":{"line":122,"column":0},"end":{"line":126,"column":1}},"61":{"start":{"line":123,"column":2},"end":{"line":123,"column":65}},"62":{"start":{"line":125,"column":2},"end":{"line":125,"column":25}},"63":{"start":{"line":127,"column":0},"end":{"line":127,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":50},"end":{"line":17,"column":50}},{"start":{"line":17,"column":50},"end":{"line":17,"column":50}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":50},"end":{"line":19,"column":50}},{"start":{"line":19,"column":50},"end":{"line":19,"column":50}}]},"5":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":226},"end":{"line":19,"column":230}},{"start":{"line":19,"column":233},"end":{"line":19,"column":237}}]},"6":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":159},"end":{"line":19,"column":163}},{"start":{"line":19,"column":168},"end":{"line":19,"column":192}},{"start":{"line":19,"column":196},"end":{"line":19,"column":222}}]},"7":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":43},"end":{"line":21,"column":43}},{"start":{"line":21,"column":43},"end":{"line":21,"column":43}}]},"8":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":47},"end":{"line":21,"column":79}},{"start":{"line":21,"column":83},"end":{"line":21,"column":102}}]},"9":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":244},"end":{"line":21,"column":254}},{"start":{"line":21,"column":258},"end":{"line":21,"column":278}}]},"10":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":374},"end":{"line":21,"column":374}},{"start":{"line":21,"column":374},"end":{"line":21,"column":374}}]},"11":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":414},"end":{"line":21,"column":457}},{"start":{"line":21,"column":460},"end":{"line":21,"column":491}}]},"12":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"13":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":41}},{"start":{"line":46,"column":45},"end":{"line":46,"column":62}}]},"14":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":32},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":71}}]},"15":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"16":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":10},"end":{"line":92,"column":10}},{"start":{"line":92,"column":10},"end":{"line":92,"column":10}}]},"17":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":28},"end":{"line":93,"column":41}},{"start":{"line":93,"column":45},"end":{"line":93,"column":54}}]},"18":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":28},"end":{"line":97,"column":41}},{"start":{"line":97,"column":45},"end":{"line":97,"column":54}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.SortedNeighborhoodClusterer = undefined;","exports.default = sortedNeighborhood;","","var _abstract = require('./abstract');","","var _abstract2 = _interopRequireDefault(_abstract);","","var _helpers = require('./helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }alisman clustering/record-linkage/sorted-neighborhoodlustering method first sorting the dataset before applying pairwisecomparisons only within the given window. Time complexity is quitebetter than the naive approach: O(n(w+log norted Neighborhood Clusterer class."," *"," * @constructor"," */","var SortedNeighborhoodClusterer = exports.SortedNeighborhoodClusterer = function (_RecordLinkageCluster) {","  _inherits(SortedNeighborhoodClusterer, _RecordLinkageCluster);","","  function SortedNeighborhoodClusterer(params, items) {","    _classCallCheck(this, SortedNeighborhoodClusterer);","","    var _this = _possibleConstructorReturn(this, _RecordLinkageCluster.call(this, params, items));","","    (0, _helpers.handleSimilarityPolymorphisms)(_this, params);","","    if (typeof params.window !== 'number' || params.window < 1) throw new Error('talisman/clustering/record-linkage/sorted-neighborhood: the given window should be a number > 0.');","","    _this.window = params.window;","","    var comparators = [].concat(params.comparator || params.comparators);","","    if (comparators.some(function (comparator) {","      return typeof comparator !== 'function';","    })) throw new Error('talisman/clustering/record-linkage/sorted-neighborhood: the given comparators should all be functions.');","","    _this.comparators = comparators;","","    // Cloning items because we are going to mutate the array","    _this.sorted = new Array(_this.items.length);","","    for (var i = 0, l = _this.items.length; i < l; i++) {","      _this.sorted[i] = i;","    }","    return _this;","  }","","  SortedNeighborhoodClusterer.prototype.run = function run() {","    var _this2 = this;","","    var graph = {},","        w = this.window;","","    // Applying comparators","","    var _loop = function _loop(c, d) {","      var comparator = _this2.comparators[c];","","      // Sorting items","      _this2.sorted.sort(function (a, b) {","        return comparator(_this2.items[a], _this2.items[b]);","      });","","      // Performing pairwise comparisons within allowed window","      for (var i = 0, l = _this2.sorted.length; i < l; i++) {","        var aIndex = _this2.sorted[i],","            a = _this2.items[aIndex];","","        for (var j = i + 1, m = Math.min(l, 1 + i + w); j < m; j++) {","          var bIndex = _this2.sorted[j],","              b = _this2.items[bIndex];","","          if (_this2.similarity(a, b)) {","            graph[aIndex] = graph[aIndex] || new Set();","            graph[aIndex].add(bIndex);","","            // NOTE: undirected link seems to be mandatory for it to work","            graph[bIndex] = graph[bIndex] || new Set();","            graph[bIndex].add(aIndex);","          }","        }","      }","    };","","    for (var c = 0, d = this.comparators.length; c < d; c++) {","      _loop(c, d);","    }","","    return (0, _helpers.clustersFromSetGraph)(this.items, graph, this.params.minClusterSize);","  };","","  return SortedNeighborhoodClusterer;","}(_abstract2.default);","","/**"," * Shortcut function for the sorted neighborhood clusterer."," *"," * @param {object} params - Clusterer parameters."," * @param {array}  items  - Items to cluster."," */","","","function sortedNeighborhood(params, items) {","  var clusterer = new SortedNeighborhoodClusterer(params, items);","","  return clusterer.run();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"36":1,"37":1,"39":1,"40":0,"42":0,"44":0,"46":0,"48":0,"50":0,"52":0,"53":0,"54":0,"56":0,"59":0,"61":0,"62":0,"64":0,"67":1,"68":0,"70":0,"75":0,"76":0,"79":0,"80":0,"84":0,"85":0,"88":0,"89":0,"92":0,"93":0,"94":0,"97":0,"98":0,"104":0,"105":0,"108":0,"111":1,"122":1,"123":0,"125":0,"127":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/vp-tree.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/clustering/record-linkage/vp-tree.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":1,"19":0,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1,"52":0,"53":0,"54":1},"b":{"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,1],"8":[1,0],"9":[1,1],"10":[1,0],"11":[1,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":2,"2":0,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"_classCallCheck","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}}},"3":{"name":"_possibleConstructorReturn","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}}},"4":{"name":"_inherits","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":41}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":48},"end":{"line":37,"column":81}}},"6":{"name":"VPTreeClusterer","line":40,"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":42}}},"7":{"name":"run","line":57,"loc":{"start":{"line":57,"column":34},"end":{"line":57,"column":49}}},"8":{"name":"vpTree","line":97,"loc":{"start":{"line":97,"column":0},"end":{"line":97,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":47}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":51}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"9":{"start":{"line":17,"column":39},"end":{"line":17,"column":93}},"10":{"start":{"line":19,"column":0},"end":{"line":19,"column":153}},"11":{"start":{"line":19,"column":50},"end":{"line":19,"column":151}},"12":{"start":{"line":19,"column":92},"end":{"line":19,"column":149}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":240}},"14":{"start":{"line":21,"column":50},"end":{"line":21,"column":151}},"15":{"start":{"line":21,"column":63},"end":{"line":21,"column":149}},"16":{"start":{"line":21,"column":152},"end":{"line":21,"column":238}},"17":{"start":{"line":23,"column":0},"end":{"line":23,"column":494}},"18":{"start":{"line":23,"column":43},"end":{"line":23,"column":208}},"19":{"start":{"line":23,"column":106},"end":{"line":23,"column":206}},"20":{"start":{"line":23,"column":209},"end":{"line":23,"column":373}},"21":{"start":{"line":23,"column":374},"end":{"line":23,"column":492}},"22":{"start":{"line":23,"column":390},"end":{"line":23,"column":492}},"23":{"start":{"line":37,"column":0},"end":{"line":87,"column":22}},"24":{"start":{"line":38,"column":2},"end":{"line":38,"column":52}},"25":{"start":{"line":40,"column":2},"end":{"line":55,"column":3}},"26":{"start":{"line":41,"column":4},"end":{"line":41,"column":43}},"27":{"start":{"line":44,"column":4},"end":{"line":44,"column":98}},"28":{"start":{"line":46,"column":4},"end":{"line":46,"column":140}},"29":{"start":{"line":46,"column":43},"end":{"line":46,"column":140}},"30":{"start":{"line":49,"column":4},"end":{"line":49,"column":148}},"31":{"start":{"line":49,"column":47},"end":{"line":49,"column":148}},"32":{"start":{"line":52,"column":4},"end":{"line":52,"column":33}},"33":{"start":{"line":53,"column":4},"end":{"line":53,"column":37}},"34":{"start":{"line":54,"column":4},"end":{"line":54,"column":17}},"35":{"start":{"line":57,"column":2},"end":{"line":84,"column":4}},"36":{"start":{"line":60,"column":4},"end":{"line":60,"column":63}},"37":{"start":{"line":63,"column":4},"end":{"line":64,"column":28}},"38":{"start":{"line":66,"column":4},"end":{"line":81,"column":5}},"39":{"start":{"line":67,"column":6},"end":{"line":67,"column":31}},"40":{"start":{"line":69,"column":6},"end":{"line":69,"column":38}},"41":{"start":{"line":69,"column":29},"end":{"line":69,"column":38}},"42":{"start":{"line":71,"column":6},"end":{"line":71,"column":56}},"43":{"start":{"line":73,"column":6},"end":{"line":73,"column":48}},"44":{"start":{"line":75,"column":6},"end":{"line":78,"column":7}},"45":{"start":{"line":76,"column":8},"end":{"line":76,"column":39}},"46":{"start":{"line":77,"column":8},"end":{"line":77,"column":39}},"47":{"start":{"line":80,"column":6},"end":{"line":80,"column":79}},"48":{"start":{"line":80,"column":56},"end":{"line":80,"column":79}},"49":{"start":{"line":83,"column":4},"end":{"line":83,"column":20}},"50":{"start":{"line":86,"column":2},"end":{"line":86,"column":25}},"51":{"start":{"line":97,"column":0},"end":{"line":101,"column":1}},"52":{"start":{"line":98,"column":2},"end":{"line":98,"column":53}},"53":{"start":{"line":100,"column":2},"end":{"line":100,"column":25}},"54":{"start":{"line":102,"column":0},"end":{"line":102,"column":36}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":92}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":50},"end":{"line":19,"column":50}},{"start":{"line":19,"column":50},"end":{"line":19,"column":50}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":50},"end":{"line":21,"column":50}},{"start":{"line":21,"column":50},"end":{"line":21,"column":50}}]},"5":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":226},"end":{"line":21,"column":230}},{"start":{"line":21,"column":233},"end":{"line":21,"column":237}}]},"6":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":159},"end":{"line":21,"column":163}},{"start":{"line":21,"column":168},"end":{"line":21,"column":192}},{"start":{"line":21,"column":196},"end":{"line":21,"column":222}}]},"7":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":43},"end":{"line":23,"column":43}},{"start":{"line":23,"column":43},"end":{"line":23,"column":43}}]},"8":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":47},"end":{"line":23,"column":79}},{"start":{"line":23,"column":83},"end":{"line":23,"column":102}}]},"9":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":244},"end":{"line":23,"column":254}},{"start":{"line":23,"column":258},"end":{"line":23,"column":278}}]},"10":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":374},"end":{"line":23,"column":374}},{"start":{"line":23,"column":374},"end":{"line":23,"column":374}}]},"11":{"line":23,"type":"cond-expr","locations":[{"start":{"line":23,"column":414},"end":{"line":23,"column":457}},{"start":{"line":23,"column":460},"end":{"line":23,"column":491}}]},"12":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"13":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"14":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"15":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.VPTreeClusterer = undefined;","exports.default = vpTree;","","var _vpTree = require('mnemonist/vp-tree');","","var _vpTree2 = _interopRequireDefault(_vpTree);","","var _abstract = require('./abstract');","","var _abstract2 = _interopRequireDefault(_abstract);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }alisman clustering/record-linkage/vp-treelustering method using a Vantage Point Tree (VPTree) to find the clustersmore efficientlyantage Point Tree Clusterer class."," *"," * @constructor"," */","var VPTreeClusterer = exports.VPTreeClusterer = function (_RecordLinkageCluster) {","  _inherits(VPTreeClusterer, _RecordLinkageCluster);","","  function VPTreeClusterer(params, items) {","    _classCallCheck(this, VPTreeClusterer);","","    // Validating radius","    var _this = _possibleConstructorReturn(this, _RecordLinkageCluster.call(this, params, items));","","    if (typeof params.radius !== 'number') throw new Error('talisman/clustering/record-linkage/vp-tree: the given radius is not a number.');","","    // Validating the distance function","    if (typeof params.distance !== 'function') throw new Error('talisman/clustering/record-linkage/vp-tree: the given distance is not a function.');","","    // Properties","    _this.radius = params.radius;","    _this.distance = params.distance;","    return _this;","  }","","  VPTreeClusterer.prototype.run = function run() {","","    // Building the tree","    var tree = new _vpTree2.default(this.distance, this.items);","","    // Retrieving the clusters","    var clusters = [],","        visited = new Set();","","    for (var i = 0, l = this.items.length; i < l; i++) {","      var item = this.items[i];","","      if (visited.has(item)) continue;","","      var neighbors = tree.neighbors(this.radius, item);","","      var cluster = new Array(neighbors.length);","","      for (var j = 0, m = neighbors.length; j < m; j++) {","        visited.add(neighbors[j].item);","        cluster[j] = neighbors[j].item;","      }","","      if (cluster.length >= this.params.minClusterSize) clusters.push(cluster);","    }","","    return clusters;","  };","","  return VPTreeClusterer;","}(_abstract2.default);","","/**"," * Shortcut function for the vantage point tree clusterer."," *"," * @param {object} params - Clusterer parameters."," * @param {array}  items  - Items to cluster."," */","","","function vpTree(params, items) {","  var clusterer = new VPTreeClusterer(params, items);","","  return clusterer.run();","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":2,"19":1,"21":1,"23":1,"37":1,"38":1,"40":1,"41":0,"44":0,"46":0,"49":0,"52":0,"53":0,"54":0,"57":1,"60":0,"63":0,"66":0,"67":0,"69":0,"71":0,"73":0,"75":0,"76":0,"77":0,"80":0,"83":0,"86":1,"97":1,"98":0,"100":0,"102":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/features/extraction/vectorizers.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/features/extraction/vectorizers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"collectionVectorizer","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":51}}},"2":{"name":"_loop","line":71,"loc":{"start":{"line":71,"column":14},"end":{"line":71,"column":33}}},"3":{"name":"(anonymous_3)","line":85,"loc":{"start":{"line":85,"column":21},"end":{"line":85,"column":38}}},"4":{"name":"(anonymous_4)","line":117,"loc":{"start":{"line":117,"column":38},"end":{"line":117,"column":51}}},"5":{"name":"bagOfWordsVectorizer","line":142,"loc":{"start":{"line":142,"column":0},"end":{"line":142,"column":50}}},"6":{"name":"countVectorizer","line":189,"loc":{"start":{"line":189,"column":0},"end":{"line":189,"column":45}}},"7":{"name":"tfidfVectorizer","line":238,"loc":{"start":{"line":238,"column":0},"end":{"line":238,"column":45}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"6":{"start":{"line":31,"column":0},"end":{"line":34,"column":2}},"7":{"start":{"line":36,"column":0},"end":{"line":126,"column":1}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":26}},"9":{"start":{"line":39,"column":2},"end":{"line":40,"column":76}},"10":{"start":{"line":43,"column":2},"end":{"line":43,"column":18}},"11":{"start":{"line":45,"column":2},"end":{"line":63,"column":3}},"12":{"start":{"line":46,"column":4},"end":{"line":46,"column":29}},"13":{"start":{"line":49,"column":4},"end":{"line":62,"column":5}},"14":{"start":{"line":50,"column":6},"end":{"line":51,"column":51}},"15":{"start":{"line":53,"column":6},"end":{"line":58,"column":7}},"16":{"start":{"line":54,"column":8},"end":{"line":57,"column":10}},"17":{"start":{"line":60,"column":6},"end":{"line":60,"column":39}},"18":{"start":{"line":61,"column":6},"end":{"line":61,"column":70}},"19":{"start":{"line":66,"column":2},"end":{"line":67,"column":37}},"20":{"start":{"line":69,"column":2},"end":{"line":69,"column":17}},"21":{"start":{"line":71,"column":2},"end":{"line":92,"column":4}},"22":{"start":{"line":72,"column":4},"end":{"line":74,"column":35}},"23":{"start":{"line":77,"column":4},"end":{"line":91,"column":5}},"24":{"start":{"line":78,"column":6},"end":{"line":81,"column":8}},"25":{"start":{"line":83,"column":6},"end":{"line":83,"column":33}},"26":{"start":{"line":85,"column":6},"end":{"line":90,"column":9}},"27":{"start":{"line":86,"column":8},"end":{"line":89,"column":10}},"28":{"start":{"line":94,"column":2},"end":{"line":96,"column":3}},"29":{"start":{"line":95,"column":4},"end":{"line":95,"column":14}},"30":{"start":{"line":99,"column":2},"end":{"line":99,"column":46}},"31":{"start":{"line":101,"column":2},"end":{"line":114,"column":3}},"32":{"start":{"line":102,"column":4},"end":{"line":102,"column":31}},"33":{"start":{"line":104,"column":4},"end":{"line":104,"column":42}},"34":{"start":{"line":106,"column":4},"end":{"line":113,"column":5}},"35":{"start":{"line":107,"column":6},"end":{"line":110,"column":32}},"36":{"start":{"line":112,"column":6},"end":{"line":112,"column":55}},"37":{"start":{"line":117,"column":2},"end":{"line":119,"column":5}},"38":{"start":{"line":118,"column":4},"end":{"line":118,"column":13}},"39":{"start":{"line":121,"column":2},"end":{"line":125,"column":4}},"40":{"start":{"line":138,"column":0},"end":{"line":140,"column":2}},"41":{"start":{"line":142,"column":0},"end":{"line":177,"column":1}},"42":{"start":{"line":143,"column":2},"end":{"line":143,"column":26}},"43":{"start":{"line":145,"column":2},"end":{"line":145,"column":61}},"44":{"start":{"line":148,"column":2},"end":{"line":148,"column":17}},"45":{"start":{"line":149,"column":2},"end":{"line":149,"column":16}},"46":{"start":{"line":151,"column":2},"end":{"line":157,"column":3}},"47":{"start":{"line":152,"column":4},"end":{"line":152,"column":27}},"48":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"49":{"start":{"line":155,"column":6},"end":{"line":155,"column":54}},"50":{"start":{"line":155,"column":30},"end":{"line":155,"column":54}},"51":{"start":{"line":160,"column":2},"end":{"line":161,"column":45}},"52":{"start":{"line":163,"column":2},"end":{"line":171,"column":3}},"53":{"start":{"line":164,"column":4},"end":{"line":164,"column":30}},"54":{"start":{"line":166,"column":4},"end":{"line":166,"column":51}},"55":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"56":{"start":{"line":169,"column":6},"end":{"line":169,"column":41}},"57":{"start":{"line":173,"column":2},"end":{"line":176,"column":4}},"58":{"start":{"line":189,"column":0},"end":{"line":226,"column":1}},"59":{"start":{"line":190,"column":2},"end":{"line":190,"column":26}},"60":{"start":{"line":192,"column":2},"end":{"line":192,"column":61}},"61":{"start":{"line":195,"column":2},"end":{"line":195,"column":17}},"62":{"start":{"line":196,"column":2},"end":{"line":196,"column":16}},"63":{"start":{"line":198,"column":2},"end":{"line":204,"column":3}},"64":{"start":{"line":199,"column":4},"end":{"line":199,"column":27}},"65":{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},"66":{"start":{"line":202,"column":6},"end":{"line":202,"column":54}},"67":{"start":{"line":202,"column":30},"end":{"line":202,"column":54}},"68":{"start":{"line":207,"column":2},"end":{"line":208,"column":45}},"69":{"start":{"line":210,"column":2},"end":{"line":220,"column":3}},"70":{"start":{"line":211,"column":4},"end":{"line":211,"column":31}},"71":{"start":{"line":213,"column":4},"end":{"line":213,"column":51}},"72":{"start":{"line":215,"column":4},"end":{"line":219,"column":5}},"73":{"start":{"line":216,"column":6},"end":{"line":216,"column":32}},"74":{"start":{"line":217,"column":6},"end":{"line":217,"column":47}},"75":{"start":{"line":218,"column":6},"end":{"line":218,"column":25}},"76":{"start":{"line":222,"column":2},"end":{"line":225,"column":4}},"77":{"start":{"line":238,"column":0},"end":{"line":295,"column":1}},"78":{"start":{"line":239,"column":2},"end":{"line":239,"column":26}},"79":{"start":{"line":241,"column":2},"end":{"line":241,"column":61}},"80":{"start":{"line":244,"column":2},"end":{"line":245,"column":27}},"81":{"start":{"line":247,"column":2},"end":{"line":247,"column":16}},"82":{"start":{"line":249,"column":2},"end":{"line":267,"column":3}},"83":{"start":{"line":250,"column":4},"end":{"line":250,"column":27}},"84":{"start":{"line":252,"column":4},"end":{"line":252,"column":29}},"85":{"start":{"line":254,"column":4},"end":{"line":266,"column":5}},"86":{"start":{"line":255,"column":6},"end":{"line":255,"column":24}},"87":{"start":{"line":257,"column":6},"end":{"line":260,"column":8}},"88":{"start":{"line":257,"column":28},"end":{"line":260,"column":8}},"89":{"start":{"line":262,"column":6},"end":{"line":262,"column":24}},"90":{"start":{"line":264,"column":6},"end":{"line":264,"column":63}},"91":{"start":{"line":265,"column":6},"end":{"line":265,"column":33}},"92":{"start":{"line":270,"column":2},"end":{"line":272,"column":3}},"93":{"start":{"line":271,"column":4},"end":{"line":271,"column":69}},"94":{"start":{"line":273,"column":2},"end":{"line":274,"column":45}},"95":{"start":{"line":276,"column":2},"end":{"line":289,"column":3}},"96":{"start":{"line":277,"column":4},"end":{"line":278,"column":35}},"97":{"start":{"line":280,"column":4},"end":{"line":280,"column":51}},"98":{"start":{"line":282,"column":4},"end":{"line":288,"column":5}},"99":{"start":{"line":283,"column":6},"end":{"line":285,"column":36}},"100":{"start":{"line":287,"column":6},"end":{"line":287,"column":47}},"101":{"start":{"line":291,"column":2},"end":{"line":294,"column":4}}},"branchMap":{"1":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":19}},{"start":{"line":37,"column":23},"end":{"line":37,"column":25}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":19},"end":{"line":39,"column":31}},{"start":{"line":39,"column":35},"end":{"line":39,"column":66}}]},"3":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":18},"end":{"line":40,"column":35}},{"start":{"line":40,"column":39},"end":{"line":40,"column":75}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"5":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":31},"end":{"line":61,"column":53}},{"start":{"line":61,"column":57},"end":{"line":61,"column":69}}]},"6":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"7":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":30},"end":{"line":109,"column":33}},{"start":{"line":109,"column":36},"end":{"line":109,"column":65}}]},"8":{"line":112,"type":"cond-expr","locations":[{"start":{"line":112,"column":44},"end":{"line":112,"column":50}},{"start":{"line":112,"column":53},"end":{"line":112,"column":54}}]},"9":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":12},"end":{"line":143,"column":19}},{"start":{"line":143,"column":23},"end":{"line":143,"column":25}}]},"10":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":19},"end":{"line":145,"column":31}},{"start":{"line":145,"column":35},"end":{"line":145,"column":60}}]},"11":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":6}},{"start":{"line":155,"column":6},"end":{"line":155,"column":6}}]},"12":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":19}},{"start":{"line":190,"column":23},"end":{"line":190,"column":25}}]},"13":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":19},"end":{"line":192,"column":31}},{"start":{"line":192,"column":35},"end":{"line":192,"column":60}}]},"14":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":6}},{"start":{"line":202,"column":6},"end":{"line":202,"column":6}}]},"15":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":25},"end":{"line":217,"column":41}},{"start":{"line":217,"column":45},"end":{"line":217,"column":46}}]},"16":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":12},"end":{"line":239,"column":19}},{"start":{"line":239,"column":23},"end":{"line":239,"column":25}}]},"17":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":19},"end":{"line":241,"column":31}},{"start":{"line":241,"column":35},"end":{"line":241,"column":60}}]},"18":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":6},"end":{"line":257,"column":6}},{"start":{"line":257,"column":6},"end":{"line":257,"column":6}}]},"19":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":33},"end":{"line":264,"column":57}},{"start":{"line":264,"column":61},"end":{"line":264,"column":62}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.collectionVectorizer = collectionVectorizer;","exports.bagOfWordsVectorizer = bagOfWordsVectorizer;","exports.countVectorizer = countVectorizer;","exports.tfidfVectorizer = tfidfVectorizer;","/* eslint no-loop-func: 0 */","/**"," * Talisman features/extraction/vectorizers"," * ========================================="," *"," * Compilation of vectorizers aiming at transforming data into"," * feature matrices used by machine learning methods."," */","","/**"," * Vectorizer taking a collection as input and outputting a feature matrix."," *"," * @param  {object}   options             - Options to customize the output."," * @param  {function} [options.type]      - Array class to use."," * @param  {string}   [options.separator] - Separator to use in qualitative"," *                                          headers name."," * @param  {array}    collection          - The target collection (array of"," *                                          objects)."," * @return {object}                       - An object containing the result"," *                                          (meta, headers & features)."," */","var DEFAULT_COLLECTION_OPTIONS = {","  type: Array,","  separator: '='","};","","function collectionVectorizer(options, collection) {","  options = options || {};","","  var ArrayClass = options.type || DEFAULT_COLLECTION_OPTIONS.type,","      separator = options.separator || DEFAULT_COLLECTION_OPTIONS.separator;","","  // Doing a first pass to assess the content of the collection","  var fields = {};","","  for (var i = 0, l = collection.length; i < l; i++) {","    var item = collection[i];","","    // Checking every field","    for (var k in item) {","      var value = item[k],","          quantitative = typeof value === 'number';","","      if (!(k in fields)) {","        fields[k] = {","          values: new Set(),","          quantitative: quantitative","        };","      }","","      fields[k].values.add('' + value);","      fields[k].quantitative = fields[k].quantitative && quantitative;","    }","  }","","  // Building the meta","  var meta = {},","      quantitativeFields = new Set();","","  var length = 0;","","  var _loop = function _loop(_k) {","    var _fields$_k = fields[_k],","        quantitative = _fields$_k.quantitative,","        values = _fields$_k.values;","","","    if (quantitative) {","      meta[_k] = {","        index: length++,","        quantitative: quantitative","      };","","      quantitativeFields.add(_k);","    } else {","      values.forEach(function (value) {","        meta['' + _k + separator + value] = {","          index: length++,","          quantitative: quantitative","        };","      });","    }","  };","","  for (var _k in fields) {","    _loop(_k);","  }","","  // Building the features matrix","  var features = new Array(collection.length);","","  for (var _i = 0, _l = collection.length; _i < _l; _i++) {","    var _item = collection[_i];","","    features[_i] = new ArrayClass(length);","","    for (var _k2 in _item) {","      var _value = _item[_k2],","          _quantitative = quantitativeFields.has(_k2),","          h = _quantitative ? _k2 : '' + _k2 + separator + _value,","          index = meta[h].index;","","      features[_i][index] = _quantitative ? _value : 1;","    }","  }","","  // Building the headers","  var headers = Object.keys(meta).map(function (k) {","    return k;","  });","","  return {","    headers: headers,","    meta: meta,","    features: features","  };","}","","/**"," * Vectorizer taking a list of tokenized documents as input and outputting a"," * \"bag of words\" features matrix."," *"," * @param  {object}   options             - Options to customize the output."," * @param  {function} [options.type]      - Array class to use."," * @param  {array}    documents           - The documents to process."," * @return {object}                       - An object containing the result"," *                                          (meta, headers & features)."," */","var DEFAULT_TEXT_OPTIONS = {","  type: Array","};","","function bagOfWordsVectorizer(options, documents) {","  options = options || {};","","  var ArrayClass = options.type || DEFAULT_TEXT_OPTIONS.type;","","  // Iterating through documents to gather every word","  var words = {};","  var index = 0;","","  for (var i = 0, l = documents.length; i < l; i++) {","    var doc = documents[i];","","    for (var j = 0, m = doc.length; j < m; j++) {","      if (!(doc[j] in words)) words[doc[j]] = index++;","    }","  }","","  // Building headers & features matrix","  var headers = Object.keys(words),","      features = new Array(documents.length);","","  for (var _i2 = 0, _l2 = documents.length; _i2 < _l2; _i2++) {","    var _doc = documents[_i2];","","    features[_i2] = new ArrayClass(headers.length);","","    for (var _j = 0, _m = _doc.length; _j < _m; _j++) {","      features[_i2][words[_doc[_j]]] = 1;","    }","  }","","  return {","    headers: headers,","    features: features","  };","}","","/**"," * Vectorizer taking a list of tokenized documents as input and outputting a"," * features matrix containing the count of each word in the document."," *"," * @param  {object}   options             - Options to customize the output."," * @param  {function} [options.type]      - Array class to use."," * @param  {array}    documents           - The documents to process."," * @return {object}                       - An object containing the result"," *                                          (meta, headers & features)."," */","function countVectorizer(options, documents) {","  options = options || {};","","  var ArrayClass = options.type || DEFAULT_TEXT_OPTIONS.type;","","  // Iterating through documents to gather every word","  var words = {};","  var index = 0;","","  for (var i = 0, l = documents.length; i < l; i++) {","    var doc = documents[i];","","    for (var j = 0, m = doc.length; j < m; j++) {","      if (!(doc[j] in words)) words[doc[j]] = index++;","    }","  }","","  // Building headers & features matrix","  var headers = Object.keys(words),","      features = new Array(documents.length);","","  for (var _i3 = 0, _l3 = documents.length; _i3 < _l3; _i3++) {","    var _doc2 = documents[_i3];","","    features[_i3] = new ArrayClass(headers.length);","","    for (var _j2 = 0, _m2 = _doc2.length; _j2 < _m2; _j2++) {","      var k = words[_doc2[_j2]];","      features[_i3][k] = features[_i3][k] || 0;","      features[_i3][k]++;","    }","  }","","  return {","    headers: headers,","    features: features","  };","}","","/**"," * Vectorizer taking a list of tokenized documents as input and outputting a"," * features matrix containing the tfidf metric for each word in the document."," *"," * @param  {object}   options             - Options to customize the output."," * @param  {function} [options.type]      - Array class to use."," * @param  {array}    documents           - The documents to process."," * @return {object}                       - An object containing the result"," *                                          (meta, headers & features)."," */","function tfidfVectorizer(options, documents) {","  options = options || {};","","  var ArrayClass = options.type || DEFAULT_TEXT_OPTIONS.type;","","  // Iterating through documents to gather every word","  var words = {},","      termFrequencies = [];","","  var index = 0;","","  for (var i = 0, l = documents.length; i < l; i++) {","    var doc = documents[i];","","    termFrequencies.push({});","","    for (var j = 0, m = doc.length; j < m; j++) {","      var word = doc[j];","","      if (!(word in words)) words[word] = {","        index: index++,","        idf: 0","      };","","      words[word].idf++;","","      termFrequencies[i][word] = termFrequencies[i][word] || 0;","      termFrequencies[i][word]++;","    }","  }","","  // Computing inverse document frequencies","  for (var _word in words) {","    words[_word].idf = Math.log(documents.length / words[_word].idf);","  } // Building headers & features matrix","  var headers = Object.keys(words),","      features = new Array(documents.length);","","  for (var _i4 = 0, _l4 = documents.length; _i4 < _l4; _i4++) {","    var _doc3 = documents[_i4],","        tfs = termFrequencies[_i4];","","    features[_i4] = new ArrayClass(headers.length);","","    for (var _j3 = 0, _m3 = _doc3.length; _j3 < _m3; _j3++) {","      var _words$_doc3$_j = words[_doc3[_j3]],","          k = _words$_doc3$_j.index,","          idf = _words$_doc3$_j.idf;","","      features[_i4][k] = tfs[_doc3[_j3]] * idf;","    }","  }","","  return {","    headers: headers,","    features: features","  };","}"],"l":{"3":1,"6":1,"7":1,"8":1,"9":1,"31":1,"36":1,"37":0,"39":0,"43":0,"45":0,"46":0,"49":0,"50":0,"53":0,"54":0,"60":0,"61":0,"66":0,"69":0,"71":0,"72":0,"77":0,"78":0,"83":0,"85":0,"86":0,"94":0,"95":0,"99":0,"101":0,"102":0,"104":0,"106":0,"107":0,"112":0,"117":0,"118":0,"121":0,"138":1,"142":1,"143":0,"145":0,"148":0,"149":0,"151":0,"152":0,"154":0,"155":0,"160":0,"163":0,"164":0,"166":0,"168":0,"169":0,"173":0,"189":1,"190":0,"192":0,"195":0,"196":0,"198":0,"199":0,"201":0,"202":0,"207":0,"210":0,"211":0,"213":0,"215":0,"216":0,"217":0,"218":0,"222":0,"238":1,"239":0,"241":0,"244":0,"247":0,"249":0,"250":0,"252":0,"254":0,"255":0,"257":0,"262":0,"264":0,"265":0,"270":0,"271":0,"273":0,"276":0,"277":0,"280":0,"282":0,"283":0,"287":0,"291":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/inflectors/spanish/noun.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/inflectors/spanish/noun.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":16,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"transferCase","line":62,"loc":{"start":{"line":62,"column":0},"end":{"line":62,"column":38}}},"2":{"name":"singularize","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":27}}},"3":{"name":"(anonymous_3)","line":106,"loc":{"start":{"line":106,"column":52},"end":{"line":106,"column":73}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":71}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":368}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":191}},"7":{"start":{"line":32,"column":0},"end":{"line":49,"column":2}},"8":{"start":{"line":51,"column":0},"end":{"line":51,"column":38}},"9":{"start":{"line":53,"column":0},"end":{"line":55,"column":1}},"10":{"start":{"line":54,"column":2},"end":{"line":54,"column":82}},"11":{"start":{"line":62,"column":0},"end":{"line":72,"column":1}},"12":{"start":{"line":63,"column":2},"end":{"line":63,"column":17}},"13":{"start":{"line":65,"column":2},"end":{"line":69,"column":3}},"14":{"start":{"line":66,"column":4},"end":{"line":66,"column":96}},"15":{"start":{"line":68,"column":4},"end":{"line":68,"column":28}},"16":{"start":{"line":71,"column":2},"end":{"line":71,"column":15}},"17":{"start":{"line":80,"column":0},"end":{"line":115,"column":1}},"18":{"start":{"line":81,"column":2},"end":{"line":81,"column":41}},"19":{"start":{"line":84,"column":2},"end":{"line":84,"column":54}},"20":{"start":{"line":84,"column":42},"end":{"line":84,"column":54}},"21":{"start":{"line":87,"column":2},"end":{"line":87,"column":53}},"22":{"start":{"line":89,"column":2},"end":{"line":89,"column":54}},"23":{"start":{"line":89,"column":17},"end":{"line":89,"column":54}},"24":{"start":{"line":92,"column":2},"end":{"line":112,"column":3}},"25":{"start":{"line":93,"column":4},"end":{"line":96,"column":38}},"26":{"start":{"line":99,"column":4},"end":{"line":99,"column":35}},"27":{"start":{"line":101,"column":4},"end":{"line":111,"column":5}},"28":{"start":{"line":103,"column":6},"end":{"line":103,"column":29}},"29":{"start":{"line":106,"column":6},"end":{"line":108,"column":61}},"30":{"start":{"line":106,"column":18},"end":{"line":108,"column":9}},"31":{"start":{"line":107,"column":8},"end":{"line":107,"column":35}},"32":{"start":{"line":108,"column":14},"end":{"line":108,"column":61}},"33":{"start":{"line":110,"column":6},"end":{"line":110,"column":23}},"34":{"start":{"line":114,"column":2},"end":{"line":114,"column":14}}},"branchMap":{"1":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":66},"end":{"line":66,"column":79}},{"start":{"line":66,"column":82},"end":{"line":66,"column":95}}]},"2":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"3":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"4":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"5":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":6}},{"start":{"line":106,"column":6},"end":{"line":106,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.singularize = singularize;","","var _helpers = require('../../helpers');","","/**"," * Constants."," */","var ACCENT_MAP = (0, _helpers.translation)('AEIOUaeiou', 'ÁÉÍÓÚáéíóú'); /**","                                                                         * Talisman inflectors/spanish/noun","                                                                         * =================================","                                                                         *","                                                                         * A noun inflector for the Spanish language.","                                                                         *","                                                                         * [Reference]:","                                                                         * https://github.com/bermi/Python-Inflector","                                                                         *","                                                                         * [Auhors]:","                                                                         * Bermi Ferrer Martinez","                                                                         * Carles Sadurní Anguita","                                                                         */","","","var SINGULAR_RULES = [[/^([bcdfghjklmnñpqrstvwxyz]*)([aeiou])([ns])es$/i, '$1$2$3'], [/([aeiou])([ns])es$/i, '$1$2', true], [/shes$/i, 'sh'], [/oides$/i, 'oide'], [/(sis|tis|xis)$/i, '$1'], [/(é)s$/i, '$1'], [/(ces)$/i, 'z'], [/([^e])s$/i, '$1'], [/([bcdfghjklmnñprstvwxyz]{2,}e)s$/i, '$1'], [/([ghñptv]e)s$/i, '$1'], [/jes$/i, 'je'], [/ques$/i, 'que'], [/es$/i, '']];","","var IMMUTABLE_WORDS = new Set(['lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'paraguas', 'tijeras', 'gafas', 'vacaciones', 'víveres', 'cumpleaños', 'virus', 'atlas', 'sms', 'hummus']);","","var IRREGULAR_SINGULAR_TO_PLURAL = {","  base: 'bases',","  carácter: 'caracteres',","  champú: 'champús',","  curriculum: 'currículos',","  espécimen: 'especímenes',","  jersey: 'jerséis',","  memorándum: 'memorandos',","  menú: 'menús',","  no: 'noes',","  país: 'países',","  referéndum: 'referendos',","  régimen: 'regímenes',","  sándwich: 'sándwiches',","  si: 'sis',","  taxi: 'taxis',","  ultimátum: 'ultimatos'","};","","var IRREGULAR_PLURAL_TO_SINGULAR = {};","","for (var singular in IRREGULAR_SINGULAR_TO_PLURAL) {","  IRREGULAR_PLURAL_TO_SINGULAR[IRREGULAR_SINGULAR_TO_PLURAL[singular]] = singular;","} /**","   * Function used to apply source word's case to target word.","   *","   * @param  {string} source - Source word.","   * @param  {string} target - Target word.","   * @return {string}","   */","function transferCase(source, target) {","  var cased = '';","","  for (var i = 0, l = target.length; i < l; i++) {","    var c = source[i].toLowerCase() === source[i].toLowerCase() ? 'toLowerCase' : 'toUpperCase';","","    cased += target[i][c]();","  }","","  return cased;","}","","/**"," * Function used to inflect nouns to their singular form."," *"," * @param  {string} noun - Noun to inflect."," * @return {string}      - The singular version."," */","function singularize(noun) {","  var lowerCaseNoun = noun.toLowerCase();","","  // Checking immutable words","  if (IMMUTABLE_WORDS.has(lowerCaseNoun)) return noun;","","  // Checking irregulars","  var irregular = IRREGULAR_PLURAL_TO_SINGULAR[noun];","","  if (irregular) return transferCase(noun, irregular);","","  // Applying rules","  for (var i = 0, l = SINGULAR_RULES.length; i < l; i++) {","    var _SINGULAR_RULES$i = SINGULAR_RULES[i],","        pattern = _SINGULAR_RULES$i[0],","        replacement = _SINGULAR_RULES$i[1],","        accent = _SINGULAR_RULES$i[2];","","","    var match = pattern.test(noun);","","    if (match) {","","      var _singular = void 0;","","      // Watching out for accents","      if (accent) _singular = noun.replace(pattern, function (_, m1, m2) {","        return ACCENT_MAP[m1] + m2;","      });else _singular = noun.replace(pattern, replacement);","","      return _singular;","    }","  }","","  return noun;","}"],"l":{"3":1,"6":1,"8":1,"13":1,"28":1,"30":1,"32":1,"51":1,"53":1,"54":16,"62":1,"63":0,"65":0,"66":0,"68":0,"71":0,"80":1,"81":0,"84":0,"87":0,"89":0,"92":0,"93":0,"99":0,"101":0,"103":0,"106":0,"107":0,"108":0,"110":0,"114":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/bag.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/bag.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"bag","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":19}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"3":{"start":{"line":32,"column":0},"end":{"line":71,"column":1}},"4":{"start":{"line":33,"column":2},"end":{"line":33,"column":24}},"5":{"start":{"line":33,"column":15},"end":{"line":33,"column":24}},"6":{"start":{"line":35,"column":2},"end":{"line":36,"column":31}},"7":{"start":{"line":38,"column":2},"end":{"line":39,"column":20}},"8":{"start":{"line":41,"column":2},"end":{"line":41,"column":21}},"9":{"start":{"line":41,"column":11},"end":{"line":41,"column":21}},"10":{"start":{"line":42,"column":2},"end":{"line":42,"column":21}},"11":{"start":{"line":42,"column":11},"end":{"line":42,"column":21}},"12":{"start":{"line":44,"column":2},"end":{"line":44,"column":33}},"13":{"start":{"line":46,"column":2},"end":{"line":60,"column":3}},"14":{"start":{"line":47,"column":4},"end":{"line":52,"column":5}},"15":{"start":{"line":48,"column":6},"end":{"line":48,"column":23}},"16":{"start":{"line":50,"column":6},"end":{"line":50,"column":36}},"17":{"start":{"line":50,"column":22},"end":{"line":50,"column":36}},"18":{"start":{"line":51,"column":6},"end":{"line":51,"column":18}},"19":{"start":{"line":54,"column":4},"end":{"line":59,"column":5}},"20":{"start":{"line":55,"column":6},"end":{"line":55,"column":24}},"21":{"start":{"line":57,"column":6},"end":{"line":57,"column":38}},"22":{"start":{"line":57,"column":23},"end":{"line":57,"column":38}},"23":{"start":{"line":58,"column":6},"end":{"line":58,"column":19}},"24":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"25":{"start":{"line":63,"column":4},"end":{"line":63,"column":44}},"26":{"start":{"line":63,"column":15},"end":{"line":63,"column":44}},"27":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"28":{"start":{"line":67,"column":4},"end":{"line":67,"column":47}},"29":{"start":{"line":67,"column":16},"end":{"line":67,"column":47}},"30":{"start":{"line":70,"column":2},"end":{"line":70,"column":26}},"31":{"start":{"line":72,"column":0},"end":{"line":72,"column":36}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":6}},{"start":{"line":50,"column":6},"end":{"line":50,"column":6}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"7":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"8":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"9":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = bag;","/**"," * Talisman metrics/distance/bag"," * =============================="," *"," * Function computing the bag distance which works likewise which is the max"," * of the difference of multiset a & multiset b and the difference of"," * multiset b & multiset a."," *"," * [Reference]:"," * http://www-db.disi.unibo.it/research/papers/SPIRE02.pdf"," *"," * [Article]:"," * String Matching with Metric Trees Using an Approximate Distance."," * Ilaria Bartolini, Paolo Ciaccia, and Marco Patella."," *"," * [Tags]: metric, string metric."," */","","/**"," * Function returning the bag distance."," *"," * @param  {mixed}  a - The first sequence."," * @param  {mixed}  b - The second sequence."," * @return {number}   - The bag distance."," */","function bag(a, b) {","  if (a === b) return 0;","","  var ma = Object.create(null),","      mb = Object.create(null);","","  var da = a.length,","      db = b.length;","","  if (!da) return db;","  if (!db) return da;","","  var longest = Math.max(da, db);","","  for (var i = 0; i < longest; i++) {","    if (i < da) {","      var value = a[i];","","      if (!ma[value]) ma[value] = 0;","      ma[value]++;","    }","","    if (i < db) {","      var _value = b[i];","","      if (!mb[_value]) mb[_value] = 0;","      mb[_value]++;","    }","  }","","  for (var k in ma) {","    if (mb[k]) da -= Math.min(ma[k], mb[k]);","  }","","  for (var _k in mb) {","    if (ma[_k]) db -= Math.min(mb[_k], ma[_k]);","  }","","  return Math.max(da, db);","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"32":1,"33":0,"35":0,"38":0,"41":0,"42":0,"44":0,"46":0,"47":0,"48":0,"50":0,"51":0,"54":0,"55":0,"57":0,"58":0,"62":0,"63":0,"66":0,"67":0,"70":0,"72":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/canberra.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/canberra.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"canberra","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":27,"column":0},"end":{"line":35,"column":1}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":129}},"5":{"start":{"line":28,"column":29},"end":{"line":28,"column":129}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":19}},"7":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":74}},"9":{"start":{"line":34,"column":3},"end":{"line":34,"column":19}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = canberra;","/**"," * Talisman metrics/distance/canberra"," * ==================================="," *"," * Function computing the Canberra distance."," *"," * [Reference]: https://en.wikipedia.org/wiki/Canberra_distance"," *"," * [Tags]: metric, vector space."," */","","/**"," * Function returning the Canberra distance between two vectors."," *"," * @param  {mixed}  a     - The first vector."," * @param  {mixed}  b     - The second vector."," * @return {number}       - The Canberra distance between a & b."," *"," * @throws {Error} The function expects vectors of same dimension."," */","function canberra(a, b) {","  if (a.length !== b.length) throw Error('talisman/metrics/distance/canberra: the given vectors are not of the same dimension.');","","  var distance = 0;","","  for (var i = 0, l = a.length; i < l; i++) {","    distance += Math.abs(a[i] - b[i]) / (Math.abs(a[i]) + Math.abs(b[i]));","  }return distance;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"27":1,"28":0,"30":0,"32":0,"33":0,"34":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/chebyshev.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/chebyshev.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"chebyshev","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":27,"column":0},"end":{"line":35,"column":1}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":130}},"5":{"start":{"line":28,"column":29},"end":{"line":28,"column":130}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":19}},"7":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":57}},"9":{"start":{"line":34,"column":3},"end":{"line":34,"column":19}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = chebyshev;","/**"," * Talisman metrics/distance/chebyshev"," * ===================================="," *"," * Function computing the Chebyshev distance."," *"," * [Reference]: https://en.wikipedia.org/wiki/Chebyshev_distance"," *"," * [Tags]: metric, vector space."," */","","/**"," * Function returning the Chebyshev distance between two vectors."," *"," * @param  {mixed}  a     - The first vector."," * @param  {mixed}  b     - The second vector."," * @return {number}       - The Chebyshev distance between a & b."," *"," * @throws {Error} The function expects vectors of same dimension."," */","function chebyshev(a, b) {","  if (a.length !== b.length) throw Error('talisman/metrics/distance/chebyshev: the given vectors are not of the same dimension.');","","  var distance = 0;","","  for (var i = 0, l = a.length; i < l; i++) {","    distance = Math.max(distance, Math.abs(a[i] - b[i]));","  }return distance;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"27":1,"28":0,"30":0,"32":0,"33":0,"34":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/cosine.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/cosine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":1,"18":1,"19":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"cosine","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}}},"2":{"name":"distance","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"4":{"start":{"line":28,"column":0},"end":{"line":45,"column":1}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":127}},"6":{"start":{"line":29,"column":29},"end":{"line":29,"column":127}},"7":{"start":{"line":31,"column":2},"end":{"line":33,"column":13}},"8":{"start":{"line":35,"column":2},"end":{"line":42,"column":3}},"9":{"start":{"line":36,"column":4},"end":{"line":37,"column":17}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":16}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":16}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":16}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":33}},"14":{"start":{"line":50,"column":0},"end":{"line":52,"column":1}},"15":{"start":{"line":51,"column":2},"end":{"line":51,"column":26}},"16":{"start":{"line":54,"column":0},"end":{"line":54,"column":28}},"17":{"start":{"line":55,"column":0},"end":{"line":55,"column":36}},"18":{"start":{"line":56,"column":0},"end":{"line":56,"column":47}},"19":{"start":{"line":57,"column":0},"end":{"line":57,"column":51}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.default = cosine;","exports.distance = distance;","/**"," * Talisman metrics/distance/cosine"," * ================================="," *"," * Function computing the cosine similarity."," *"," * [Reference]: https://en.wikipedia.org/wiki/Cosine_similarity"," *"," * [Tags]: semimetric."," */","","/**"," * Function returning the cosine similarity between two vectors."," *"," * @param  {mixed}  a - The first vector."," * @param  {mixed}  b - The second vector."," * @return {number}   - The cosine similarity between a & b."," *"," * @throws {Error} The function expects vectors of same dimension."," */","function cosine(a, b) {","  if (a.length !== b.length) throw Error('talisman/metrics/distance/cosine: the given vectors are not of the same dimension.');","","  var xx = 0,","      xy = 0,","      yy = 0;","","  for (var i = 0, l = a.length; i < l; i++) {","    var x = a[i],","        y = b[i];","","    xx += x * x;","    yy += y * y;","    xy += x * y;","  }","","  return xy / Math.sqrt(xx * yy);","}","","/**"," * Cosine distance is 1 - the cosine similarity."," */","function distance(a, b) {","  return 1 - cosine(a, b);","}","","exports.similarity = cosine;","module.exports = exports['default'];","exports['default'].distance = exports.distance;","exports['default'].similarity = exports.similarity;"],"l":{"3":1,"6":1,"7":1,"28":1,"29":0,"31":0,"35":0,"36":0,"39":0,"40":0,"41":0,"44":0,"50":1,"51":0,"54":1,"55":1,"56":1,"57":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/damerau-levenshtein.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/damerau-levenshtein.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"damerauLevenshtein","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}}},"2":{"name":"limited","line":136,"loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"4":{"start":{"line":30,"column":0},"end":{"line":124,"column":1}},"5":{"start":{"line":31,"column":2},"end":{"line":31,"column":24}},"6":{"start":{"line":31,"column":15},"end":{"line":31,"column":24}},"7":{"start":{"line":33,"column":2},"end":{"line":34,"column":20}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":21}},"9":{"start":{"line":36,"column":11},"end":{"line":36,"column":21}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":21}},"11":{"start":{"line":37,"column":11},"end":{"line":37,"column":21}},"12":{"start":{"line":40,"column":2},"end":{"line":47,"column":3}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":22}},"14":{"start":{"line":42,"column":4},"end":{"line":42,"column":16}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":16}},"16":{"start":{"line":44,"column":4},"end":{"line":44,"column":25}},"17":{"start":{"line":45,"column":4},"end":{"line":45,"column":18}},"18":{"start":{"line":46,"column":4},"end":{"line":46,"column":18}},"19":{"start":{"line":50,"column":2},"end":{"line":53,"column":3}},"20":{"start":{"line":51,"column":4},"end":{"line":51,"column":9}},"21":{"start":{"line":52,"column":4},"end":{"line":52,"column":9}},"22":{"start":{"line":55,"column":2},"end":{"line":55,"column":16}},"23":{"start":{"line":58,"column":2},"end":{"line":69,"column":3}},"24":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"25":{"start":{"line":62,"column":6},"end":{"line":62,"column":14}},"26":{"start":{"line":63,"column":5},"end":{"line":63,"column":17}},"27":{"start":{"line":64,"column":4},"end":{"line":64,"column":16}},"28":{"start":{"line":66,"column":4},"end":{"line":66,"column":23}},"29":{"start":{"line":66,"column":13},"end":{"line":66,"column":23}},"30":{"start":{"line":68,"column":4},"end":{"line":68,"column":35}},"31":{"start":{"line":71,"column":2},"end":{"line":72,"column":25}},"32":{"start":{"line":74,"column":2},"end":{"line":76,"column":3}},"33":{"start":{"line":75,"column":4},"end":{"line":75,"column":18}},"34":{"start":{"line":76,"column":3},"end":{"line":77,"column":18}},"35":{"start":{"line":80,"column":2},"end":{"line":121,"column":3}},"36":{"start":{"line":81,"column":4},"end":{"line":81,"column":30}},"37":{"start":{"line":83,"column":4},"end":{"line":85,"column":18}},"38":{"start":{"line":87,"column":4},"end":{"line":87,"column":21}},"39":{"start":{"line":88,"column":4},"end":{"line":88,"column":26}},"40":{"start":{"line":90,"column":4},"end":{"line":120,"column":5}},"41":{"start":{"line":91,"column":6},"end":{"line":92,"column":32}},"42":{"start":{"line":94,"column":6},"end":{"line":94,"column":56}},"43":{"start":{"line":96,"column":6},"end":{"line":96,"column":19}},"44":{"start":{"line":97,"column":6},"end":{"line":97,"column":36}},"45":{"start":{"line":98,"column":6},"end":{"line":98,"column":29}},"46":{"start":{"line":99,"column":6},"end":{"line":99,"column":19}},"47":{"start":{"line":101,"column":6},"end":{"line":117,"column":7}},"48":{"start":{"line":104,"column":8},"end":{"line":104,"column":43}},"49":{"start":{"line":104,"column":28},"end":{"line":104,"column":43}},"50":{"start":{"line":107,"column":8},"end":{"line":107,"column":45}},"51":{"start":{"line":107,"column":29},"end":{"line":107,"column":45}},"52":{"start":{"line":109,"column":8},"end":{"line":109,"column":18}},"53":{"start":{"line":112,"column":8},"end":{"line":116,"column":9}},"54":{"start":{"line":113,"column":10},"end":{"line":113,"column":34}},"55":{"start":{"line":115,"column":10},"end":{"line":115,"column":79}},"56":{"start":{"line":115,"column":47},"end":{"line":115,"column":79}},"57":{"start":{"line":119,"column":6},"end":{"line":119,"column":22}},"58":{"start":{"line":123,"column":2},"end":{"line":123,"column":17}},"59":{"start":{"line":136,"column":0},"end":{"line":247,"column":1}},"60":{"start":{"line":137,"column":2},"end":{"line":137,"column":24}},"61":{"start":{"line":137,"column":15},"end":{"line":137,"column":24}},"62":{"start":{"line":139,"column":2},"end":{"line":140,"column":20}},"63":{"start":{"line":142,"column":2},"end":{"line":142,"column":43}},"64":{"start":{"line":142,"column":11},"end":{"line":142,"column":43}},"65":{"start":{"line":143,"column":2},"end":{"line":143,"column":43}},"66":{"start":{"line":143,"column":11},"end":{"line":143,"column":43}},"67":{"start":{"line":146,"column":2},"end":{"line":153,"column":3}},"68":{"start":{"line":147,"column":4},"end":{"line":147,"column":23}},"69":{"start":{"line":148,"column":4},"end":{"line":148,"column":17}},"70":{"start":{"line":149,"column":4},"end":{"line":149,"column":17}},"71":{"start":{"line":150,"column":4},"end":{"line":150,"column":25}},"72":{"start":{"line":151,"column":4},"end":{"line":151,"column":18}},"73":{"start":{"line":152,"column":4},"end":{"line":152,"column":18}},"74":{"start":{"line":156,"column":2},"end":{"line":159,"column":3}},"75":{"start":{"line":157,"column":4},"end":{"line":157,"column":9}},"76":{"start":{"line":158,"column":4},"end":{"line":158,"column":9}},"77":{"start":{"line":161,"column":2},"end":{"line":161,"column":16}},"78":{"start":{"line":164,"column":2},"end":{"line":175,"column":3}},"79":{"start":{"line":167,"column":4},"end":{"line":169,"column":5}},"80":{"start":{"line":168,"column":6},"end":{"line":168,"column":14}},"81":{"start":{"line":169,"column":5},"end":{"line":169,"column":17}},"82":{"start":{"line":170,"column":4},"end":{"line":170,"column":16}},"83":{"start":{"line":172,"column":4},"end":{"line":172,"column":45}},"84":{"start":{"line":172,"column":13},"end":{"line":172,"column":45}},"85":{"start":{"line":174,"column":4},"end":{"line":174,"column":35}},"86":{"start":{"line":177,"column":2},"end":{"line":177,"column":21}},"87":{"start":{"line":179,"column":2},"end":{"line":179,"column":62}},"88":{"start":{"line":179,"column":16},"end":{"line":179,"column":25}},"89":{"start":{"line":179,"column":30},"end":{"line":179,"column":62}},"90":{"start":{"line":179,"column":46},"end":{"line":179,"column":62}},"91":{"start":{"line":181,"column":2},"end":{"line":182,"column":25}},"92":{"start":{"line":184,"column":2},"end":{"line":184,"column":17}},"93":{"start":{"line":185,"column":2},"end":{"line":187,"column":3}},"94":{"start":{"line":186,"column":4},"end":{"line":186,"column":18}},"95":{"start":{"line":187,"column":3},"end":{"line":189,"column":3}},"96":{"start":{"line":188,"column":4},"end":{"line":188,"column":20}},"97":{"start":{"line":189,"column":3},"end":{"line":190,"column":25}},"98":{"start":{"line":192,"column":2},"end":{"line":193,"column":17}},"99":{"start":{"line":195,"column":2},"end":{"line":196,"column":18}},"100":{"start":{"line":199,"column":2},"end":{"line":244,"column":3}},"101":{"start":{"line":200,"column":4},"end":{"line":200,"column":30}},"102":{"start":{"line":202,"column":4},"end":{"line":204,"column":17}},"103":{"start":{"line":206,"column":4},"end":{"line":206,"column":20}},"104":{"start":{"line":207,"column":4},"end":{"line":207,"column":25}},"105":{"start":{"line":208,"column":4},"end":{"line":208,"column":33}},"106":{"start":{"line":209,"column":4},"end":{"line":209,"column":30}},"107":{"start":{"line":211,"column":4},"end":{"line":241,"column":5}},"108":{"start":{"line":212,"column":6},"end":{"line":213,"column":32}},"109":{"start":{"line":215,"column":6},"end":{"line":215,"column":56}},"110":{"start":{"line":217,"column":6},"end":{"line":217,"column":19}},"111":{"start":{"line":218,"column":6},"end":{"line":218,"column":36}},"112":{"start":{"line":219,"column":6},"end":{"line":219,"column":29}},"113":{"start":{"line":220,"column":6},"end":{"line":220,"column":19}},"114":{"start":{"line":222,"column":6},"end":{"line":238,"column":7}},"115":{"start":{"line":225,"column":8},"end":{"line":225,"column":43}},"116":{"start":{"line":225,"column":28},"end":{"line":225,"column":43}},"117":{"start":{"line":228,"column":8},"end":{"line":228,"column":45}},"118":{"start":{"line":228,"column":29},"end":{"line":228,"column":45}},"119":{"start":{"line":230,"column":8},"end":{"line":230,"column":18}},"120":{"start":{"line":233,"column":8},"end":{"line":237,"column":9}},"121":{"start":{"line":234,"column":10},"end":{"line":234,"column":34}},"122":{"start":{"line":236,"column":10},"end":{"line":236,"column":79}},"123":{"start":{"line":236,"column":47},"end":{"line":236,"column":79}},"124":{"start":{"line":240,"column":6},"end":{"line":240,"column":22}},"125":{"start":{"line":243,"column":4},"end":{"line":243,"column":55}},"126":{"start":{"line":243,"column":39},"end":{"line":243,"column":55}},"127":{"start":{"line":246,"column":2},"end":{"line":246,"column":45}},"128":{"start":{"line":248,"column":0},"end":{"line":248,"column":36}},"129":{"start":{"line":249,"column":0},"end":{"line":249,"column":45}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"5":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":9},"end":{"line":50,"column":15}},{"start":{"line":50,"column":19},"end":{"line":50,"column":42}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"7":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":19}},{"start":{"line":58,"column":23},"end":{"line":58,"column":26}}]},"8":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":11},"end":{"line":61,"column":21}},{"start":{"line":61,"column":25},"end":{"line":61,"column":46}}]},"9":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"10":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":6},"end":{"line":101,"column":6}},{"start":{"line":101,"column":6},"end":{"line":101,"column":6}}]},"11":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"12":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"13":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":8}},{"start":{"line":112,"column":8},"end":{"line":112,"column":8}}]},"14":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":12},"end":{"line":112,"column":20}},{"start":{"line":112,"column":24},"end":{"line":112,"column":31}},{"start":{"line":112,"column":35},"end":{"line":112,"column":58}},{"start":{"line":112,"column":62},"end":{"line":112,"column":85}}]},"15":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":10},"end":{"line":115,"column":10}},{"start":{"line":115,"column":10},"end":{"line":115,"column":10}}]},"16":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"17":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"18":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":29},"end":{"line":142,"column":37}},{"start":{"line":142,"column":40},"end":{"line":142,"column":42}}]},"19":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"20":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":29},"end":{"line":143,"column":37}},{"start":{"line":143,"column":40},"end":{"line":143,"column":42}}]},"21":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"22":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":9},"end":{"line":156,"column":15}},{"start":{"line":156,"column":19},"end":{"line":156,"column":42}}]},"23":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]},"24":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":19}},{"start":{"line":164,"column":23},"end":{"line":164,"column":26}}]},"25":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":11},"end":{"line":167,"column":21}},{"start":{"line":167,"column":25},"end":{"line":167,"column":46}}]},"26":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"27":{"line":172,"type":"cond-expr","locations":[{"start":{"line":172,"column":31},"end":{"line":172,"column":39}},{"start":{"line":172,"column":42},"end":{"line":172,"column":44}}]},"28":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"29":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":30},"end":{"line":179,"column":30}},{"start":{"line":179,"column":30},"end":{"line":179,"column":30}}]},"30":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":27},"end":{"line":208,"column":28}},{"start":{"line":208,"column":31},"end":{"line":208,"column":32}}]},"31":{"line":209,"type":"cond-expr","locations":[{"start":{"line":209,"column":24},"end":{"line":209,"column":25}},{"start":{"line":209,"column":28},"end":{"line":209,"column":29}}]},"32":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":6}},{"start":{"line":222,"column":6},"end":{"line":222,"column":6}}]},"33":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":225,"column":8}},{"start":{"line":225,"column":8},"end":{"line":225,"column":8}}]},"34":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":8},"end":{"line":228,"column":8}},{"start":{"line":228,"column":8},"end":{"line":228,"column":8}}]},"35":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":8},"end":{"line":233,"column":8}},{"start":{"line":233,"column":8},"end":{"line":233,"column":8}}]},"36":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":12},"end":{"line":233,"column":19}},{"start":{"line":233,"column":23},"end":{"line":233,"column":30}},{"start":{"line":233,"column":34},"end":{"line":233,"column":57}},{"start":{"line":233,"column":61},"end":{"line":233,"column":84}}]},"37":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":10},"end":{"line":236,"column":10}},{"start":{"line":236,"column":10},"end":{"line":236,"column":10}}]},"38":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":4},"end":{"line":243,"column":4}},{"start":{"line":243,"column":4},"end":{"line":243,"column":4}}]},"39":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":15}},{"start":{"line":243,"column":19},"end":{"line":243,"column":37}}]},"40":{"line":246,"type":"cond-expr","locations":[{"start":{"line":246,"column":26},"end":{"line":246,"column":33}},{"start":{"line":246,"column":36},"end":{"line":246,"column":44}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.default = damerauLevenshtein;","exports.limited = limited;","/**"," * Talisman metrics/distance/damerau-levenshtein"," * =============================================="," *"," * Functions computing the Damerau-Levenshtein distance."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance"," *"," * [Original Code]:"," * http://blog.softwx.net/2015/01/optimizing-damerau-levenshtein_15.html"," *"," * [Tags]: metric, string metric."," */","","/**"," * Function returning the Damerau-Levenshtein distance between two sequences."," *"," * @param  {mixed}  a  - The first sequence to process."," * @param  {mixed}  b  - The second sequence to process."," * @return {number}    - The Damerau-Levenshtein distance between a & b."," */","function damerauLevenshtein(a, b) {","  if (a === b) return 0;","","  var la = a.length,","      lb = b.length;","","  if (!la) return lb;","  if (!lb) return la;","","  // Swapping the strings so that the shorter string is the first one.","  if (la > lb) {","    var _ref = [b, a];","    a = _ref[0];","    b = _ref[1];","    var _ref2 = [lb, la];","    la = _ref2[0];","    lb = _ref2[1];","  }","","  // Ignoring common suffix","  while (la > 0 && a[la - 1] === b[lb - 1]) {","    la--;","    lb--;","  }","","  var start = 0;","","  // If a common prefix exists of if a is a full b suffix","  if (a[0] === b[0] || !la) {","","    // Common prefix can also be ignored","    while (start < la && a[start] === b[start]) {","      start++;","    }la -= start;","    lb -= start;","","    if (!la) return lb;","","    b = b.slice(start, start + lb);","  }","","  var v0 = new Array(lb),","      v2 = new Array(lb);","","  for (var i = 0; i < lb; i++) {","    v0[i] = i + 1;","  }var charA = a[0],","      current = 0;","","  // Starting the nested loops","  for (var _i = 0; _i < la; _i++) {","    var previousCharA = charA;","","    var nextTranspositionCost = 0,","        charB = b[0],","        left = _i;","","    current = _i + 1;","    charA = a[start + _i];","","    for (var j = 0; j < lb; j++) {","      var above = current,","          previousCharB = charB;","","      var thisTranspositionCost = nextTranspositionCost;","","      charB = b[j];","      nextTranspositionCost = v2[j];","      v2[j] = current = left;","      left = v0[j];","","      if (charA !== charB) {","","        // Insertion","        if (left < current) current = left;","","        // Deletion","        if (above < current) current = above;","","        current++;","","        // Transposition","        if (_i !== 0 && j !== 0 && charA === previousCharB && charB === previousCharA) {","          thisTranspositionCost++;","","          if (thisTranspositionCost < current) current = thisTranspositionCost;","        }","      }","","      v0[j] = current;","    }","  }","","  return current;","}","","/**"," * Function returning the Damerau-Levenshtein distance between two sequences"," * but with a twist: this version will stop its computation if distance"," * exceed a given maximum and return Infinity."," *"," * @param  {number} max - Maximum distance."," * @param  {mixed}  a   - The first sequence to process."," * @param  {mixed}  b   - The second sequence to process."," * @return {number}     - The Damerau-Levenshtein distance between a & b or Infinity."," */","function limited(max, a, b) {","  if (a === b) return 0;","","  var la = a.length,","      lb = b.length;","","  if (!la) return lb > max ? Infinity : lb;","  if (!lb) return la > max ? Infinity : la;","","  // Swapping the strings so that the shorter string is the first one.","  if (la > lb) {","    var _ref3 = [b, a];","    a = _ref3[0];","    b = _ref3[1];","    var _ref4 = [lb, la];","    la = _ref4[0];","    lb = _ref4[1];","  }","","  // Ignoring common suffix","  while (la > 0 && a[la - 1] === b[lb - 1]) {","    la--;","    lb--;","  }","","  var start = 0;","","  // If a common prefix exists of if a is a full b suffix","  if (a[0] === b[0] || !la) {","","    // Common prefix can also be ignored","    while (start < la && a[start] === b[start]) {","      start++;","    }la -= start;","    lb -= start;","","    if (!la) return lb > max ? Infinity : lb;","","    b = b.slice(start, start + lb);","  }","","  var diff = lb - la;","","  if (max > lb) max = lb;else if (diff > max) return Infinity;","","  var v0 = new Array(lb),","      v2 = new Array(lb);","","  var i = void 0;","  for (i = 0; i < max; i++) {","    v0[i] = i + 1;","  }for (; i < lb; i++) {","    v0[i] = max + 1;","  }var offset = max - diff,","      haveMax = max < lb;","","  var jStart = 0,","      jEnd = max;","","  var charA = a[0],","      current = 0;","","  // Starting the nested loops","  for (i = 0; i < la; i++) {","    var previousCharA = charA;","","    var nextTranspositionCost = 0,","        charB = b[0],","        left = i;","","    current = i + 1;","    charA = a[start + i];","    jStart += i > offset ? 1 : 0;","    jEnd += jEnd < lb ? 1 : 0;","","    for (var j = jStart; j < jEnd; j++) {","      var above = current,","          previousCharB = charB;","","      var thisTranspositionCost = nextTranspositionCost;","","      charB = b[j];","      nextTranspositionCost = v2[j];","      v2[j] = current = left;","      left = v0[j];","","      if (charA !== charB) {","","        // Insertion","        if (left < current) current = left;","","        // Deletion","        if (above < current) current = above;","","        current++;","","        // Transposition","        if (i !== 0 && j !== 0 && charA === previousCharB && charB === previousCharA) {","          thisTranspositionCost++;","","          if (thisTranspositionCost < current) current = thisTranspositionCost;","        }","      }","","      v0[j] = current;","    }","","    if (haveMax && v0[i + diff] > max) return Infinity;","  }","","  return current <= max ? current : Infinity;","}","module.exports = exports[\"default\"];","exports[\"default\"].limited = exports.limited;"],"l":{"3":1,"6":1,"7":1,"30":1,"31":0,"33":0,"36":0,"37":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"50":0,"51":0,"52":0,"55":0,"58":0,"61":0,"62":0,"63":0,"64":0,"66":0,"68":0,"71":0,"74":0,"75":0,"76":0,"80":0,"81":0,"83":0,"87":0,"88":0,"90":0,"91":0,"94":0,"96":0,"97":0,"98":0,"99":0,"101":0,"104":0,"107":0,"109":0,"112":0,"113":0,"115":0,"119":0,"123":0,"136":1,"137":0,"139":0,"142":0,"143":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"156":0,"157":0,"158":0,"161":0,"164":0,"167":0,"168":0,"169":0,"170":0,"172":0,"174":0,"177":0,"179":0,"181":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"192":0,"195":0,"199":0,"200":0,"202":0,"206":0,"207":0,"208":0,"209":0,"211":0,"212":0,"215":0,"217":0,"218":0,"219":0,"220":0,"222":0,"225":0,"228":0,"230":0,"233":0,"234":0,"236":0,"240":0,"243":0,"246":0,"248":1,"249":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/dice.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/dice.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"dice","line":35,"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":31}}},"3":{"name":"distance","line":52,"loc":{"start":{"line":52,"column":15},"end":{"line":52,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":88}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":35,"column":0},"end":{"line":47,"column":2}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":24}},"10":{"start":{"line":38,"column":15},"end":{"line":38,"column":24}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":60}},"12":{"start":{"line":40,"column":51},"end":{"line":40,"column":60}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":30}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":30}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":65}},"16":{"start":{"line":52,"column":0},"end":{"line":54,"column":2}},"17":{"start":{"line":53,"column":2},"end":{"line":53,"column":24}},"18":{"start":{"line":59,"column":0},"end":{"line":59,"column":23}},"19":{"start":{"line":60,"column":0},"end":{"line":60,"column":21}},"20":{"start":{"line":61,"column":0},"end":{"line":61,"column":27}},"21":{"start":{"line":62,"column":0},"end":{"line":62,"column":26}},"22":{"start":{"line":63,"column":0},"end":{"line":63,"column":28}},"23":{"start":{"line":64,"column":0},"end":{"line":64,"column":36}},"24":{"start":{"line":65,"column":0},"end":{"line":65,"column":41}},"25":{"start":{"line":66,"column":0},"end":{"line":66,"column":53}},"26":{"start":{"line":67,"column":0},"end":{"line":67,"column":51}},"27":{"start":{"line":68,"column":0},"end":{"line":68,"column":47}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"5":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":20}},{"start":{"line":40,"column":24},"end":{"line":40,"column":38}},{"start":{"line":40,"column":42},"end":{"line":40,"column":49}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.distance = exports.similarity = exports.coefficient = exports.index = undefined;","","var _tversky = require('./tversky');","","var _tversky2 = _interopRequireDefault(_tversky);","","var _ngrams = require('../../tokenizers/ngrams');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Dice coefficient is just Tversky index with alpha = beta = 1 over the"," * sequences' bigrams."," */","/**"," * Talisman metrics/distance/dice"," * ==============================="," *"," * Functions computing the Dice coefficient."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient"," *"," * [Article]:"," * Dice, Lee R. (1945). \"Measures of the Amount of Ecologic Association"," * Between Species\". Ecology 26 (3): 297–302."," *"," * [Tags]: semimetric, string metric."," */","var dice = function dice(x, y) {","","  // Shortcuts","  if (x === y) return 1;","","  if (x.length === 1 && y.length === 1 && x !== y) return 0;","","  // Computing the sequences' bigrams","  x = (0, _ngrams.bigrams)(x);","  y = (0, _ngrams.bigrams)(y);","","  return (0, _tversky2.default)({ alpha: 0.5, beta: 0.5 }, x, y);","};","","/**"," * Dice distance is 1 - the Dice index."," */","var distance = function distance(x, y) {","  return 1 - dice(x, y);","};","","/**"," * Exporting."," */","exports.default = dice;","exports.index = dice;","exports.coefficient = dice;","exports.similarity = dice;","exports.distance = distance;","module.exports = exports['default'];","exports['default'].index = exports.index;","exports['default'].coefficient = exports.coefficient;","exports['default'].similarity = exports.similarity;","exports['default'].distance = exports.distance;"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"35":1,"38":0,"40":0,"43":0,"44":0,"46":0,"52":1,"53":0,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/tversky.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/tversky.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":1,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"I","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":17}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":28}}},"3":{"name":"R","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":17}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":28}}},"5":{"name":"asymmetricTversky","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":46}}},"6":{"name":"symmetricTversky","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":45}}},"7":{"name":"tversky","line":91,"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":26,"column":0},"end":{"line":34,"column":1}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":31}},"5":{"start":{"line":29,"column":2},"end":{"line":31,"column":5}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":44}},"7":{"start":{"line":30,"column":21},"end":{"line":30,"column":44}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":27}},"9":{"start":{"line":36,"column":0},"end":{"line":44,"column":1}},"10":{"start":{"line":37,"column":2},"end":{"line":37,"column":29}},"11":{"start":{"line":39,"column":2},"end":{"line":41,"column":5}},"12":{"start":{"line":40,"column":4},"end":{"line":40,"column":43}},"13":{"start":{"line":40,"column":22},"end":{"line":40,"column":43}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":25}},"15":{"start":{"line":55,"column":0},"end":{"line":59,"column":1}},"16":{"start":{"line":56,"column":2},"end":{"line":56,"column":20}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":56}},"18":{"start":{"line":70,"column":0},"end":{"line":78,"column":1}},"19":{"start":{"line":71,"column":2},"end":{"line":75,"column":37}},"20":{"start":{"line":77,"column":2},"end":{"line":77,"column":67}},"21":{"start":{"line":91,"column":0},"end":{"line":110,"column":1}},"22":{"start":{"line":92,"column":2},"end":{"line":92,"column":24}},"23":{"start":{"line":94,"column":2},"end":{"line":100,"column":78}},"24":{"start":{"line":103,"column":2},"end":{"line":103,"column":119}},"25":{"start":{"line":103,"column":29},"end":{"line":103,"column":119}},"26":{"start":{"line":106,"column":2},"end":{"line":106,"column":17}},"27":{"start":{"line":107,"column":2},"end":{"line":107,"column":17}},"28":{"start":{"line":109,"column":2},"end":{"line":109,"column":96}},"29":{"start":{"line":111,"column":0},"end":{"line":111,"column":36}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"3":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":11},"end":{"line":92,"column":17}},{"start":{"line":92,"column":21},"end":{"line":92,"column":23}}]},"4":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":44},"end":{"line":96,"column":45}},{"start":{"line":96,"column":48},"end":{"line":96,"column":61}}]},"5":{"line":98,"type":"cond-expr","locations":[{"start":{"line":98,"column":42},"end":{"line":98,"column":43}},{"start":{"line":98,"column":46},"end":{"line":98,"column":58}}]},"6":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":52},"end":{"line":100,"column":57}},{"start":{"line":100,"column":60},"end":{"line":100,"column":77}}]},"7":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"8":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":15}},{"start":{"line":103,"column":19},"end":{"line":103,"column":27}}]},"9":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":21},"end":{"line":109,"column":56}},{"start":{"line":109,"column":59},"end":{"line":109,"column":95}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = tversky;","/**"," * Talisman metrics/distance/tversky"," * =================================="," *"," * Functions computing the Tversky index."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Tversky_index"," *"," * [Article]:"," * Tversky, Amos (1977). \"Features of Similarity\"."," * Psychological Reviews 84 (4): 327–352."," *"," * [Tags]: metric, asymmetric, string metric."," */","","/**"," * Helpers"," */","function I(X, Y) {","  var intersection = new Set();","","  X.forEach(function (item) {","    if (Y.has(item)) intersection.add(item);","  });","","  return intersection.size;","}","","function R(X, Y) {","  var difference = new Set();","","  X.forEach(function (item) {","    if (!Y.has(item)) difference.add(item);","  });","","  return difference.size;","}","","/**"," * Function returning the asymmetric Tversky index between both sequences."," *"," * @param  {mixed}  x     - The first sequence to process."," * @param  {mixed}  y     - The second sequence to process."," * @param  {number} alpha - The alpha parameter."," * @param  {number} beta  - The beta parameter."," * @return {number}       - The asymmetric Tversky index."," */","function asymmetricTversky(x, y, alpha, beta) {","  var XIY = I(x, y);","","  return XIY / (XIY + alpha * R(x, y) + beta * R(y, x));","}","","/**"," * Function returning the symmetric Tversky index between both sequences."," *"," * @param  {mixed}  x     - The first sequence to process."," * @param  {mixed}  y     - The second sequence to process."," * @param  {number} alpha - The alpha parameter."," * @param  {number} beta  - The beta parameter."," * @return {number}       - The symmetric Tversky index."," */","function symmetricTversky(x, y, alpha, beta) {","  var XIY = I(x, y),","      XminusY = R(x, y),","      YminusX = R(y, x),","      a = Math.min(XminusY, YminusX),","      b = Math.max(XminusY, YminusX);","","  return XIY / (XIY + beta * (alpha * a + Math.pow(alpha - 1, b)));","}","","/**"," * Function returning the Tversky index according to given parameters between"," * both sequences."," *"," * @param  {object} params - The index's parameters."," * @param  {mixed}  x      - The first sequence to process."," * @param  {mixed}  y      - The second sequence to process."," * @return {number}        - The resulting Tversky index."," *"," * @throws {Error} The function expects both alpha & beta to be >= 0."," */","function tversky(params, x, y) {","  params = params || {};","","  var _params = params,","      _params$alpha = _params.alpha,","      alpha = _params$alpha === undefined ? 1 : _params$alpha,","      _params$beta = _params.beta,","      beta = _params$beta === undefined ? 1 : _params$beta,","      _params$symmetric = _params.symmetric,","      symmetric = _params$symmetric === undefined ? false : _params$symmetric;","","","  if (alpha < 0 || beta < 0) throw Error('talisman/metrics/distance/tversky: alpha & beta parameters should be >= 0.');","","  // Casting to sets","  x = new Set(x);","  y = new Set(y);","","  return symmetric ? symmetricTversky(x, y, alpha, beta) : asymmetricTversky(x, y, alpha, beta);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"26":1,"27":0,"29":0,"30":0,"33":0,"36":1,"37":0,"39":0,"40":0,"43":0,"55":1,"56":0,"58":0,"70":1,"71":0,"77":0,"91":1,"92":0,"94":0,"103":0,"106":0,"107":0,"109":0,"111":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/guth.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/guth.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"guth","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":28,"column":0},"end":{"line":57,"column":1}},"4":{"start":{"line":29,"column":2},"end":{"line":29,"column":24}},"5":{"start":{"line":29,"column":15},"end":{"line":29,"column":24}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":19}},"7":{"start":{"line":34,"column":2},"end":{"line":38,"column":3}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":12}},"9":{"start":{"line":36,"column":4},"end":{"line":36,"column":10}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":12}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":12}},"12":{"start":{"line":43,"column":2},"end":{"line":54,"column":3}},"13":{"start":{"line":46,"column":4},"end":{"line":49,"column":5}},"14":{"start":{"line":47,"column":6},"end":{"line":47,"column":18}},"15":{"start":{"line":48,"column":6},"end":{"line":48,"column":12}},"16":{"start":{"line":51,"column":4},"end":{"line":51,"column":328}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":20}},"18":{"start":{"line":53,"column":16},"end":{"line":53,"column":20}},"19":{"start":{"line":56,"column":2},"end":{"line":56,"column":11}},"20":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"4":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":16},"end":{"line":51,"column":29}},{"start":{"line":51,"column":33},"end":{"line":51,"column":43}},{"start":{"line":51,"column":47},"end":{"line":51,"column":64}},{"start":{"line":51,"column":68},"end":{"line":51,"column":78}},{"start":{"line":51,"column":82},"end":{"line":51,"column":99}},{"start":{"line":51,"column":103},"end":{"line":51,"column":104}},{"start":{"line":51,"column":108},"end":{"line":51,"column":125}},{"start":{"line":51,"column":129},"end":{"line":51,"column":130}},{"start":{"line":51,"column":134},"end":{"line":51,"column":151}},{"start":{"line":51,"column":155},"end":{"line":51,"column":165}},{"start":{"line":51,"column":169},"end":{"line":51,"column":186}},{"start":{"line":51,"column":190},"end":{"line":51,"column":200}},{"start":{"line":51,"column":204},"end":{"line":51,"column":221}},{"start":{"line":51,"column":225},"end":{"line":51,"column":235}},{"start":{"line":51,"column":239},"end":{"line":51,"column":249}},{"start":{"line":51,"column":253},"end":{"line":51,"column":274}},{"start":{"line":51,"column":278},"end":{"line":51,"column":288}},{"start":{"line":51,"column":292},"end":{"line":51,"column":302}},{"start":{"line":51,"column":306},"end":{"line":51,"column":327}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = guth;","/**"," * Talisman metrics/distance/guth"," * ==============================="," *"," * Implementation of the Guth distance."," *"," * [Article]:"," * Gloria J. A. Guth (1976) Surname Spellings and Computerized Record Linkage,"," * Historical Methods Newsletter, 10:1, 10-19"," * DOI: 10.1080/00182494.1976.10112645"," *"," * [Tags]: metric, vector space."," */","","/**"," * Function returning the Guth distance between two sequences."," *"," * @param  {mixed}  a - The first sequence to process."," * @param  {mixed}  b - The second sequence to process."," * @return {number}   - The Guth distance between a & b."," */","function guth(a, b) {","  if (a === b) return 0;","","  var tmp = void 0;","","  // Swapping so that a is the shortest","  if (a.length > b.length) {","    tmp = a;","    a = b;","    b = tmp;","  }","","  var d = 0;","","  // Iterating","  for (var i = 0, la = a.length, lb = b.length; i < lb; i++) {","","    // Early termination when b is really longer than a","    if (i > la + 1) {","      d += lb - i;","      break;","    }","","    var match = a[i] === b[i] || i + 1 < lb && a[i] === b[i + 1] || i + 2 < lb && a[i] === b[i + 2] || i && a[i] === b[i - 1] || i && a[i - 1] === b[i] || i + 1 < la && a[i + 1] === b[i] || i + 2 < la && a[i + 2] === b[i] || i + 1 < la && i + 1 < lb && a[i + 1] === b[i + 1] || i + 2 < la && i + 2 < lb && a[i + 2] === b[i + 2];","","    if (!match) d++;","  }","","  return d;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"28":1,"29":0,"31":0,"34":0,"35":0,"36":0,"37":0,"40":0,"43":0,"46":0,"47":0,"48":0,"51":0,"53":0,"56":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/hamming.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/hamming.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1,"39":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"hamming","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":23}}},"2":{"name":"normalizedDistance","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":34}}},"3":{"name":"normalizedSimilarity","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":36}}},"4":{"name":"bitwise","line":101,"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"6":{"start":{"line":35,"column":0},"end":{"line":48,"column":1}},"7":{"start":{"line":37,"column":2},"end":{"line":37,"column":24}},"8":{"start":{"line":37,"column":15},"end":{"line":37,"column":24}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":120}},"10":{"start":{"line":39,"column":29},"end":{"line":39,"column":120}},"11":{"start":{"line":41,"column":2},"end":{"line":41,"column":19}},"12":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"13":{"start":{"line":44,"column":4},"end":{"line":44,"column":34}},"14":{"start":{"line":44,"column":23},"end":{"line":44,"column":34}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":18}},"16":{"start":{"line":57,"column":0},"end":{"line":74,"column":1}},"17":{"start":{"line":59,"column":2},"end":{"line":59,"column":24}},"18":{"start":{"line":59,"column":15},"end":{"line":59,"column":24}},"19":{"start":{"line":61,"column":2},"end":{"line":67,"column":3}},"20":{"start":{"line":64,"column":4},"end":{"line":64,"column":22}},"21":{"start":{"line":65,"column":4},"end":{"line":65,"column":16}},"22":{"start":{"line":66,"column":4},"end":{"line":66,"column":16}},"23":{"start":{"line":67,"column":3},"end":{"line":67,"column":38}},"24":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"25":{"start":{"line":70,"column":4},"end":{"line":70,"column":34}},"26":{"start":{"line":70,"column":23},"end":{"line":70,"column":34}},"27":{"start":{"line":73,"column":2},"end":{"line":73,"column":29}},"28":{"start":{"line":83,"column":0},"end":{"line":85,"column":1}},"29":{"start":{"line":84,"column":2},"end":{"line":84,"column":38}},"30":{"start":{"line":101,"column":0},"end":{"line":111,"column":1}},"31":{"start":{"line":102,"column":2},"end":{"line":103,"column":18}},"32":{"start":{"line":105,"column":2},"end":{"line":108,"column":3}},"33":{"start":{"line":106,"column":4},"end":{"line":106,"column":8}},"34":{"start":{"line":107,"column":4},"end":{"line":107,"column":19}},"35":{"start":{"line":110,"column":2},"end":{"line":110,"column":11}},"36":{"start":{"line":112,"column":0},"end":{"line":112,"column":36}},"37":{"start":{"line":113,"column":0},"end":{"line":113,"column":67}},"38":{"start":{"line":114,"column":0},"end":{"line":114,"column":71}},"39":{"start":{"line":115,"column":0},"end":{"line":115,"column":45}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"2":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"5":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.default = hamming;","exports.normalizedDistance = normalizedDistance;","exports.normalizedSimilarity = normalizedSimilarity;","exports.bitwise = bitwise;","/**"," * Talisman metrics/distance/hamming"," * =================================="," *"," * Function computing the Hamming distance."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Hamming_distance"," *"," * [Article]:"," * Hamming, Richard W. (1950), \"Error detecting and error correcting codes\","," * Bell System Technical Journal 29 (2): 147–160"," *"," * [Tags]: metric, vector space, string metric."," */","","/**"," * Function returning the Hamming distance between two sequences."," *"," * @param  {mixed}  a - The first sequence to process."," * @param  {mixed}  b - The second sequence to process."," * @return {number}   - The Hamming distance between a & b."," *"," * @throws {Error} The function expects sequences of equal length."," */","function hamming(a, b) {","","  if (a === b) return 0;","","  if (a.length !== b.length) throw Error('talisman/metrics/distance/hamming: given sequences are not of equal length.');","","  var distance = 0;","","  for (var i = 0, l = a.length; i < l; i++) {","    if (a[i] !== b[i]) distance++;","  }","","  return distance;","}","","/**"," * Function returning the normalized Hamming distance between two sequences."," *"," * @param  {mixed}  a - The first sequence to process."," * @param  {mixed}  b - The second sequence to process."," * @return {number}   - The normalized Hamming distance between a & b."," */","function normalizedDistance(a, b) {","","  if (a === b) return 0;","","  if (a.length > b.length) {","    ;","","    var _ref = [b, a];","    a = _ref[0];","    b = _ref[1];","  }var distance = b.length - a.length;","","  for (var i = 0, l = a.length; i < l; i++) {","    if (a[i] !== b[i]) distance++;","  }","","  return distance / b.length;","}","","/**"," * Function returning the normalized Hamming similarity between two sequences."," *"," * @param  {mixed}  a - The first sequence to process."," * @param  {mixed}  b - The second sequence to process."," * @return {number}   - The normalized Hamming similarity between a & b."," */","function normalizedSimilarity(a, b) {","  return 1 - normalizedDistance(a, b);","}","","/**"," * Function returning the Hamming distance between two numbers using only"," * bitwise operators."," *"," * Note that this implementation uses a loop in O(k) time, k being the number"," * of bits set. There are other implementations possible using arithmetics but"," * litterature seems to agree that this does not speedup the computation and"," * since JavaScript does not have a direct access to processor low-level ops"," * such as popcount, this should be the most performant we can do now."," *"," * @param  {mixed}  a - The first number to process."," * @param  {mixed}  b - The second number to process."," * @return {number}   - The Hamming distance between a & b."," */","function bitwise(a, b) {","  var d = 0,","      xor = a ^ b;","","  while (xor) {","    d++;","    xor &= xor - 1;","  }","","  return d;","}","module.exports = exports['default'];","exports['default'].normalizedDistance = exports.normalizedDistance;","exports['default'].normalizedSimilarity = exports.normalizedSimilarity;","exports['default'].bitwise = exports.bitwise;"],"l":{"3":1,"6":1,"7":1,"8":1,"9":1,"35":1,"37":0,"39":0,"41":0,"43":0,"44":0,"47":0,"57":1,"59":0,"61":0,"64":0,"65":0,"66":0,"67":0,"69":0,"70":0,"73":0,"83":1,"84":0,"101":1,"102":0,"105":0,"106":0,"107":0,"110":0,"112":1,"113":1,"114":1,"115":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/identity.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/identity.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"distance","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":24}}},"2":{"name":"similarity","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"4":{"start":{"line":24,"column":0},"end":{"line":36,"column":1}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":52}},"6":{"start":{"line":25,"column":29},"end":{"line":25,"column":52}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"8":{"start":{"line":27,"column":15},"end":{"line":27,"column":24}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":38}},"10":{"start":{"line":29,"column":29},"end":{"line":29,"column":38}},"11":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"12":{"start":{"line":32,"column":4},"end":{"line":32,"column":32}},"13":{"start":{"line":32,"column":23},"end":{"line":32,"column":32}},"14":{"start":{"line":35,"column":2},"end":{"line":35,"column":11}},"15":{"start":{"line":45,"column":0},"end":{"line":57,"column":1}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":52}},"17":{"start":{"line":46,"column":29},"end":{"line":46,"column":52}},"18":{"start":{"line":48,"column":2},"end":{"line":48,"column":24}},"19":{"start":{"line":48,"column":15},"end":{"line":48,"column":24}},"20":{"start":{"line":50,"column":2},"end":{"line":50,"column":38}},"21":{"start":{"line":50,"column":29},"end":{"line":50,"column":38}},"22":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"23":{"start":{"line":53,"column":4},"end":{"line":53,"column":32}},"24":{"start":{"line":53,"column":23},"end":{"line":53,"column":32}},"25":{"start":{"line":56,"column":2},"end":{"line":56,"column":11}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":46},"end":{"line":25,"column":47}},{"start":{"line":25,"column":50},"end":{"line":25,"column":51}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"7":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":46},"end":{"line":46,"column":47}},{"start":{"line":46,"column":50},"end":{"line":46,"column":51}}]},"8":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"9":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"10":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.distance = distance;","exports.similarity = similarity;","/**"," * Talisman metrics/distance/identity"," * ==================================="," *"," * Identity distance/similarity."," *"," * [Tags]: metric, string metric."," */","","/**"," * Identity distance."," *"," * @param  {array|string} a - First sequence."," * @param  {array|string} b - Second sequence."," * @param  {number}         - Distance between 0 & 1."," */","function distance(a, b) {","  if (typeof a === 'string') return a === b ? 0 : 1;","","  if (a === b) return 0;","","  if (a.length !== b.length) return 1;","","  for (var i = 0, l = a.length; i < l; i++) {","    if (a[i] !== b[i]) return 1;","  }","","  return 0;","}","","/**"," * Identity similarity."," *"," * @param  {array|string} a - First sequence."," * @param  {array|string} b - Second sequence."," * @param  {number}         - Similarity between 0 & 1."," */","function similarity(a, b) {","  if (typeof a === 'string') return a === b ? 1 : 0;","","  if (a === b) return 1;","","  if (a.length !== b.length) return 0;","","  for (var i = 0, l = a.length; i < l; i++) {","    if (a[i] !== b[i]) return 0;","  }","","  return 1;","}"],"l":{"3":1,"6":1,"7":1,"24":1,"25":0,"27":0,"29":0,"31":0,"32":0,"35":0,"45":1,"46":0,"48":0,"50":0,"52":0,"53":0,"56":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/jaccard.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/jaccard.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"jaccard","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":23}}},"2":{"name":"distance","line":69,"loc":{"start":{"line":69,"column":15},"end":{"line":69,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":29,"column":0},"end":{"line":64,"column":1}},"3":{"start":{"line":30,"column":2},"end":{"line":30,"column":24}},"4":{"start":{"line":30,"column":15},"end":{"line":30,"column":24}},"5":{"start":{"line":32,"column":2},"end":{"line":33,"column":20}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":27}},"7":{"start":{"line":35,"column":18},"end":{"line":35,"column":27}},"8":{"start":{"line":37,"column":2},"end":{"line":38,"column":16}},"9":{"start":{"line":40,"column":2},"end":{"line":42,"column":16}},"10":{"start":{"line":44,"column":2},"end":{"line":49,"column":3}},"11":{"start":{"line":45,"column":4},"end":{"line":48,"column":5}},"12":{"start":{"line":46,"column":6},"end":{"line":46,"column":24}},"13":{"start":{"line":47,"column":6},"end":{"line":47,"column":14}},"14":{"start":{"line":51,"column":2},"end":{"line":58,"column":3}},"15":{"start":{"line":52,"column":4},"end":{"line":57,"column":5}},"16":{"start":{"line":53,"column":6},"end":{"line":53,"column":25}},"17":{"start":{"line":54,"column":6},"end":{"line":54,"column":14}},"18":{"start":{"line":56,"column":6},"end":{"line":56,"column":42}},"19":{"start":{"line":56,"column":38},"end":{"line":56,"column":42}},"20":{"start":{"line":61,"column":2},"end":{"line":61,"column":28}},"21":{"start":{"line":63,"column":2},"end":{"line":63,"column":15}},"22":{"start":{"line":69,"column":0},"end":{"line":71,"column":2}},"23":{"start":{"line":70,"column":2},"end":{"line":70,"column":27}},"24":{"start":{"line":76,"column":0},"end":{"line":76,"column":26}},"25":{"start":{"line":77,"column":0},"end":{"line":77,"column":24}},"26":{"start":{"line":78,"column":0},"end":{"line":78,"column":29}},"27":{"start":{"line":79,"column":0},"end":{"line":79,"column":28}},"28":{"start":{"line":80,"column":0},"end":{"line":80,"column":36}},"29":{"start":{"line":81,"column":0},"end":{"line":81,"column":41}},"30":{"start":{"line":82,"column":0},"end":{"line":82,"column":51}},"31":{"start":{"line":83,"column":0},"end":{"line":83,"column":47}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":9}},{"start":{"line":35,"column":13},"end":{"line":35,"column":16}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","/**"," * Talisman metrics/distance/jaccard"," * =================================="," *"," * Functions computing the Jaccard distance/similarity."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Jaccard_index"," *"," * [Article]:"," * Jaccard, Paul (1912), \"The distribution of the flora in the alpine zone\","," * New Phytologist 11: 37–50"," *"," * [Tags]: metric, string metric."," */","","/**"," * Function returning the Jaccard similarity score between two sequences."," *"," * @param  {mixed}  a - The first sequence."," * @param  {mixed}  b - The second sequence."," * @return {number}   - The Jaccard similarity score between a & b."," */","function jaccard(a, b) {","  if (a === b) return 1;","","  var la = a.length,","      lb = b.length;","","  if (!la || !lb) return 0;","","  var setA = {},","      setB = {};","","  var I = 0,","      sizeA = 0,","      sizeB = 0;","","  for (var i = 0; i < la; i++) {","    if (!setA.hasOwnProperty(a[i])) {","      setA[a[i]] = true;","      sizeA++;","    }","  }","","  for (var _i = 0; _i < lb; _i++) {","    if (!setB.hasOwnProperty(b[_i])) {","      setB[b[_i]] = true;","      sizeB++;","","      if (setA.hasOwnProperty(b[_i])) I++;","    }","  }","","  // Size of the union is sum of size of both sets minus intersection","  var U = sizeA + sizeB - I;","","  return I / U;","}","","/**"," * Jaccard distance is 1 - the Jaccard index."," */","var distance = function distance(x, y) {","  return 1 - jaccard(x, y);","};","","/**"," * Exporting."," */","exports.default = jaccard;","exports.index = jaccard;","exports.similarity = jaccard;","exports.distance = distance;","module.exports = exports[\"default\"];","exports[\"default\"].index = exports.index;","exports[\"default\"].similarity = exports.similarity;","exports[\"default\"].distance = exports.distance;"],"l":{"3":1,"29":1,"30":0,"32":0,"35":0,"37":0,"40":0,"44":0,"45":0,"46":0,"47":0,"51":0,"52":0,"53":0,"54":0,"56":0,"61":0,"63":0,"69":1,"70":0,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/jaro.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/jaro.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":1,"48":1,"49":1,"50":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"jaro","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":20}}},"2":{"name":"distance","line":113,"loc":{"start":{"line":113,"column":15},"end":{"line":113,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}},"5":{"start":{"line":18,"column":0},"end":{"line":89,"column":1}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":24}},"7":{"start":{"line":21,"column":15},"end":{"line":21,"column":24}},"8":{"start":{"line":23,"column":2},"end":{"line":24,"column":19}},"9":{"start":{"line":26,"column":2},"end":{"line":32,"column":3}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":12}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":12}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":12}},"13":{"start":{"line":31,"column":4},"end":{"line":31,"column":12}},"14":{"start":{"line":35,"column":2},"end":{"line":37,"column":51}},"15":{"start":{"line":39,"column":2},"end":{"line":39,"column":18}},"16":{"start":{"line":41,"column":2},"end":{"line":54,"column":3}},"17":{"start":{"line":42,"column":4},"end":{"line":44,"column":49}},"18":{"start":{"line":46,"column":4},"end":{"line":53,"column":5}},"19":{"start":{"line":47,"column":6},"end":{"line":52,"column":7}},"20":{"start":{"line":48,"column":8},"end":{"line":48,"column":23}},"21":{"start":{"line":49,"column":8},"end":{"line":49,"column":24}},"22":{"start":{"line":50,"column":8},"end":{"line":50,"column":18}},"23":{"start":{"line":51,"column":8},"end":{"line":51,"column":14}},"24":{"start":{"line":56,"column":2},"end":{"line":57,"column":31}},"25":{"start":{"line":59,"column":2},"end":{"line":59,"column":18}},"26":{"start":{"line":61,"column":2},"end":{"line":61,"column":9}},"27":{"start":{"line":62,"column":2},"end":{"line":67,"column":3}},"28":{"start":{"line":63,"column":4},"end":{"line":66,"column":5}},"29":{"start":{"line":64,"column":6},"end":{"line":64,"column":24}},"30":{"start":{"line":65,"column":6},"end":{"line":65,"column":11}},"31":{"start":{"line":69,"column":2},"end":{"line":69,"column":9}},"32":{"start":{"line":70,"column":2},"end":{"line":75,"column":3}},"33":{"start":{"line":71,"column":4},"end":{"line":74,"column":5}},"34":{"start":{"line":72,"column":6},"end":{"line":72,"column":25}},"35":{"start":{"line":73,"column":6},"end":{"line":73,"column":11}},"36":{"start":{"line":77,"column":2},"end":{"line":77,"column":25}},"37":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"38":{"start":{"line":79,"column":4},"end":{"line":79,"column":48}},"39":{"start":{"line":79,"column":31},"end":{"line":79,"column":48}},"40":{"start":{"line":83,"column":2},"end":{"line":83,"column":25}},"41":{"start":{"line":83,"column":16},"end":{"line":83,"column":25}},"42":{"start":{"line":85,"column":2},"end":{"line":86,"column":18}},"43":{"start":{"line":88,"column":2},"end":{"line":88,"column":57}},"44":{"start":{"line":113,"column":0},"end":{"line":115,"column":2}},"45":{"start":{"line":114,"column":2},"end":{"line":114,"column":24}},"46":{"start":{"line":120,"column":0},"end":{"line":120,"column":26}},"47":{"start":{"line":121,"column":0},"end":{"line":121,"column":28}},"48":{"start":{"line":122,"column":0},"end":{"line":122,"column":36}},"49":{"start":{"line":123,"column":0},"end":{"line":123,"column":51}},"50":{"start":{"line":124,"column":0},"end":{"line":124,"column":47}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":6}},{"start":{"line":47,"column":6},"end":{"line":47,"column":6}}]},"4":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":10},"end":{"line":47,"column":19}},{"start":{"line":47,"column":23},"end":{"line":47,"column":43}}]},"5":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"6":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"7":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.distance = exports.similarity = undefined;","exports.default = jaro;","","var _vectors = require('../../helpers/vectors');","","/**"," * Function returning the Jaro score between two sequences."," *"," * @param  {mixed}  a     - The first sequence."," * @param  {mixed}  b     - The second sequence."," * @return {number}       - The Jaro score between a & b."," */","function jaro(a, b) {","","  // Fast break","  if (a === b) return 1;","","  var max = void 0,","      min = void 0;","","  if (a.length > b.length) {","    max = a;","    min = b;","  } else {","    max = b;","    min = a;","  }","","  // Finding matches","  var range = Math.max((max.length / 2 | 0) - 1, 0),","      indexes = (0, _vectors.vec)(min.length, -1),","      flags = (0, _vectors.vec)(max.length, false);","","  var matches = 0;","","  for (var i = 0, l = min.length; i < l; i++) {","    var character = min[i],","        xi = Math.max(i - range, 0),","        xn = Math.min(i + range + 1, max.length);","","    for (var j = xi, _m = xn; j < _m; j++) {","      if (!flags[j] && character === max[j]) {","        indexes[i] = j;","        flags[j] = true;","        matches++;","        break;","      }","    }","  }","","  var ms1 = new Array(matches),","      ms2 = new Array(matches);","","  var si = void 0;","","  si = 0;","  for (var _i = 0, _l = min.length; _i < _l; _i++) {","    if (indexes[_i] !== -1) {","      ms1[si] = min[_i];","      si++;","    }","  }","","  si = 0;","  for (var _i2 = 0, _l2 = max.length; _i2 < _l2; _i2++) {","    if (flags[_i2]) {","      ms2[si] = max[_i2];","      si++;","    }","  }","","  var transpositions = 0;","  for (var _i3 = 0, _l3 = ms1.length; _i3 < _l3; _i3++) {","    if (ms1[_i3] !== ms2[_i3]) transpositions++;","  }","","  // Computing the distance","  if (!matches) return 0;","","  var t = transpositions / 2 | 0,","      m = matches;","","  return (m / a.length + m / b.length + (m - t) / m) / 3;","}","","/**"," * Jaro distance is 1 - the Jaro score."," */","/**"," * Talisman metrics/distance/jaro"," * ==============================="," *"," * Function computing the Jaro score."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance"," *"," * [Articles]:"," * Jaro, M. A. (1989). \"Advances in record linkage methodology as applied to"," * the 1985 census of Tampa Florida\"."," * Journal of the American Statistical Association 84 (406): 414–20"," *"," * Jaro, M. A. (1995). \"Probabilistic linkage of large public health data file\"."," * Statistics in Medicine 14 (5–7): 491–8."," *"," * [Tags]: semimetric, string metric."," */","var distance = function distance(a, b) {","  return 1 - jaro(a, b);","};","","/**"," * Exporting."," */","exports.similarity = jaro;","exports.distance = distance;","module.exports = exports['default'];","exports['default'].similarity = exports.similarity;","exports['default'].distance = exports.distance;"],"l":{"3":1,"6":1,"7":1,"9":1,"18":1,"21":0,"23":0,"26":0,"27":0,"28":0,"30":0,"31":0,"35":0,"39":0,"41":0,"42":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"56":0,"59":0,"61":0,"62":0,"63":0,"64":0,"65":0,"69":0,"70":0,"71":0,"72":0,"73":0,"77":0,"78":0,"79":0,"83":0,"85":0,"88":0,"113":1,"114":0,"120":1,"121":1,"122":1,"123":1,"124":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/jaro-winkler.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/jaro-winkler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":0,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"customJaroWinkler","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}}},"3":{"name":"distance","line":82,"loc":{"start":{"line":82,"column":15},"end":{"line":82,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":67}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":22,"column":0},"end":{"line":55,"column":1}},"8":{"start":{"line":23,"column":2},"end":{"line":23,"column":26}},"9":{"start":{"line":25,"column":2},"end":{"line":29,"column":88}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":126}},"11":{"start":{"line":32,"column":28},"end":{"line":32,"column":126}},"12":{"start":{"line":34,"column":2},"end":{"line":34,"column":160}},"13":{"start":{"line":34,"column":48},"end":{"line":34,"column":160}},"14":{"start":{"line":37,"column":2},"end":{"line":37,"column":24}},"15":{"start":{"line":37,"column":15},"end":{"line":37,"column":24}},"16":{"start":{"line":40,"column":2},"end":{"line":40,"column":37}},"17":{"start":{"line":42,"column":2},"end":{"line":42,"column":37}},"18":{"start":{"line":42,"column":27},"end":{"line":42,"column":37}},"19":{"start":{"line":44,"column":2},"end":{"line":44,"column":24}},"20":{"start":{"line":45,"column":2},"end":{"line":45,"column":12}},"21":{"start":{"line":47,"column":2},"end":{"line":47,"column":52}},"22":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"23":{"start":{"line":51,"column":4},"end":{"line":51,"column":38}},"24":{"start":{"line":51,"column":23},"end":{"line":51,"column":27}},"25":{"start":{"line":51,"column":32},"end":{"line":51,"column":38}},"26":{"start":{"line":54,"column":2},"end":{"line":54,"column":31}},"27":{"start":{"line":77,"column":0},"end":{"line":77,"column":53}},"28":{"start":{"line":82,"column":0},"end":{"line":84,"column":2}},"29":{"start":{"line":83,"column":2},"end":{"line":83,"column":31}},"30":{"start":{"line":89,"column":0},"end":{"line":89,"column":30}},"31":{"start":{"line":90,"column":0},"end":{"line":90,"column":35}},"32":{"start":{"line":91,"column":0},"end":{"line":91,"column":33}},"33":{"start":{"line":92,"column":0},"end":{"line":92,"column":28}},"34":{"start":{"line":93,"column":0},"end":{"line":93,"column":36}},"35":{"start":{"line":94,"column":0},"end":{"line":94,"column":43}},"36":{"start":{"line":95,"column":0},"end":{"line":95,"column":51}},"37":{"start":{"line":96,"column":0},"end":{"line":96,"column":47}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":19}},{"start":{"line":23,"column":23},"end":{"line":23,"column":25}}]},"4":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":61},"end":{"line":27,"column":64}},{"start":{"line":27,"column":67},"end":{"line":27,"column":88}}]},"5":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":60},"end":{"line":29,"column":63}},{"start":{"line":29,"column":66},"end":{"line":29,"column":87}}]},"6":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"7":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"8":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":24}},{"start":{"line":34,"column":28},"end":{"line":34,"column":46}}]},"9":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"10":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"11":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.distance = exports.similarity = exports.custom = undefined;","","var _jaro = require('./jaro');","","var _jaro2 = _interopRequireDefault(_jaro);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Function returning the Jaro-Winkler score between two sequences."," *"," * @param  {object} options - Custom options."," * @param  {mixed}  a       - The first sequence."," * @param  {mixed}  b       - The second sequence."," * @return {number}         - The Jaro-Winkler score between a & b."," */","function customJaroWinkler(options, a, b) {","  options = options || {};","","  var _options = options,","      _options$boostThresho = _options.boostThreshold,","      boostThreshold = _options$boostThresho === undefined ? 0.7 : _options$boostThresho,","      _options$scalingFacto = _options.scalingFactor,","      scalingFactor = _options$scalingFacto === undefined ? 0.1 : _options$scalingFacto;","","","  if (scalingFactor > 0.25) throw Error('talisman/metrics/distance/jaro-winkler: the scaling factor should not exceed 0.25.');","","  if (boostThreshold < 0 || boostThreshold > 1) throw Error('talisman/metrics/distance/jaro-winkler: the boost threshold should be comprised between 0 and 1.');","","  // Fast break","  if (a === b) return 1;","","  // Computing Jaro-Winkler score","  var dj = (0, _jaro2.default)(a, b);","","  if (dj < boostThreshold) return dj;","","  var p = scalingFactor;","  var l = 0;","","  var prefixLimit = Math.min(a.length, b.length, 4);","","  // Common prefix (up to 4 characters)","  for (var i = 0; i < prefixLimit; i++) {","    if (a[i] === b[i]) l++;else break;","  }","","  return dj + l * p * (1 - dj);","}","","/**"," * Jaro-Winkler standard function."," */","/**"," * Talisman metrics/distance/jaro-winkler"," * ======================================="," *"," * Function computing the Jaro-Winkler score."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance"," *"," * [Article]:"," * Winkler, W. E. (1990). \"String Comparator Metrics and Enhanced Decision Rules"," * in the Fellegi-Sunter Model of Record Linkage\"."," * Proceedings of the Section on Survey Research Methods"," * (American Statistical Association): 354–359."," *"," * [Tags]: semimetric, string metric."," */","var jaroWinkler = customJaroWinkler.bind(null, null);","","/**"," * Jaro-Winkler distance is 1 - the Jaro-Winkler score."," */","var distance = function distance(a, b) {","  return 1 - jaroWinkler(a, b);","};","","/**"," * Exporting."," */","exports.default = jaroWinkler;","exports.custom = customJaroWinkler;","exports.similarity = jaroWinkler;","exports.distance = distance;","module.exports = exports['default'];","exports['default'].custom = exports.custom;","exports['default'].similarity = exports.similarity;","exports['default'].distance = exports.distance;"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"22":1,"23":0,"25":0,"32":0,"34":0,"37":0,"40":0,"42":0,"44":0,"45":0,"47":0,"50":0,"51":0,"54":0,"77":1,"82":1,"83":0,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/lcs.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/lcs.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"similarity","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}}},"2":{"name":"distance","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"5":{"start":{"line":18,"column":0},"end":{"line":30,"column":1}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":24}},"7":{"start":{"line":19,"column":15},"end":{"line":19,"column":24}},"8":{"start":{"line":21,"column":2},"end":{"line":22,"column":20}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":27}},"10":{"start":{"line":24,"column":18},"end":{"line":24,"column":27}},"11":{"start":{"line":26,"column":2},"end":{"line":27,"column":50}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":32}},"13":{"start":{"line":47,"column":0},"end":{"line":49,"column":1}},"14":{"start":{"line":48,"column":2},"end":{"line":48,"column":30}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":9}},{"start":{"line":24,"column":13},"end":{"line":24,"column":16}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.similarity = similarity;","exports.distance = distance;","","var _suffixArray = require('mnemonist/suffix-array');","","/**"," * LCS similarity."," *"," * @param  {array|string} a - First sequence."," * @param  {array|string} b - Second sequence."," * @param  {number}         - Similarity between 0 & 1."," */","function similarity(a, b) {","  if (a === b) return 1;","","  var la = a.length,","      lb = b.length;","","  if (!la || !lb) return 0;","","  var gst = new _suffixArray.GeneralizedSuffixArray([a, b]),","      lcs = gst.longestCommonSubsequence().length;","","  return lcs / Math.max(la, lb);","}","","/**"," * LCS distance."," *"," * @param  {array|string} a - First sequence."," * @param  {array|string} b - Second sequence."," * @param  {number}         - Distance between 0 & 1."," */","/**"," * Talisman metrics/distance/lcs"," * =============================="," *"," * Function computing the Longest Common Subsequence distance/similarity."," *"," * [Tags]: metric, string metric."," */","function distance(a, b) {","  return 1 - similarity(a, b);","}"],"l":{"3":1,"6":1,"7":1,"9":1,"18":1,"19":0,"21":0,"24":0,"26":0,"29":0,"47":1,"48":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/length.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/length.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"similarity","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":26}}},"2":{"name":"distance","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"4":{"start":{"line":24,"column":0},"end":{"line":35,"column":1}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":24}},"6":{"start":{"line":25,"column":15},"end":{"line":25,"column":24}},"7":{"start":{"line":27,"column":2},"end":{"line":28,"column":20}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":27}},"9":{"start":{"line":30,"column":18},"end":{"line":30,"column":27}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":30}},"11":{"start":{"line":32,"column":15},"end":{"line":32,"column":30}},"12":{"start":{"line":34,"column":2},"end":{"line":34,"column":17}},"13":{"start":{"line":43,"column":0},"end":{"line":45,"column":1}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":30}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":9}},{"start":{"line":30,"column":13},"end":{"line":30,"column":16}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.similarity = similarity;","exports.distance = distance;","/**"," * Talisman metrics/distance/length"," * ================================="," *"," * Length distance/similarity. Basically just the ratio of the shorter length"," * over the longer length."," *"," * [Tags]: metric, string metric."," */","","/**"," * Length similarity."," *"," * @param  {array|string} a - First sequence."," * @param  {array|string} b - Second sequence."," */","function similarity(a, b) {","  if (a === b) return 1;","","  var la = a.length,","      lb = b.length;","","  if (!la || !lb) return 0;","","  if (la < lb) return la / lb;","","  return lb / la;","}","","/**"," * Length distance."," *"," * @param  {array|string} a - First sequence."," * @param  {array|string} b - Second sequence."," */","function distance(a, b) {","  return 1 - similarity(a, b);","}"],"l":{"3":1,"6":1,"7":1,"24":1,"25":0,"27":0,"30":0,"32":0,"34":0,"43":1,"44":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/levenshtein.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/levenshtein.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":1,"219":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"levenshteinForStrings","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":37}}},"2":{"name":"levenshtein","line":124,"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":27}}},"3":{"name":"limitedLevenshteinForStrings","line":219,"loc":{"start":{"line":219,"column":0},"end":{"line":219,"column":49}}},"4":{"name":"limited","line":329,"loc":{"start":{"line":329,"column":0},"end":{"line":329,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"4":{"start":{"line":23,"column":0},"end":{"line":24,"column":15}},"5":{"start":{"line":35,"column":0},"end":{"line":115,"column":1}},"6":{"start":{"line":36,"column":2},"end":{"line":36,"column":24}},"7":{"start":{"line":36,"column":15},"end":{"line":36,"column":24}},"8":{"start":{"line":38,"column":2},"end":{"line":38,"column":14}},"9":{"start":{"line":41,"column":2},"end":{"line":44,"column":3}},"10":{"start":{"line":42,"column":4},"end":{"line":42,"column":10}},"11":{"start":{"line":43,"column":4},"end":{"line":43,"column":12}},"12":{"start":{"line":46,"column":2},"end":{"line":47,"column":20}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":21}},"14":{"start":{"line":49,"column":11},"end":{"line":49,"column":21}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":21}},"16":{"start":{"line":50,"column":11},"end":{"line":50,"column":21}},"17":{"start":{"line":54,"column":2},"end":{"line":57,"column":3}},"18":{"start":{"line":55,"column":4},"end":{"line":55,"column":9}},"19":{"start":{"line":56,"column":4},"end":{"line":56,"column":9}},"20":{"start":{"line":59,"column":2},"end":{"line":59,"column":21}},"21":{"start":{"line":59,"column":11},"end":{"line":59,"column":21}},"22":{"start":{"line":61,"column":2},"end":{"line":61,"column":16}},"23":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"24":{"start":{"line":65,"column":4},"end":{"line":65,"column":12}},"25":{"start":{"line":66,"column":3},"end":{"line":66,"column":15}},"26":{"start":{"line":67,"column":2},"end":{"line":67,"column":14}},"27":{"start":{"line":69,"column":2},"end":{"line":69,"column":21}},"28":{"start":{"line":69,"column":11},"end":{"line":69,"column":21}},"29":{"start":{"line":71,"column":2},"end":{"line":71,"column":18}},"30":{"start":{"line":73,"column":2},"end":{"line":73,"column":12}},"31":{"start":{"line":75,"column":2},"end":{"line":78,"column":3}},"32":{"start":{"line":76,"column":4},"end":{"line":76,"column":47}},"33":{"start":{"line":77,"column":4},"end":{"line":77,"column":16}},"34":{"start":{"line":80,"column":2},"end":{"line":84,"column":17}},"35":{"start":{"line":87,"column":2},"end":{"line":112,"column":3}},"36":{"start":{"line":88,"column":4},"end":{"line":88,"column":13}},"37":{"start":{"line":89,"column":4},"end":{"line":89,"column":20}},"38":{"start":{"line":91,"column":4},"end":{"line":91,"column":36}},"39":{"start":{"line":93,"column":4},"end":{"line":111,"column":5}},"40":{"start":{"line":94,"column":6},"end":{"line":94,"column":22}},"41":{"start":{"line":96,"column":6},"end":{"line":96,"column":21}},"42":{"start":{"line":97,"column":6},"end":{"line":97,"column":19}},"43":{"start":{"line":99,"column":6},"end":{"line":108,"column":7}},"44":{"start":{"line":102,"column":8},"end":{"line":102,"column":43}},"45":{"start":{"line":102,"column":28},"end":{"line":102,"column":43}},"46":{"start":{"line":105,"column":8},"end":{"line":105,"column":45}},"47":{"start":{"line":105,"column":29},"end":{"line":105,"column":45}},"48":{"start":{"line":107,"column":8},"end":{"line":107,"column":18}},"49":{"start":{"line":110,"column":6},"end":{"line":110,"column":22}},"50":{"start":{"line":114,"column":2},"end":{"line":114,"column":17}},"51":{"start":{"line":124,"column":0},"end":{"line":205,"column":1}},"52":{"start":{"line":127,"column":2},"end":{"line":127,"column":64}},"53":{"start":{"line":127,"column":29},"end":{"line":127,"column":64}},"54":{"start":{"line":129,"column":2},"end":{"line":129,"column":24}},"55":{"start":{"line":129,"column":15},"end":{"line":129,"column":24}},"56":{"start":{"line":131,"column":2},"end":{"line":131,"column":14}},"57":{"start":{"line":134,"column":2},"end":{"line":137,"column":3}},"58":{"start":{"line":135,"column":4},"end":{"line":135,"column":10}},"59":{"start":{"line":136,"column":4},"end":{"line":136,"column":12}},"60":{"start":{"line":139,"column":2},"end":{"line":140,"column":20}},"61":{"start":{"line":142,"column":2},"end":{"line":142,"column":21}},"62":{"start":{"line":142,"column":11},"end":{"line":142,"column":21}},"63":{"start":{"line":143,"column":2},"end":{"line":143,"column":21}},"64":{"start":{"line":143,"column":11},"end":{"line":143,"column":21}},"65":{"start":{"line":147,"column":2},"end":{"line":150,"column":3}},"66":{"start":{"line":148,"column":4},"end":{"line":148,"column":9}},"67":{"start":{"line":149,"column":4},"end":{"line":149,"column":9}},"68":{"start":{"line":152,"column":2},"end":{"line":152,"column":21}},"69":{"start":{"line":152,"column":11},"end":{"line":152,"column":21}},"70":{"start":{"line":154,"column":2},"end":{"line":154,"column":16}},"71":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"72":{"start":{"line":158,"column":4},"end":{"line":158,"column":12}},"73":{"start":{"line":159,"column":3},"end":{"line":159,"column":15}},"74":{"start":{"line":160,"column":2},"end":{"line":160,"column":14}},"75":{"start":{"line":162,"column":2},"end":{"line":162,"column":21}},"76":{"start":{"line":162,"column":11},"end":{"line":162,"column":21}},"77":{"start":{"line":164,"column":2},"end":{"line":164,"column":18}},"78":{"start":{"line":166,"column":2},"end":{"line":166,"column":12}},"79":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"80":{"start":{"line":169,"column":4},"end":{"line":169,"column":16}},"81":{"start":{"line":170,"column":3},"end":{"line":174,"column":17}},"82":{"start":{"line":177,"column":2},"end":{"line":202,"column":3}},"83":{"start":{"line":178,"column":4},"end":{"line":178,"column":13}},"84":{"start":{"line":179,"column":4},"end":{"line":179,"column":20}},"85":{"start":{"line":181,"column":4},"end":{"line":181,"column":25}},"86":{"start":{"line":183,"column":4},"end":{"line":201,"column":5}},"87":{"start":{"line":184,"column":6},"end":{"line":184,"column":22}},"88":{"start":{"line":186,"column":6},"end":{"line":186,"column":21}},"89":{"start":{"line":187,"column":6},"end":{"line":187,"column":19}},"90":{"start":{"line":189,"column":6},"end":{"line":198,"column":7}},"91":{"start":{"line":192,"column":8},"end":{"line":192,"column":43}},"92":{"start":{"line":192,"column":28},"end":{"line":192,"column":43}},"93":{"start":{"line":195,"column":8},"end":{"line":195,"column":45}},"94":{"start":{"line":195,"column":29},"end":{"line":195,"column":45}},"95":{"start":{"line":197,"column":8},"end":{"line":197,"column":18}},"96":{"start":{"line":200,"column":6},"end":{"line":200,"column":22}},"97":{"start":{"line":204,"column":2},"end":{"line":204,"column":17}},"98":{"start":{"line":219,"column":0},"end":{"line":317,"column":1}},"99":{"start":{"line":220,"column":2},"end":{"line":220,"column":24}},"100":{"start":{"line":220,"column":15},"end":{"line":220,"column":24}},"101":{"start":{"line":222,"column":2},"end":{"line":222,"column":14}},"102":{"start":{"line":225,"column":2},"end":{"line":228,"column":3}},"103":{"start":{"line":226,"column":4},"end":{"line":226,"column":10}},"104":{"start":{"line":227,"column":4},"end":{"line":227,"column":12}},"105":{"start":{"line":230,"column":2},"end":{"line":231,"column":20}},"106":{"start":{"line":233,"column":2},"end":{"line":233,"column":43}},"107":{"start":{"line":233,"column":11},"end":{"line":233,"column":43}},"108":{"start":{"line":234,"column":2},"end":{"line":234,"column":43}},"109":{"start":{"line":234,"column":11},"end":{"line":234,"column":43}},"110":{"start":{"line":238,"column":2},"end":{"line":241,"column":3}},"111":{"start":{"line":239,"column":4},"end":{"line":239,"column":9}},"112":{"start":{"line":240,"column":4},"end":{"line":240,"column":9}},"113":{"start":{"line":243,"column":2},"end":{"line":243,"column":43}},"114":{"start":{"line":243,"column":11},"end":{"line":243,"column":43}},"115":{"start":{"line":245,"column":2},"end":{"line":245,"column":16}},"116":{"start":{"line":248,"column":2},"end":{"line":250,"column":3}},"117":{"start":{"line":249,"column":4},"end":{"line":249,"column":12}},"118":{"start":{"line":250,"column":3},"end":{"line":250,"column":15}},"119":{"start":{"line":251,"column":2},"end":{"line":251,"column":14}},"120":{"start":{"line":253,"column":2},"end":{"line":253,"column":43}},"121":{"start":{"line":253,"column":11},"end":{"line":253,"column":43}},"122":{"start":{"line":255,"column":2},"end":{"line":255,"column":21}},"123":{"start":{"line":257,"column":2},"end":{"line":257,"column":62}},"124":{"start":{"line":257,"column":16},"end":{"line":257,"column":25}},"125":{"start":{"line":257,"column":30},"end":{"line":257,"column":62}},"126":{"start":{"line":257,"column":46},"end":{"line":257,"column":62}},"127":{"start":{"line":259,"column":2},"end":{"line":259,"column":18}},"128":{"start":{"line":261,"column":2},"end":{"line":261,"column":12}},"129":{"start":{"line":263,"column":2},"end":{"line":266,"column":3}},"130":{"start":{"line":264,"column":4},"end":{"line":264,"column":47}},"131":{"start":{"line":265,"column":4},"end":{"line":265,"column":16}},"132":{"start":{"line":267,"column":2},"end":{"line":270,"column":3}},"133":{"start":{"line":268,"column":4},"end":{"line":268,"column":49}},"134":{"start":{"line":269,"column":4},"end":{"line":269,"column":20}},"135":{"start":{"line":272,"column":2},"end":{"line":273,"column":25}},"136":{"start":{"line":275,"column":2},"end":{"line":276,"column":17}},"137":{"start":{"line":278,"column":2},"end":{"line":282,"column":17}},"138":{"start":{"line":285,"column":2},"end":{"line":314,"column":3}},"139":{"start":{"line":286,"column":4},"end":{"line":286,"column":13}},"140":{"start":{"line":287,"column":4},"end":{"line":287,"column":20}},"141":{"start":{"line":289,"column":4},"end":{"line":289,"column":36}},"142":{"start":{"line":290,"column":4},"end":{"line":290,"column":33}},"143":{"start":{"line":291,"column":4},"end":{"line":291,"column":30}},"144":{"start":{"line":293,"column":4},"end":{"line":311,"column":5}},"145":{"start":{"line":294,"column":6},"end":{"line":294,"column":22}},"146":{"start":{"line":296,"column":6},"end":{"line":296,"column":21}},"147":{"start":{"line":297,"column":6},"end":{"line":297,"column":19}},"148":{"start":{"line":299,"column":6},"end":{"line":308,"column":7}},"149":{"start":{"line":302,"column":8},"end":{"line":302,"column":43}},"150":{"start":{"line":302,"column":28},"end":{"line":302,"column":43}},"151":{"start":{"line":305,"column":8},"end":{"line":305,"column":45}},"152":{"start":{"line":305,"column":29},"end":{"line":305,"column":45}},"153":{"start":{"line":307,"column":8},"end":{"line":307,"column":18}},"154":{"start":{"line":310,"column":6},"end":{"line":310,"column":22}},"155":{"start":{"line":313,"column":4},"end":{"line":313,"column":55}},"156":{"start":{"line":313,"column":39},"end":{"line":313,"column":55}},"157":{"start":{"line":316,"column":2},"end":{"line":316,"column":45}},"158":{"start":{"line":329,"column":0},"end":{"line":429,"column":1}},"159":{"start":{"line":332,"column":2},"end":{"line":332,"column":76}},"160":{"start":{"line":332,"column":29},"end":{"line":332,"column":76}},"161":{"start":{"line":334,"column":2},"end":{"line":334,"column":24}},"162":{"start":{"line":334,"column":15},"end":{"line":334,"column":24}},"163":{"start":{"line":336,"column":2},"end":{"line":336,"column":14}},"164":{"start":{"line":339,"column":2},"end":{"line":342,"column":3}},"165":{"start":{"line":340,"column":4},"end":{"line":340,"column":10}},"166":{"start":{"line":341,"column":4},"end":{"line":341,"column":12}},"167":{"start":{"line":344,"column":2},"end":{"line":345,"column":20}},"168":{"start":{"line":347,"column":2},"end":{"line":347,"column":43}},"169":{"start":{"line":347,"column":11},"end":{"line":347,"column":43}},"170":{"start":{"line":348,"column":2},"end":{"line":348,"column":43}},"171":{"start":{"line":348,"column":11},"end":{"line":348,"column":43}},"172":{"start":{"line":352,"column":2},"end":{"line":355,"column":3}},"173":{"start":{"line":353,"column":4},"end":{"line":353,"column":9}},"174":{"start":{"line":354,"column":4},"end":{"line":354,"column":9}},"175":{"start":{"line":357,"column":2},"end":{"line":357,"column":43}},"176":{"start":{"line":357,"column":11},"end":{"line":357,"column":43}},"177":{"start":{"line":359,"column":2},"end":{"line":359,"column":16}},"178":{"start":{"line":362,"column":2},"end":{"line":364,"column":3}},"179":{"start":{"line":363,"column":4},"end":{"line":363,"column":12}},"180":{"start":{"line":364,"column":3},"end":{"line":364,"column":15}},"181":{"start":{"line":365,"column":2},"end":{"line":365,"column":14}},"182":{"start":{"line":367,"column":2},"end":{"line":367,"column":43}},"183":{"start":{"line":367,"column":11},"end":{"line":367,"column":43}},"184":{"start":{"line":369,"column":2},"end":{"line":369,"column":21}},"185":{"start":{"line":371,"column":2},"end":{"line":371,"column":62}},"186":{"start":{"line":371,"column":16},"end":{"line":371,"column":25}},"187":{"start":{"line":371,"column":30},"end":{"line":371,"column":62}},"188":{"start":{"line":371,"column":46},"end":{"line":371,"column":62}},"189":{"start":{"line":373,"column":2},"end":{"line":373,"column":18}},"190":{"start":{"line":375,"column":2},"end":{"line":375,"column":12}},"191":{"start":{"line":377,"column":2},"end":{"line":379,"column":3}},"192":{"start":{"line":378,"column":4},"end":{"line":378,"column":16}},"193":{"start":{"line":380,"column":2},"end":{"line":382,"column":3}},"194":{"start":{"line":381,"column":4},"end":{"line":381,"column":22}},"195":{"start":{"line":384,"column":2},"end":{"line":385,"column":25}},"196":{"start":{"line":387,"column":2},"end":{"line":388,"column":17}},"197":{"start":{"line":390,"column":2},"end":{"line":394,"column":17}},"198":{"start":{"line":397,"column":2},"end":{"line":426,"column":3}},"199":{"start":{"line":398,"column":4},"end":{"line":398,"column":13}},"200":{"start":{"line":399,"column":4},"end":{"line":399,"column":20}},"201":{"start":{"line":401,"column":4},"end":{"line":401,"column":25}},"202":{"start":{"line":402,"column":4},"end":{"line":402,"column":33}},"203":{"start":{"line":403,"column":4},"end":{"line":403,"column":30}},"204":{"start":{"line":405,"column":4},"end":{"line":423,"column":5}},"205":{"start":{"line":406,"column":6},"end":{"line":406,"column":22}},"206":{"start":{"line":408,"column":6},"end":{"line":408,"column":21}},"207":{"start":{"line":409,"column":6},"end":{"line":409,"column":19}},"208":{"start":{"line":411,"column":6},"end":{"line":420,"column":7}},"209":{"start":{"line":414,"column":8},"end":{"line":414,"column":43}},"210":{"start":{"line":414,"column":28},"end":{"line":414,"column":43}},"211":{"start":{"line":417,"column":8},"end":{"line":417,"column":45}},"212":{"start":{"line":417,"column":29},"end":{"line":417,"column":45}},"213":{"start":{"line":419,"column":8},"end":{"line":419,"column":18}},"214":{"start":{"line":422,"column":6},"end":{"line":422,"column":22}},"215":{"start":{"line":425,"column":4},"end":{"line":425,"column":55}},"216":{"start":{"line":425,"column":39},"end":{"line":425,"column":55}},"217":{"start":{"line":428,"column":2},"end":{"line":428,"column":45}},"218":{"start":{"line":430,"column":0},"end":{"line":430,"column":36}},"219":{"start":{"line":431,"column":0},"end":{"line":431,"column":45}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"5":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":9},"end":{"line":54,"column":15}},{"start":{"line":54,"column":19},"end":{"line":54,"column":60}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"7":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":9},"end":{"line":64,"column":19}},{"start":{"line":64,"column":23},"end":{"line":64,"column":66}}]},"8":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"9":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":6}},{"start":{"line":99,"column":6},"end":{"line":99,"column":6}}]},"10":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":8}},{"start":{"line":102,"column":8},"end":{"line":102,"column":8}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"12":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"13":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"14":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"15":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"16":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"17":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":9},"end":{"line":147,"column":15}},{"start":{"line":147,"column":19},"end":{"line":147,"column":38}}]},"18":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"19":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":9},"end":{"line":157,"column":19}},{"start":{"line":157,"column":23},"end":{"line":157,"column":44}}]},"20":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"21":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":6},"end":{"line":189,"column":6}},{"start":{"line":189,"column":6},"end":{"line":189,"column":6}}]},"22":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":8},"end":{"line":192,"column":8}},{"start":{"line":192,"column":8},"end":{"line":192,"column":8}}]},"23":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":8}},{"start":{"line":195,"column":8},"end":{"line":195,"column":8}}]},"24":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"25":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":2},"end":{"line":225,"column":2}},{"start":{"line":225,"column":2},"end":{"line":225,"column":2}}]},"26":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"27":{"line":233,"type":"cond-expr","locations":[{"start":{"line":233,"column":29},"end":{"line":233,"column":37}},{"start":{"line":233,"column":40},"end":{"line":233,"column":42}}]},"28":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":2},"end":{"line":234,"column":2}},{"start":{"line":234,"column":2},"end":{"line":234,"column":2}}]},"29":{"line":234,"type":"cond-expr","locations":[{"start":{"line":234,"column":29},"end":{"line":234,"column":37}},{"start":{"line":234,"column":40},"end":{"line":234,"column":42}}]},"30":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":9},"end":{"line":238,"column":15}},{"start":{"line":238,"column":19},"end":{"line":238,"column":60}}]},"31":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"32":{"line":243,"type":"cond-expr","locations":[{"start":{"line":243,"column":29},"end":{"line":243,"column":37}},{"start":{"line":243,"column":40},"end":{"line":243,"column":42}}]},"33":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":9},"end":{"line":248,"column":19}},{"start":{"line":248,"column":23},"end":{"line":248,"column":66}}]},"34":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"35":{"line":253,"type":"cond-expr","locations":[{"start":{"line":253,"column":29},"end":{"line":253,"column":37}},{"start":{"line":253,"column":40},"end":{"line":253,"column":42}}]},"36":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"37":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":30},"end":{"line":257,"column":30}},{"start":{"line":257,"column":30},"end":{"line":257,"column":30}}]},"38":{"line":290,"type":"cond-expr","locations":[{"start":{"line":290,"column":27},"end":{"line":290,"column":28}},{"start":{"line":290,"column":31},"end":{"line":290,"column":32}}]},"39":{"line":291,"type":"cond-expr","locations":[{"start":{"line":291,"column":24},"end":{"line":291,"column":25}},{"start":{"line":291,"column":28},"end":{"line":291,"column":29}}]},"40":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":6}},{"start":{"line":299,"column":6},"end":{"line":299,"column":6}}]},"41":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":8},"end":{"line":302,"column":8}},{"start":{"line":302,"column":8},"end":{"line":302,"column":8}}]},"42":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8}},{"start":{"line":305,"column":8},"end":{"line":305,"column":8}}]},"43":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":4},"end":{"line":313,"column":4}},{"start":{"line":313,"column":4},"end":{"line":313,"column":4}}]},"44":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":8},"end":{"line":313,"column":15}},{"start":{"line":313,"column":19},"end":{"line":313,"column":37}}]},"45":{"line":316,"type":"cond-expr","locations":[{"start":{"line":316,"column":26},"end":{"line":316,"column":33}},{"start":{"line":316,"column":36},"end":{"line":316,"column":44}}]},"46":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":2},"end":{"line":332,"column":2}},{"start":{"line":332,"column":2},"end":{"line":332,"column":2}}]},"47":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":2},"end":{"line":334,"column":2}},{"start":{"line":334,"column":2},"end":{"line":334,"column":2}}]},"48":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":2},"end":{"line":339,"column":2}},{"start":{"line":339,"column":2},"end":{"line":339,"column":2}}]},"49":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":2},"end":{"line":347,"column":2}},{"start":{"line":347,"column":2},"end":{"line":347,"column":2}}]},"50":{"line":347,"type":"cond-expr","locations":[{"start":{"line":347,"column":29},"end":{"line":347,"column":37}},{"start":{"line":347,"column":40},"end":{"line":347,"column":42}}]},"51":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":2},"end":{"line":348,"column":2}},{"start":{"line":348,"column":2},"end":{"line":348,"column":2}}]},"52":{"line":348,"type":"cond-expr","locations":[{"start":{"line":348,"column":29},"end":{"line":348,"column":37}},{"start":{"line":348,"column":40},"end":{"line":348,"column":42}}]},"53":{"line":352,"type":"binary-expr","locations":[{"start":{"line":352,"column":9},"end":{"line":352,"column":15}},{"start":{"line":352,"column":19},"end":{"line":352,"column":38}}]},"54":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":2},"end":{"line":357,"column":2}},{"start":{"line":357,"column":2},"end":{"line":357,"column":2}}]},"55":{"line":357,"type":"cond-expr","locations":[{"start":{"line":357,"column":29},"end":{"line":357,"column":37}},{"start":{"line":357,"column":40},"end":{"line":357,"column":42}}]},"56":{"line":362,"type":"binary-expr","locations":[{"start":{"line":362,"column":9},"end":{"line":362,"column":19}},{"start":{"line":362,"column":23},"end":{"line":362,"column":44}}]},"57":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":2},"end":{"line":367,"column":2}},{"start":{"line":367,"column":2},"end":{"line":367,"column":2}}]},"58":{"line":367,"type":"cond-expr","locations":[{"start":{"line":367,"column":29},"end":{"line":367,"column":37}},{"start":{"line":367,"column":40},"end":{"line":367,"column":42}}]},"59":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":2},"end":{"line":371,"column":2}},{"start":{"line":371,"column":2},"end":{"line":371,"column":2}}]},"60":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":30},"end":{"line":371,"column":30}},{"start":{"line":371,"column":30},"end":{"line":371,"column":30}}]},"61":{"line":402,"type":"cond-expr","locations":[{"start":{"line":402,"column":27},"end":{"line":402,"column":28}},{"start":{"line":402,"column":31},"end":{"line":402,"column":32}}]},"62":{"line":403,"type":"cond-expr","locations":[{"start":{"line":403,"column":24},"end":{"line":403,"column":25}},{"start":{"line":403,"column":28},"end":{"line":403,"column":29}}]},"63":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":6},"end":{"line":411,"column":6}},{"start":{"line":411,"column":6},"end":{"line":411,"column":6}}]},"64":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":8},"end":{"line":414,"column":8}},{"start":{"line":414,"column":8},"end":{"line":414,"column":8}}]},"65":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":8},"end":{"line":417,"column":8}},{"start":{"line":417,"column":8},"end":{"line":417,"column":8}}]},"66":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":4},"end":{"line":425,"column":4}},{"start":{"line":425,"column":4},"end":{"line":425,"column":4}}]},"67":{"line":425,"type":"binary-expr","locations":[{"start":{"line":425,"column":8},"end":{"line":425,"column":15}},{"start":{"line":425,"column":19},"end":{"line":425,"column":37}}]},"68":{"line":428,"type":"cond-expr","locations":[{"start":{"line":428,"column":26},"end":{"line":428,"column":33}},{"start":{"line":428,"column":36},"end":{"line":428,"column":44}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.default = levenshtein;","exports.limited = limited;","/**"," * Talisman metrics/distance/levenshtein"," * ======================================"," *"," * Functions computing the Levenshtein distance."," *"," * [Reference]: https://en.wikipedia.org/wiki/Levenshtein_distance"," *"," * [Article]:"," * Levenshtein, Vladimir I. (February 1966). \"Binary codes capable of"," * correcting deletions, insertions, and reversals\"."," * Soviet Physics Doklady 10 (8): 707–710."," *"," * [Tags]: metric, string metric."," */","var VECTOR = [],","    CODES = [];","","/**"," * Function returning the Levenshtein distance between two sequences. This"," * version only works on strings and leverage the `.charCodeAt` method to"," * perform fast comparisons between 16 bits integers."," *"," * @param  {string}  a - The first string to process."," * @param  {string}  b - The second string to process."," * @return {number}    - The Levenshtein distance between a & b."," */","function levenshteinForStrings(a, b) {","  if (a === b) return 0;","","  var tmp = a;","","  // Swapping the strings so that the shorter string is the first one.","  if (a.length > b.length) {","    a = b;","    b = tmp;","  }","","  var la = a.length,","      lb = b.length;","","  if (!la) return lb;","  if (!lb) return la;","","  // Ignoring common suffix","  // NOTE: ~- is a fast - 1 operation, it does not work on big number though","  while (la > 0 && a.charCodeAt(~-la) === b.charCodeAt(~-lb)) {","    la--;","    lb--;","  }","","  if (!la) return lb;","","  var start = 0;","","  // Ignoring common prefix","  while (start < la && a.charCodeAt(start) === b.charCodeAt(start)) {","    start++;","  }la -= start;","  lb -= start;","","  if (!la) return lb;","","  var v0 = VECTOR;","","  var i = 0;","","  while (i < lb) {","    CODES[start + i] = b.charCodeAt(start + i);","    v0[i] = ++i;","  }","","  var current = 0,","      left = void 0,","      above = void 0,","      charA = void 0,","      j = void 0;","","  // Starting the nested loops","  for (i = 0; i < la; i++) {","    left = i;","    current = i + 1;","","    charA = a.charCodeAt(start + i);","","    for (j = 0; j < lb; j++) {","      above = current;","","      current = left;","      left = v0[j];","","      if (charA !== CODES[start + j]) {","","        // Insertion","        if (left < current) current = left;","","        // Deletion","        if (above < current) current = above;","","        current++;","      }","","      v0[j] = current;","    }","  }","","  return current;","}","","/**"," * Function returning the Levenshtein distance between two arbitrary sequences."," *"," * @param  {mixed}  a - The first sequence to process."," * @param  {mixed}  b - The second sequence to process."," * @return {number}   - The Levenshtein distance between a & b."," */","function levenshtein(a, b) {","","  // If the sequences are string, we use the optimized version","  if (typeof a === 'string') return levenshteinForStrings(a, b);","","  if (a === b) return 0;","","  var tmp = a;","","  // Swapping the strings so that the shorter string is the first one.","  if (a.length > b.length) {","    a = b;","    b = tmp;","  }","","  var la = a.length,","      lb = b.length;","","  if (!la) return lb;","  if (!lb) return la;","","  // Ignoring common suffix","  // NOTE: ~- is a fast - 1 operation, it does not work on big number though","  while (la > 0 && a[~-la] === b[~-lb]) {","    la--;","    lb--;","  }","","  if (!la) return lb;","","  var start = 0;","","  // Ignoring common prefix","  while (start < la && a[start] === b[start]) {","    start++;","  }la -= start;","  lb -= start;","","  if (!la) return lb;","","  var v0 = VECTOR;","","  var i = 0;","","  while (i < lb) {","    v0[i] = ++i;","  }var current = 0,","      left = void 0,","      above = void 0,","      charA = void 0,","      j = void 0;","","  // Starting the nested loops","  for (i = 0; i < la; i++) {","    left = i;","    current = i + 1;","","    charA = a[start + i];","","    for (j = 0; j < lb; j++) {","      above = current;","","      current = left;","      left = v0[j];","","      if (charA !== b[start + j]) {","","        // Insertion","        if (left < current) current = left;","","        // Deletion","        if (above < current) current = above;","","        current++;","      }","","      v0[j] = current;","    }","  }","","  return current;","}","","/**"," * Function returning the Levenshtein distance between two sequences"," * but with a twist: this version will stop its computation if distance"," * exceed a given maximum and return Infinity. This version only works on"," * strings and leverage the `.charCodeAt` method to perform fast comparisons"," * between 16 bits integers."," *"," * @param  {number} max - Maximum distance."," * @param  {string} a   - The first string to process."," * @param  {string} b   - The second string to process."," * @return {number}     - The Levenshtein distance between a & b or Infinity."," */","function limitedLevenshteinForStrings(max, a, b) {","  if (a === b) return 0;","","  var tmp = a;","","  // Swapping the strings so that the shorter string is the first one.","  if (a.length > b.length) {","    a = b;","    b = tmp;","  }","","  var la = a.length,","      lb = b.length;","","  if (!la) return lb > max ? Infinity : lb;","  if (!lb) return la > max ? Infinity : la;","","  // Ignoring common suffix","  // NOTE: ~- is a fast - 1 operation, it does not work on big number though","  while (la > 0 && a.charCodeAt(~-la) === b.charCodeAt(~-lb)) {","    la--;","    lb--;","  }","","  if (!la) return lb > max ? Infinity : lb;","","  var start = 0;","","  // Ignoring common prefix","  while (start < la && a.charCodeAt(start) === b.charCodeAt(start)) {","    start++;","  }la -= start;","  lb -= start;","","  if (!la) return lb > max ? Infinity : lb;","","  var diff = lb - la;","","  if (max > lb) max = lb;else if (diff > max) return Infinity;","","  var v0 = VECTOR;","","  var i = 0;","","  while (i < max) {","    CODES[start + i] = b.charCodeAt(start + i);","    v0[i] = ++i;","  }","  while (i < lb) {","    CODES[start + i] = b.charCodeAt(start + i++);","    v0[i] = max + 1;","  }","","  var offset = max - diff,","      haveMax = max < lb;","","  var jStart = 0,","      jEnd = max;","","  var current = 0,","      left = void 0,","      above = void 0,","      charA = void 0,","      j = void 0;","","  // Starting the nested loops","  for (i = 0; i < la; i++) {","    left = i;","    current = i + 1;","","    charA = a.charCodeAt(start + i);","    jStart += i > offset ? 1 : 0;","    jEnd += jEnd < lb ? 1 : 0;","","    for (j = jStart; j < jEnd; j++) {","      above = current;","","      current = left;","      left = v0[j];","","      if (charA !== CODES[start + j]) {","","        // Insertion","        if (left < current) current = left;","","        // Deletion","        if (above < current) current = above;","","        current++;","      }","","      v0[j] = current;","    }","","    if (haveMax && v0[i + diff] > max) return Infinity;","  }","","  return current <= max ? current : Infinity;","}","","/**"," * Function returning the Levenshtein distance between two sequences"," * but with a twist: this version will stop its computation if distance"," * exceed a given maximum and return Infinity."," *"," * @param  {number} max - Maximum distance."," * @param  {mixed}  a   - The first sequence to process."," * @param  {mixed}  b   - The second sequence to process."," * @return {number}     - The Levenshtein distance between a & b or Infinity."," */","function limited(max, a, b) {","","  // If the sequences are string, we use the optimized version","  if (typeof a === 'string') return limitedLevenshteinForStrings(max, a, b);","","  if (a === b) return 0;","","  var tmp = a;","","  // Swapping the strings so that the shorter string is the first one.","  if (a.length > b.length) {","    a = b;","    b = tmp;","  }","","  var la = a.length,","      lb = b.length;","","  if (!la) return lb > max ? Infinity : lb;","  if (!lb) return la > max ? Infinity : la;","","  // Ignoring common suffix","  // NOTE: ~- is a fast - 1 operation, it does not work on big number though","  while (la > 0 && a[~-la] === b[~-lb]) {","    la--;","    lb--;","  }","","  if (!la) return lb > max ? Infinity : lb;","","  var start = 0;","","  // Ignoring common prefix","  while (start < la && a[start] === b[start]) {","    start++;","  }la -= start;","  lb -= start;","","  if (!la) return lb > max ? Infinity : lb;","","  var diff = lb - la;","","  if (max > lb) max = lb;else if (diff > max) return Infinity;","","  var v0 = VECTOR;","","  var i = 0;","","  while (i < max) {","    v0[i] = ++i;","  }","  while (i < lb) {","    v0[i++] = max + 1;","  }","","  var offset = max - diff,","      haveMax = max < lb;","","  var jStart = 0,","      jEnd = max;","","  var current = 0,","      left = void 0,","      above = void 0,","      charA = void 0,","      j = void 0;","","  // Starting the nested loops","  for (i = 0; i < la; i++) {","    left = i;","    current = i + 1;","","    charA = a[start + i];","    jStart += i > offset ? 1 : 0;","    jEnd += jEnd < lb ? 1 : 0;","","    for (j = jStart; j < jEnd; j++) {","      above = current;","","      current = left;","      left = v0[j];","","      if (charA !== b[start + j]) {","","        // Insertion","        if (left < current) current = left;","","        // Deletion","        if (above < current) current = above;","","        current++;","      }","","      v0[j] = current;","    }","","    if (haveMax && v0[i + diff] > max) return Infinity;","  }","","  return current <= max ? current : Infinity;","}","module.exports = exports['default'];","exports['default'].limited = exports.limited;"],"l":{"3":1,"6":1,"7":1,"23":1,"35":1,"36":0,"38":0,"41":0,"42":0,"43":0,"46":0,"49":0,"50":0,"54":0,"55":0,"56":0,"59":0,"61":0,"64":0,"65":0,"66":0,"67":0,"69":0,"71":0,"73":0,"75":0,"76":0,"77":0,"80":0,"87":0,"88":0,"89":0,"91":0,"93":0,"94":0,"96":0,"97":0,"99":0,"102":0,"105":0,"107":0,"110":0,"114":0,"124":1,"127":0,"129":0,"131":0,"134":0,"135":0,"136":0,"139":0,"142":0,"143":0,"147":0,"148":0,"149":0,"152":0,"154":0,"157":0,"158":0,"159":0,"160":0,"162":0,"164":0,"166":0,"168":0,"169":0,"170":0,"177":0,"178":0,"179":0,"181":0,"183":0,"184":0,"186":0,"187":0,"189":0,"192":0,"195":0,"197":0,"200":0,"204":0,"219":1,"220":0,"222":0,"225":0,"226":0,"227":0,"230":0,"233":0,"234":0,"238":0,"239":0,"240":0,"243":0,"245":0,"248":0,"249":0,"250":0,"251":0,"253":0,"255":0,"257":0,"259":0,"261":0,"263":0,"264":0,"265":0,"267":0,"268":0,"269":0,"272":0,"275":0,"278":0,"285":0,"286":0,"287":0,"289":0,"290":0,"291":0,"293":0,"294":0,"296":0,"297":0,"299":0,"302":0,"305":0,"307":0,"310":0,"313":0,"316":0,"329":1,"332":0,"334":0,"336":0,"339":0,"340":0,"341":0,"344":0,"347":0,"348":0,"352":0,"353":0,"354":0,"357":0,"359":0,"362":0,"363":0,"364":0,"365":0,"367":0,"369":0,"371":0,"373":0,"375":0,"377":0,"378":0,"380":0,"381":0,"384":0,"387":0,"390":0,"397":0,"398":0,"399":0,"401":0,"402":0,"403":0,"405":0,"406":0,"408":0,"409":0,"411":0,"414":0,"417":0,"419":0,"422":0,"425":0,"428":0,"430":1,"431":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/manhattan.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/manhattan.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"manhattan","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":27,"column":0},"end":{"line":35,"column":1}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":130}},"5":{"start":{"line":28,"column":29},"end":{"line":28,"column":130}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":19}},"7":{"start":{"line":32,"column":2},"end":{"line":34,"column":3}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":38}},"9":{"start":{"line":34,"column":3},"end":{"line":34,"column":19}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = manhattan;","/**"," * Talisman metrics/distance/manhattan"," * ===================================="," *"," * Function computing the Manhattan distance."," *"," * [Reference]: https://en.wikipedia.org/wiki/Taxicab_geometry"," *"," * [Tags]: metric, vector space."," */","","/**"," * Function returning the Manhattan distance between two vectors."," *"," * @param  {mixed}  a     - The first vector."," * @param  {mixed}  b     - The second vector."," * @return {number}       - The Manhattan distance between a & b."," *"," * @throws {Error} The function expects vector of same dimensions."," */","function manhattan(a, b) {","  if (a.length !== b.length) throw Error('talisman/metrics/distance/manhattan: the given vectors are not of the same dimension.');","","  var distance = 0;","","  for (var i = 0, l = a.length; i < l; i++) {","    distance += Math.abs(a[i] - b[i]);","  }return distance;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"27":1,"28":0,"30":0,"32":0,"33":0,"34":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/minkowski.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/minkowski.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"minkowski","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"3":{"start":{"line":29,"column":0},"end":{"line":39,"column":1}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":99}},"5":{"start":{"line":30,"column":13},"end":{"line":30,"column":99}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":130}},"7":{"start":{"line":32,"column":29},"end":{"line":32,"column":130}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":14}},"9":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":46}},"11":{"start":{"line":38,"column":3},"end":{"line":38,"column":31}},"12":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = minkowski;","/**"," * Talisman metrics/distance/minkowski"," * ===================================="," *"," * Function computing the Minkowski distance."," *"," * [Reference]: https://en.wikipedia.org/wiki/Minkowski_distance"," *"," * [Tags]: metric, vector space."," */","","/**"," * Function returning the Minkowski distance between two vectors."," *"," * @param  {number} p     - The value for p."," * @param  {mixed}  a     - The first vector."," * @param  {mixed}  b     - The second vector."," * @return {number}       - The Minkowski distance between a & b."," *"," * @throw  {Error} The function expects a p value >= 1."," * @throws {Error} The function expects vectors of same dimension."," */","function minkowski(p, a, b) {","  if (p < 1) throw Error('talisman/metrics/distance/minkowski: the given p-value should be >= 1.');","","  if (a.length !== b.length) throw Error('talisman/metrics/distance/minkowski: the given vectors are not of the same dimension.');","","  var sum = 0;","","  for (var i = 0, l = a.length; i < l; i++) {","    sum += Math.pow(Math.abs(a[i] - b[i]), p);","  }return Math.pow(sum, 1 / p);","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"29":1,"30":0,"32":0,"34":0,"36":0,"37":0,"38":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/mlipns.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/mlipns.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"lipns","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":21}}},"2":{"name":"custom","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}},"4":{"start":{"line":34,"column":0},"end":{"line":51,"column":1}},"5":{"start":{"line":36,"column":2},"end":{"line":36,"column":24}},"6":{"start":{"line":36,"column":15},"end":{"line":36,"column":24}},"7":{"start":{"line":38,"column":2},"end":{"line":44,"column":3}},"8":{"start":{"line":41,"column":4},"end":{"line":41,"column":22}},"9":{"start":{"line":42,"column":4},"end":{"line":42,"column":16}},"10":{"start":{"line":43,"column":4},"end":{"line":43,"column":16}},"11":{"start":{"line":44,"column":3},"end":{"line":44,"column":38}},"12":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":34}},"14":{"start":{"line":47,"column":23},"end":{"line":47,"column":34}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":18}},"16":{"start":{"line":64,"column":0},"end":{"line":87,"column":1}},"17":{"start":{"line":65,"column":2},"end":{"line":66,"column":45}},"18":{"start":{"line":68,"column":2},"end":{"line":68,"column":24}},"19":{"start":{"line":68,"column":15},"end":{"line":68,"column":24}},"20":{"start":{"line":70,"column":2},"end":{"line":70,"column":39}},"21":{"start":{"line":70,"column":30},"end":{"line":70,"column":39}},"22":{"start":{"line":72,"column":2},"end":{"line":74,"column":51}},"23":{"start":{"line":76,"column":2},"end":{"line":82,"column":3}},"24":{"start":{"line":77,"column":4},"end":{"line":77,"column":99}},"25":{"start":{"line":77,"column":90},"end":{"line":77,"column":99}},"26":{"start":{"line":79,"column":4},"end":{"line":79,"column":17}},"27":{"start":{"line":80,"column":4},"end":{"line":80,"column":15}},"28":{"start":{"line":81,"column":4},"end":{"line":81,"column":20}},"29":{"start":{"line":84,"column":2},"end":{"line":84,"column":34}},"30":{"start":{"line":84,"column":25},"end":{"line":84,"column":34}},"31":{"start":{"line":86,"column":2},"end":{"line":86,"column":11}},"32":{"start":{"line":89,"column":0},"end":{"line":92,"column":3}},"33":{"start":{"line":94,"column":0},"end":{"line":94,"column":25}},"34":{"start":{"line":95,"column":0},"end":{"line":95,"column":36}},"35":{"start":{"line":96,"column":0},"end":{"line":96,"column":41}},"36":{"start":{"line":97,"column":0},"end":{"line":97,"column":43}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"4":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"5":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"6":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":15}},{"start":{"line":70,"column":19},"end":{"line":70,"column":28}}]},"7":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"8":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":25}},{"start":{"line":77,"column":29},"end":{"line":77,"column":88}}]},"9":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.lipns = lipns;","exports.custom = custom;","/**"," * Talisman metrics/distance/mlipns"," * ================================="," *"," * Function computing the Modified Language-Independent Product Name Search"," * similarity (MLIPNS)."," *"," * [Reference]:"," * http://www.sial.iias.spb.su/files/386-386-1-PB.pdf"," *"," * [Article]:"," * Shannaq, Boumedyen A. N. and Victor V. Alexandrov. 2010. \"Using Product"," * Similarity for Adding Business.\" Global Journal of Computer Science and"," * Technology. 10(12). 2-8."," *"," * [Tags]: metric."," */","","/**"," * Function returning the LIPNS distance between two sequences, which is"," * basically the Hamming distance tolerating strings of different lengths."," *"," * @param  {mixed}  a - The first sequence to process."," * @param  {mixed}  b - The second sequence to process."," * @return {number}   - The LIPNS similarity between a & b."," */","function lipns(a, b) {","","  if (a === b) return 0;","","  if (a.length > b.length) {","    ;","","    var _ref = [b, a];","    a = _ref[0];","    b = _ref[1];","  }var distance = b.length - a.length;","","  for (var i = 0, l = a.length; i < l; i++) {","    if (a[i] !== b[i]) distance++;","  }","","  return distance;","}","","/**"," * Function returning the MLIPNS similarity between two sequences."," *"," * @param  {object} settings        - Settings:"," * @param  {number}   threshold     - maximum similarity score below which"," *                                    strings  are considered similar."," * @param  {number}   maxMismatches - Maximum allowed mismatches."," * @param  {mixed}  a               - The first sequence to process."," * @param  {mixed}  b               - The second sequence to process."," * @return {number}                 - The MLIPNS similarity between a & b."," */","function custom(settings, a, b) {","  var threshold = settings.threshold,","      maxMismatches = settings.maxMismatches;","","  if (a === b) return 1;","","  if (!a.length || !b.length) return 0;","","  var mismatches = 0,","      distance = lipns(a, b),","      maximumLength = Math.max(a.length, b.length);","","  while (mismatches <= maxMismatches) {","    if (maximumLength < 1 || 1 - (maximumLength - distance) / maximumLength <= threshold) return 1;","","    mismatches++;","    distance--;","    maximumLength--;","  }","","  if (maximumLength < 1) return 1;","","  return 0;","}","","var mlipns = custom.bind(null, {","  threshold: 0.25,","  maxMismatches: 2","});","","exports.default = mlipns;","module.exports = exports[\"default\"];","exports[\"default\"].lipns = exports.lipns;","exports[\"default\"].custom = exports.custom;"],"l":{"3":1,"6":1,"7":1,"34":1,"36":0,"38":0,"41":0,"42":0,"43":0,"44":0,"46":0,"47":0,"50":0,"64":1,"65":0,"68":0,"70":0,"72":0,"76":0,"77":0,"79":0,"80":0,"81":0,"84":0,"86":0,"89":1,"94":1,"95":1,"96":1,"97":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/monge-elkan.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/monge-elkan.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":1,"25":1,"26":1,"27":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"mongeElkan","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":48}}},"2":{"name":"symmetric","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"4":{"start":{"line":31,"column":0},"end":{"line":51,"column":1}},"5":{"start":{"line":32,"column":2},"end":{"line":32,"column":34}},"6":{"start":{"line":32,"column":25},"end":{"line":32,"column":34}},"7":{"start":{"line":33,"column":2},"end":{"line":33,"column":49}},"8":{"start":{"line":33,"column":40},"end":{"line":33,"column":49}},"9":{"start":{"line":34,"column":2},"end":{"line":34,"column":49}},"10":{"start":{"line":34,"column":40},"end":{"line":34,"column":49}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":14}},"12":{"start":{"line":38,"column":2},"end":{"line":48,"column":3}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":24}},"14":{"start":{"line":41,"column":4},"end":{"line":45,"column":5}},"15":{"start":{"line":42,"column":6},"end":{"line":42,"column":51}},"16":{"start":{"line":44,"column":6},"end":{"line":44,"column":35}},"17":{"start":{"line":44,"column":23},"end":{"line":44,"column":35}},"18":{"start":{"line":47,"column":4},"end":{"line":47,"column":15}},"19":{"start":{"line":50,"column":2},"end":{"line":50,"column":29}},"20":{"start":{"line":57,"column":0},"end":{"line":62,"column":1}},"21":{"start":{"line":58,"column":2},"end":{"line":59,"column":49}},"22":{"start":{"line":61,"column":2},"end":{"line":61,"column":21}},"23":{"start":{"line":67,"column":0},"end":{"line":67,"column":28}},"24":{"start":{"line":69,"column":0},"end":{"line":69,"column":32}},"25":{"start":{"line":70,"column":0},"end":{"line":70,"column":36}},"26":{"start":{"line":71,"column":0},"end":{"line":71,"column":49}},"27":{"start":{"line":72,"column":0},"end":{"line":72,"column":51}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"3":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":20}},{"start":{"line":33,"column":24},"end":{"line":33,"column":38}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"5":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":20}},{"start":{"line":34,"column":24},"end":{"line":34,"column":38}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.default = mongeElkan;","exports.symmetric = symmetric;","/**"," * Talisman metrics/distance/monge-elkan"," * ======================================"," *"," * Implementation of the Monge-Elkan distance."," *"," * [Reference]: http://www.aaai.org/Papers/KDD/1996/KDD96-044.pdf"," *"," * [Article]:"," * Monge, Alvaro E. and Charles P. Elkan. 1996. \"The field matching problem:"," * Algorithms and applications.\" KDD-9 Proceedings."," *"," * [Tags]: metric, asymmetric, string metric."," */","","/**"," * Function computing the Monge-Elkan similarity."," *"," * @param  {function}     similarity - Similarity function to use."," * @param  {array|string} source     - Source sequence."," * @param  {array|string} target     - Target sequence."," * @return {number}                  - Monge-Elkan similarity."," */","function mongeElkan(similarity, source, target) {","  if (source === target) return 1;","  if (!source.length && !target.length) return 1;","  if (!source.length || !target.length) return 0;","","  var sum = 0;","","  for (var i = 0, l = source.length; i < l; i++) {","    var max = -Infinity;","","    for (var j = 0, m = target.length; j < m; j++) {","      var score = similarity(source[i], target[j]);","","      if (score > max) max = score;","    }","","    sum += max;","  }","","  return sum / source.length;","}","","/**"," * Function computing the symmetric Monge-Elkan similarity."," * This is achieved by computing the mean of me(a, b) & me(b, a)."," */","function symmetric(similarity, source, target) {","  var a = mongeElkan(similarity, source, target),","      b = mongeElkan(similarity, target, source);","","  return (a + b) / 2;","}","","/**"," * Aliases."," */","var similarity = mongeElkan;","","exports.similarity = similarity;","module.exports = exports[\"default\"];","exports[\"default\"].symmetric = exports.symmetric;","exports[\"default\"].similarity = exports.similarity;"],"l":{"3":1,"6":1,"7":1,"31":1,"32":0,"33":0,"34":0,"36":0,"38":0,"39":0,"41":0,"42":0,"44":0,"47":0,"50":0,"57":1,"58":0,"61":0,"67":1,"69":1,"70":1,"71":1,"72":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/overlap.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/overlap.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"overlap","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":23}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":12},"end":{"line":56,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":22,"column":0},"end":{"line":23,"column":18}},"4":{"start":{"line":32,"column":0},"end":{"line":61,"column":1}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":24}},"6":{"start":{"line":33,"column":15},"end":{"line":33,"column":24}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":25}},"8":{"start":{"line":35,"column":16},"end":{"line":35,"column":25}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":12}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":12}},"11":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":16}},"13":{"start":{"line":42,"column":3},"end":{"line":44,"column":3}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":17}},"15":{"start":{"line":44,"column":3},"end":{"line":44,"column":20}},"16":{"start":{"line":47,"column":2},"end":{"line":51,"column":3}},"17":{"start":{"line":48,"column":4},"end":{"line":48,"column":12}},"18":{"start":{"line":49,"column":4},"end":{"line":49,"column":10}},"19":{"start":{"line":50,"column":4},"end":{"line":50,"column":12}},"20":{"start":{"line":54,"column":2},"end":{"line":54,"column":12}},"21":{"start":{"line":56,"column":2},"end":{"line":58,"column":5}},"22":{"start":{"line":57,"column":4},"end":{"line":57,"column":25}},"23":{"start":{"line":57,"column":21},"end":{"line":57,"column":25}},"24":{"start":{"line":60,"column":2},"end":{"line":60,"column":20}},"25":{"start":{"line":62,"column":0},"end":{"line":62,"column":36}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":8}},{"start":{"line":35,"column":12},"end":{"line":35,"column":14}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = overlap;","/**"," * Talisman metrics/distance/overlap"," * =================================="," *"," * Function computing the overlap coefficient."," *"," * [Reference]: https://en.wikipedia.org/wiki/Overlap_coefficient"," *"," * [Tags]: metric, string metric."," */","","/**"," * Global sets used by the overlap function. This way, we don't need to"," * create objects when computing the coefficient."," */","var A = new Set(),","    B = new Set();","","/**"," * Function returning the overlap coefficient between two sequences."," *"," * @param  {mixed}  a     - The first sequence."," * @param  {mixed}  b     - The second sequence."," * @return {number}       - The overlap coefficient between a & b."," */","function overlap(a, b) {","  if (a === b) return 1;","","  if (!a || !b) return 0;","","  A.clear();","  B.clear();","","  for (var i = 0, l = a.length; i < l; i++) {","    A.add(a[i]);","  }for (var _i = 0, _l = b.length; _i < _l; _i++) {","    B.add(b[_i]);","  }var tmp = void 0;","","  // Let's find the shortest set","  if (A.size > B.size) {","    tmp = A;","    A = B;","    B = tmp;","  }","","  // Computing intersection of both sets","  var I = 0;","","  A.forEach(function (item) {","    if (B.has(item)) I++;","  });","","  return I / A.size;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"6":1,"22":1,"32":1,"33":0,"35":0,"37":0,"38":0,"40":0,"41":0,"42":0,"43":0,"44":0,"47":0,"48":0,"49":0,"50":0,"54":0,"56":0,"57":0,"60":0,"62":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/prefix.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/prefix.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"similarity","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":26}}},"2":{"name":"distance","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"4":{"start":{"line":26,"column":0},"end":{"line":46,"column":1}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"6":{"start":{"line":27,"column":15},"end":{"line":27,"column":24}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":39}},"8":{"start":{"line":29,"column":30},"end":{"line":29,"column":39}},"9":{"start":{"line":31,"column":2},"end":{"line":37,"column":3}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":22}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":16}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":16}},"13":{"start":{"line":37,"column":3},"end":{"line":37,"column":13}},"14":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"15":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"16":{"start":{"line":42,"column":4},"end":{"line":42,"column":29}},"17":{"start":{"line":42,"column":23},"end":{"line":42,"column":29}},"18":{"start":{"line":45,"column":2},"end":{"line":45,"column":15}},"19":{"start":{"line":55,"column":0},"end":{"line":57,"column":1}},"20":{"start":{"line":56,"column":2},"end":{"line":56,"column":30}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":15}},{"start":{"line":29,"column":19},"end":{"line":29,"column":28}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.similarity = similarity;","exports.distance = distance;","/**"," * Talisman metrics/distance/prefix"," * ================================="," *"," * Function computing the Prefix distance/similarity. This is basically the"," * ratio of the length of the common prefix to the length of the shortest"," * sequence."," *"," * [Tags]: metric, string metric."," */","","/**"," * Prefix similarity."," *"," * @param  {array|string} a - First sequence."," * @param  {array|string} b - Second sequence."," * @param  {number}         - Similarity between 0 & 1."," */","function similarity(a, b) {","  if (a === b) return 1;","","  if (!a.length || !b.length) return 0;","","  if (a.length > b.length) {","    ;","","    var _ref = [b, a];","    a = _ref[0];","    b = _ref[1];","  }var i = 0;","","  var l = a.length;","","  for (; i < l; i++) {","    if (a[i] !== b[i]) break;","  }","","  return i / l;","}","","/**"," * Prefix distance."," *"," * @param  {array|string} a - First sequence."," * @param  {array|string} b - Second sequence."," * @param  {number}         - Distance between 0 & 1."," */","function distance(a, b) {","  return 1 - similarity(a, b);","}"],"l":{"3":1,"6":1,"7":1,"26":1,"27":0,"29":0,"31":0,"34":0,"35":0,"36":0,"37":0,"39":0,"41":0,"42":0,"45":0,"55":1,"56":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/ratcliff-obershelp.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/ratcliff-obershelp.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"indexOf","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}}},"2":{"name":"matches","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":23}}},"3":{"name":"similarity","line":105,"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":26}}},"4":{"name":"distance","line":120,"loc":{"start":{"line":120,"column":0},"end":{"line":120,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"5":{"start":{"line":22,"column":0},"end":{"line":36,"column":1}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":68}},"7":{"start":{"line":23,"column":36},"end":{"line":23,"column":68}},"8":{"start":{"line":25,"column":2},"end":{"line":33,"column":3}},"9":{"start":{"line":26,"column":4},"end":{"line":32,"column":5}},"10":{"start":{"line":27,"column":6},"end":{"line":27,"column":10}},"11":{"start":{"line":29,"column":6},"end":{"line":29,"column":36}},"12":{"start":{"line":29,"column":19},"end":{"line":29,"column":36}},"13":{"start":{"line":31,"column":6},"end":{"line":31,"column":12}},"14":{"start":{"line":35,"column":2},"end":{"line":35,"column":12}},"15":{"start":{"line":68,"column":0},"end":{"line":96,"column":1}},"16":{"start":{"line":69,"column":2},"end":{"line":69,"column":21}},"17":{"start":{"line":71,"column":2},"end":{"line":71,"column":12}},"18":{"start":{"line":73,"column":2},"end":{"line":93,"column":3}},"19":{"start":{"line":74,"column":4},"end":{"line":74,"column":20}},"20":{"start":{"line":75,"column":4},"end":{"line":75,"column":20}},"21":{"start":{"line":77,"column":4},"end":{"line":77,"column":41}},"22":{"start":{"line":77,"column":32},"end":{"line":77,"column":41}},"23":{"start":{"line":79,"column":4},"end":{"line":80,"column":28}},"24":{"start":{"line":82,"column":4},"end":{"line":82,"column":26}},"25":{"start":{"line":82,"column":17},"end":{"line":82,"column":26}},"26":{"start":{"line":85,"column":4},"end":{"line":85,"column":16}},"27":{"start":{"line":88,"column":4},"end":{"line":89,"column":33}},"28":{"start":{"line":91,"column":4},"end":{"line":91,"column":55}},"29":{"start":{"line":92,"column":4},"end":{"line":92,"column":67}},"30":{"start":{"line":95,"column":2},"end":{"line":95,"column":11}},"31":{"start":{"line":105,"column":0},"end":{"line":111,"column":1}},"32":{"start":{"line":106,"column":2},"end":{"line":106,"column":24}},"33":{"start":{"line":106,"column":15},"end":{"line":106,"column":24}},"34":{"start":{"line":108,"column":2},"end":{"line":108,"column":39}},"35":{"start":{"line":108,"column":30},"end":{"line":108,"column":39}},"36":{"start":{"line":110,"column":2},"end":{"line":110,"column":51}},"37":{"start":{"line":120,"column":0},"end":{"line":122,"column":1}},"38":{"start":{"line":121,"column":2},"end":{"line":121,"column":30}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":6}},{"start":{"line":29,"column":6},"end":{"line":29,"column":6}}]},"4":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"5":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":17}},{"start":{"line":77,"column":21},"end":{"line":77,"column":30}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"7":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"8":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"9":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":15}},{"start":{"line":108,"column":19},"end":{"line":108,"column":28}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.similarity = similarity;","exports.distance = distance;","","var _suffixArray = require('mnemonist/suffix-array');","","/**"," * Abstract indexOf helper needed to find the given subsequence's starting"," * index in the given sequence. Note that this function may seem naive"," * because it misses cases when, for instance, the subsequence is not found"," * but this is of no concern because we use the function in cases when it's"," * not possible that the subsequence is not found."," *"," * @param  {mixed}  haystack - Target sequence."," * @param  {mixed}  needle   - Subsequence to find."," * @return {number}          - The starting index."," */","function indexOf(haystack, needle) {","  if (typeof haystack === 'string') return haystack.indexOf(needle);","","  for (var i = 0, j = 0, l = haystack.length, n = needle.length; i < l; i++) {","    if (haystack[i] === needle[j]) {","      j++;","","      if (j === n) return i - j + 1;","    } else {","      j = 0;","    }","  }","","  return -1;","}","","/**"," * Function returning the number of Ratcliff-Obershelp matches. This works"," * by finding the LCS of both strings before recursively finding the LCS"," * of the substrings both before and after the LCS in the initial strings and"," * so on..."," *"," * @param  {mixed}  a  - The first sequence to process."," * @param  {mixed}  b  - The second sequence to process."," * @return {number}    - The number of matches."," */","/**"," * Talisman metrics/distance/ratcliff-obershelp"," * ============================================="," *"," * Function computing the Ratcliff-Obershelp similarity/distance."," *"," * [References]:"," * https://xlinux.nist.gov/dads/HTML/ratcliffObershelp.html"," * http://collaboration.cmc.ec.gc.ca/science/rpn/biblio/ddj/Website/articles/DDJ/1988/8807/8807c/8807c.htm"," *"," * [Articles]:"," * PATTERN MATCHING: THE GESTALT APPROACH"," * John W. Ratcliff, David E. Metzener"," *"," * Paul E. Black, \"Ratcliff/Obershelp pattern recognition\", in Dictionary of"," * Algorithms and Data Structures [online], Vreda Pieterse and Paul E. Black,"," * eds. 17 December 2004."," *"," * [Tags]: string metric."," */","function matches(a, b) {","  var stack = [a, b];","","  var m = 0;","","  while (stack.length) {","    a = stack.pop();","    b = stack.pop();","","    if (!a.length || !b.length) continue;","","    var lcs = new _suffixArray.GeneralizedSuffixArray([a, b]).longestCommonSubsequence(),","        length = lcs.length;","","    if (!length) continue;","","    // Increasing matches","    m += length;","","    // Add to the stack","    var aStart = indexOf(a, lcs),","        bStart = indexOf(b, lcs);","","    stack.push(a.slice(0, aStart), b.slice(0, bStart));","    stack.push(a.slice(aStart + length), b.slice(bStart + length));","  }","","  return m;","}","","/**"," * Function returning the Ratcliff-Obershelp similarity between two sequences."," *"," * @param  {mixed}  a  - The first sequence to process."," * @param  {mixed}  b  - The second sequence to process."," * @return {number}    - The Ratcliff-Obershelp similarity between a & b."," */","function similarity(a, b) {","  if (a === b) return 1;","","  if (!a.length || !b.length) return 0;","","  return 2 * matches(a, b) / (a.length + b.length);","}","","/**"," * Function returning the Ratcliff-Obershelp distance between two sequences."," *"," * @param  {mixed}  a  - The first sequence to process."," * @param  {mixed}  b  - The second sequence to process."," * @return {number}    - The Ratcliff-Obershelp distance between a & b."," */","function distance(a, b) {","  return 1 - similarity(a, b);","}"],"l":{"3":1,"6":1,"7":1,"9":1,"22":1,"23":0,"25":0,"26":0,"27":0,"29":0,"31":0,"35":0,"68":1,"69":0,"71":0,"73":0,"74":0,"75":0,"77":0,"79":0,"82":0,"85":0,"88":0,"91":0,"92":0,"95":0,"105":1,"106":0,"108":0,"110":0,"120":1,"121":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/sift4.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/sift4.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":1,"99":1,"100":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"withoutTranspositions","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":61}}},"2":{"name":"withTranspositions","line":105,"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":58}}},"3":{"name":"custom","line":219,"loc":{"start":{"line":219,"column":0},"end":{"line":219,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":27,"column":0},"end":{"line":30,"column":2}},"4":{"start":{"line":41,"column":0},"end":{"line":94,"column":1}},"5":{"start":{"line":43,"column":2},"end":{"line":43,"column":24}},"6":{"start":{"line":43,"column":15},"end":{"line":43,"column":24}},"7":{"start":{"line":45,"column":2},"end":{"line":46,"column":20}},"8":{"start":{"line":48,"column":2},"end":{"line":48,"column":42}},"9":{"start":{"line":48,"column":18},"end":{"line":48,"column":42}},"10":{"start":{"line":50,"column":2},"end":{"line":53,"column":31}},"11":{"start":{"line":55,"column":2},"end":{"line":89,"column":3}},"12":{"start":{"line":56,"column":4},"end":{"line":77,"column":5}},"13":{"start":{"line":57,"column":6},"end":{"line":57,"column":29}},"14":{"start":{"line":59,"column":6},"end":{"line":59,"column":55}},"15":{"start":{"line":60,"column":6},"end":{"line":60,"column":31}},"16":{"start":{"line":62,"column":6},"end":{"line":62,"column":78}},"17":{"start":{"line":62,"column":31},"end":{"line":62,"column":78}},"18":{"start":{"line":64,"column":6},"end":{"line":76,"column":7}},"19":{"start":{"line":65,"column":8},"end":{"line":69,"column":9}},"20":{"start":{"line":66,"column":10},"end":{"line":66,"column":23}},"21":{"start":{"line":67,"column":10},"end":{"line":67,"column":33}},"22":{"start":{"line":68,"column":10},"end":{"line":68,"column":16}},"23":{"start":{"line":71,"column":8},"end":{"line":75,"column":9}},"24":{"start":{"line":72,"column":10},"end":{"line":72,"column":23}},"25":{"start":{"line":73,"column":10},"end":{"line":73,"column":33}},"26":{"start":{"line":74,"column":10},"end":{"line":74,"column":16}},"27":{"start":{"line":79,"column":4},"end":{"line":79,"column":14}},"28":{"start":{"line":80,"column":4},"end":{"line":80,"column":14}},"29":{"start":{"line":82,"column":4},"end":{"line":88,"column":5}},"30":{"start":{"line":83,"column":6},"end":{"line":83,"column":79}},"31":{"start":{"line":85,"column":6},"end":{"line":85,"column":59}},"32":{"start":{"line":85,"column":40},"end":{"line":85,"column":59}},"33":{"start":{"line":87,"column":6},"end":{"line":87,"column":54}},"34":{"start":{"line":87,"column":38},"end":{"line":87,"column":54}},"35":{"start":{"line":91,"column":2},"end":{"line":91,"column":51}},"36":{"start":{"line":93,"column":2},"end":{"line":93,"column":53}},"37":{"start":{"line":105,"column":0},"end":{"line":206,"column":1}},"38":{"start":{"line":108,"column":2},"end":{"line":108,"column":24}},"39":{"start":{"line":108,"column":15},"end":{"line":108,"column":24}},"40":{"start":{"line":110,"column":2},"end":{"line":111,"column":20}},"41":{"start":{"line":113,"column":2},"end":{"line":113,"column":42}},"42":{"start":{"line":113,"column":18},"end":{"line":113,"column":42}},"43":{"start":{"line":115,"column":2},"end":{"line":119,"column":25}},"44":{"start":{"line":121,"column":2},"end":{"line":121,"column":23}},"45":{"start":{"line":123,"column":2},"end":{"line":201,"column":3}},"46":{"start":{"line":125,"column":4},"end":{"line":181,"column":5}},"47":{"start":{"line":126,"column":6},"end":{"line":126,"column":29}},"48":{"start":{"line":128,"column":6},"end":{"line":129,"column":16}},"49":{"start":{"line":131,"column":6},"end":{"line":154,"column":7}},"50":{"start":{"line":132,"column":8},"end":{"line":132,"column":36}},"51":{"start":{"line":134,"column":8},"end":{"line":153,"column":9}},"52":{"start":{"line":136,"column":10},"end":{"line":136,"column":101}},"53":{"start":{"line":138,"column":10},"end":{"line":145,"column":11}},"54":{"start":{"line":139,"column":12},"end":{"line":139,"column":29}},"55":{"start":{"line":141,"column":12},"end":{"line":144,"column":13}},"56":{"start":{"line":142,"column":14},"end":{"line":142,"column":44}},"57":{"start":{"line":143,"column":14},"end":{"line":143,"column":31}},"58":{"start":{"line":147,"column":10},"end":{"line":147,"column":16}},"59":{"start":{"line":152,"column":10},"end":{"line":152,"column":102}},"60":{"start":{"line":152,"column":68},"end":{"line":152,"column":93}},"61":{"start":{"line":152,"column":98},"end":{"line":152,"column":102}},"62":{"start":{"line":156,"column":6},"end":{"line":160,"column":9}},"63":{"start":{"line":162,"column":6},"end":{"line":162,"column":55}},"64":{"start":{"line":163,"column":6},"end":{"line":163,"column":31}},"65":{"start":{"line":165,"column":6},"end":{"line":165,"column":78}},"66":{"start":{"line":165,"column":31},"end":{"line":165,"column":78}},"67":{"start":{"line":167,"column":6},"end":{"line":180,"column":7}},"68":{"start":{"line":169,"column":8},"end":{"line":173,"column":9}},"69":{"start":{"line":170,"column":10},"end":{"line":170,"column":28}},"70":{"start":{"line":171,"column":10},"end":{"line":171,"column":20}},"71":{"start":{"line":172,"column":10},"end":{"line":172,"column":16}},"72":{"start":{"line":175,"column":8},"end":{"line":179,"column":9}},"73":{"start":{"line":176,"column":10},"end":{"line":176,"column":20}},"74":{"start":{"line":177,"column":10},"end":{"line":177,"column":28}},"75":{"start":{"line":178,"column":10},"end":{"line":178,"column":16}},"76":{"start":{"line":183,"column":4},"end":{"line":183,"column":14}},"77":{"start":{"line":184,"column":4},"end":{"line":184,"column":14}},"78":{"start":{"line":188,"column":4},"end":{"line":192,"column":5}},"79":{"start":{"line":189,"column":6},"end":{"line":189,"column":55}},"80":{"start":{"line":190,"column":6},"end":{"line":190,"column":31}},"81":{"start":{"line":191,"column":6},"end":{"line":191,"column":53}},"82":{"start":{"line":194,"column":4},"end":{"line":200,"column":5}},"83":{"start":{"line":195,"column":6},"end":{"line":195,"column":96}},"84":{"start":{"line":197,"column":6},"end":{"line":197,"column":59}},"85":{"start":{"line":197,"column":40},"end":{"line":197,"column":59}},"86":{"start":{"line":199,"column":6},"end":{"line":199,"column":54}},"87":{"start":{"line":199,"column":38},"end":{"line":199,"column":54}},"88":{"start":{"line":203,"column":2},"end":{"line":203,"column":51}},"89":{"start":{"line":205,"column":2},"end":{"line":205,"column":70}},"90":{"start":{"line":219,"column":0},"end":{"line":235,"column":1}},"91":{"start":{"line":220,"column":2},"end":{"line":223,"column":45}},"92":{"start":{"line":225,"column":2},"end":{"line":226,"column":50}},"93":{"start":{"line":228,"column":2},"end":{"line":232,"column":3}},"94":{"start":{"line":229,"column":4},"end":{"line":229,"column":60}},"95":{"start":{"line":231,"column":4},"end":{"line":231,"column":48}},"96":{"start":{"line":234,"column":2},"end":{"line":234,"column":18}},"97":{"start":{"line":240,"column":0},"end":{"line":240,"column":34}},"98":{"start":{"line":241,"column":0},"end":{"line":241,"column":24}},"99":{"start":{"line":242,"column":0},"end":{"line":242,"column":36}},"100":{"start":{"line":243,"column":0},"end":{"line":243,"column":43}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"3":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":9}},{"start":{"line":48,"column":13},"end":{"line":48,"column":16}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":9},"end":{"line":55,"column":21}},{"start":{"line":55,"column":25},"end":{"line":55,"column":37}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"7":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":22},"end":{"line":64,"column":35}},{"start":{"line":64,"column":40},"end":{"line":64,"column":56}},{"start":{"line":64,"column":60},"end":{"line":64,"column":76}}]},"8":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"9":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":28}},{"start":{"line":65,"column":32},"end":{"line":65,"column":61}}]},"10":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"11":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":28}},{"start":{"line":71,"column":32},"end":{"line":71,"column":61}}]},"12":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"13":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":6}},{"start":{"line":85,"column":6},"end":{"line":85,"column":6}}]},"14":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":6},"end":{"line":87,"column":6}},{"start":{"line":87,"column":6},"end":{"line":87,"column":6}}]},"15":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"16":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"17":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":9}},{"start":{"line":113,"column":13},"end":{"line":113,"column":16}}]},"18":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":9},"end":{"line":123,"column":21}},{"start":{"line":123,"column":25},"end":{"line":123,"column":37}}]},"19":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"20":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":8}},{"start":{"line":134,"column":8},"end":{"line":134,"column":8}}]},"21":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":37}},{"start":{"line":134,"column":41},"end":{"line":134,"column":66}}]},"22":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":10},"end":{"line":138,"column":10}},{"start":{"line":138,"column":10},"end":{"line":138,"column":10}}]},"23":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":12}},{"start":{"line":141,"column":12},"end":{"line":141,"column":12}}]},"24":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":10},"end":{"line":152,"column":10}},{"start":{"line":152,"column":10},"end":{"line":152,"column":10}}]},"25":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":14},"end":{"line":152,"column":38}},{"start":{"line":152,"column":42},"end":{"line":152,"column":66}}]},"26":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":6},"end":{"line":165,"column":6}},{"start":{"line":165,"column":6},"end":{"line":165,"column":6}}]},"27":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":23},"end":{"line":167,"column":37}},{"start":{"line":167,"column":42},"end":{"line":167,"column":59}},{"start":{"line":167,"column":63},"end":{"line":167,"column":80}}]},"28":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":8}},{"start":{"line":169,"column":8},"end":{"line":169,"column":8}}]},"29":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":12},"end":{"line":169,"column":29}},{"start":{"line":169,"column":33},"end":{"line":169,"column":63}}]},"30":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":175,"column":8}},{"start":{"line":175,"column":8},"end":{"line":175,"column":8}}]},"31":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":12},"end":{"line":175,"column":29}},{"start":{"line":175,"column":33},"end":{"line":175,"column":63}}]},"32":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":188,"column":4}},{"start":{"line":188,"column":4},"end":{"line":188,"column":4}}]},"33":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":8},"end":{"line":188,"column":21}},{"start":{"line":188,"column":25},"end":{"line":188,"column":38}}]},"34":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"35":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":6},"end":{"line":197,"column":6}},{"start":{"line":197,"column":6},"end":{"line":197,"column":6}}]},"36":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":6}},{"start":{"line":199,"column":6},"end":{"line":199,"column":6}}]},"37":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":18},"end":{"line":220,"column":35}},{"start":{"line":220,"column":39},"end":{"line":220,"column":57}}]},"38":{"line":225,"type":"cond-expr","locations":[{"start":{"line":225,"column":28},"end":{"line":225,"column":46}},{"start":{"line":225,"column":49},"end":{"line":225,"column":70}}]},"39":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":228,"column":2}},{"start":{"line":228,"column":2},"end":{"line":228,"column":2}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.custom = custom;","/**"," * Talisman metrics/distance/sif4"," * ==============================="," *"," * Implementation of the SIFT4 distance which is a linear time approximation of"," * the Levenshtein or Damerau-Levenshtein distance."," *"," * [Reference]:"," * https://siderite.blogspot.com/2014/11/super-fast-and-accurate-string-distance.html"," *"," * [Author]: Siderite Zackwehdex"," *"," * [Tags]: string metric, asymmetric."," */","","// TODO: implement options of the most complex version.","","/**"," * Defaults."," */","var DEFAULTS = {","  transpositions: false,","  maxOffset: 5","};","","/**"," * Simplest version of the SIFT4 algorithm."," *"," * @param  {number}       maxOffset   - Search window."," * @param  {number}       maxDistance - Maximum distance before exiting."," * @param  {string|array} a           - First sequence."," * @param  {string|array} b           - Second sequence."," * @return {number}                   - The distance."," */","function withoutTranspositions(maxOffset, maxDistance, a, b) {","  // Early termination","  if (a === b) return 0;","","  var la = a.length,","      lb = b.length;","","  if (!la || !lb) return Math.max(la, lb);","","  var cursorA = 0,","      cursorB = 0,","      longestCommonSubsequence = 0,","      localCommonSubstring = 0;","","  while (cursorA < la && cursorB < lb) {","    if (a[cursorA] === b[cursorB]) {","      localCommonSubstring++;","    } else {","      longestCommonSubsequence += localCommonSubstring;","      localCommonSubstring = 0;","","      if (cursorA !== cursorB) cursorA = cursorB = Math.max(cursorA, cursorB);","","      for (var i = 0; i < maxOffset && (cursorA + i < la || cursorB + i < lb); i++) {","        if (cursorA + i < la && a[cursorA + i] === b[cursorB]) {","          cursorA += i;","          localCommonSubstring++;","          break;","        }","","        if (cursorB + i < lb && a[cursorA] === b[cursorB + i]) {","          cursorB += i;","          localCommonSubstring++;","          break;","        }","      }","    }","","    cursorA++;","    cursorB++;","","    if (maxDistance) {","      var tempDistance = Math.max(cursorA, cursorB) - longestCommonSubsequence;","","      if (tempDistance === maxDistance) return maxDistance;","","      if (tempDistance > maxDistance) return Infinity;","    }","  }","","  longestCommonSubsequence += localCommonSubstring;","","  return Math.max(la, lb) - longestCommonSubsequence;","}","","/**"," * Version of the SIFT4 function computing transpositions."," *"," * @param  {number}       maxOffset   - Search window."," * @param  {number}       maxDistance - Maximum distance before exiting."," * @param  {string|array} a           - First sequence."," * @param  {string|array} b           - Second sequence."," * @return {number}                   - The distance."," */","function withTranspositions(maxOffset, maxDistance, a, b) {","","  // Early termination","  if (a === b) return 0;","","  var la = a.length,","      lb = b.length;","","  if (!la || !lb) return Math.max(la, lb);","","  var cursorA = 0,","      cursorB = 0,","      longestCommonSubsequence = 0,","      localCommonSubstring = 0,","      transpositions = 0;","","  var offsetArray = [];","","  while (cursorA < la && cursorB < lb) {","","    if (a[cursorA] === b[cursorB]) {","      localCommonSubstring++;","","      var isTransposition = false,","          i = 0;","","      while (i < offsetArray.length) {","        var offset = offsetArray[i];","","        if (cursorA <= offset.cursorA || cursorB <= offset.cursorB) {","","          isTransposition = Math.abs(cursorB - cursorA) >= Math.abs(offset.cursorB - offset.cursorA);","","          if (isTransposition) {","            transpositions++;","          } else {","            if (!offset.isTransposition) {","              offset.isTransposition = true;","              transpositions++;","            }","          }","","          break;","        } else {","","          // NOTE: we could marginally enhance the performance of the algo","          // by using an object rather than splicing the array","          if (cursorA > offset.cursorB && cursorB > offset.cursorA) offsetArray.splice(i, 1);else i++;","        }","      }","","      offsetArray.push({","        cursorA: cursorA,","        cursorB: cursorB,","        isTransposition: isTransposition","      });","    } else {","      longestCommonSubsequence += localCommonSubstring;","      localCommonSubstring = 0;","","      if (cursorA !== cursorB) cursorA = cursorB = Math.min(cursorA, cursorB);","","      for (var _i = 0; _i < maxOffset && (cursorA + _i < la || cursorB + _i < lb); _i++) {","","        if (cursorA + _i < la && a[cursorA + _i] === b[cursorB]) {","          cursorA += _i - 1;","          cursorB--;","          break;","        }","","        if (cursorB + _i < lb && a[cursorA] === b[cursorB + _i]) {","          cursorA--;","          cursorB += _i - 1;","          break;","        }","      }","    }","","    cursorA++;","    cursorB++;","","    // NOTE: this was below maxDistance check in original implemenation but","    // this looked suspicious","    if (cursorA >= la || cursorB >= lb) {","      longestCommonSubsequence += localCommonSubstring;","      localCommonSubstring = 0;","      cursorA = cursorB = Math.min(cursorA, cursorB);","    }","","    if (maxDistance) {","      var tempDistance = Math.max(cursorA, cursorB) - longestCommonSubsequence + transpositions;","","      if (tempDistance === maxDistance) return maxDistance;","","      if (tempDistance > maxDistance) return Infinity;","    }","  }","","  longestCommonSubsequence += localCommonSubstring;","","  return Math.max(la, lb) - longestCommonSubsequence + transpositions;","}","","/**"," * Function computing the SIFT4 distance."," *"," * @param  {object}       options         - Options:"," * @param  {boolean}        [symmetric]   - Symmetric version of the algorithm."," * @param  {number}         [maxOffset]   - Search window."," * @param  {number}         [maxDistance] - Maximum distance before exiting."," * @param  {string|array} a               - First sequence."," * @param  {string|array} b               - Second sequence."," * @return {number}                       - The distance."," */","function custom(options, a, b) {","  var maxOffset = options.maxOffset || DEFAULTS.maxOffset,","      maxDistance = options.maxDistance,","      transpositions = options.transpositions === true,","      symmetric = options.symmetric === true;","","  var fn = transpositions ? withTranspositions : withoutTranspositions,","      distance = fn(maxOffset, maxDistance, a, b);","","  if (symmetric) {","    var reversedDistance = fn(maxOffset, maxDistance, b, a);","","    return Math.min(distance, reversedDistance);","  }","","  return distance;","}","","/**"," * Exporting default function."," */","var sift4 = custom.bind(null, {});","exports.default = sift4;","module.exports = exports[\"default\"];","exports[\"default\"].custom = exports.custom;"],"l":{"3":1,"6":1,"27":1,"41":1,"43":0,"45":0,"48":0,"50":0,"55":0,"56":0,"57":0,"59":0,"60":0,"62":0,"64":0,"65":0,"66":0,"67":0,"68":0,"71":0,"72":0,"73":0,"74":0,"79":0,"80":0,"82":0,"83":0,"85":0,"87":0,"91":0,"93":0,"105":1,"108":0,"110":0,"113":0,"115":0,"121":0,"123":0,"125":0,"126":0,"128":0,"131":0,"132":0,"134":0,"136":0,"138":0,"139":0,"141":0,"142":0,"143":0,"147":0,"152":0,"156":0,"162":0,"163":0,"165":0,"167":0,"169":0,"170":0,"171":0,"172":0,"175":0,"176":0,"177":0,"178":0,"183":0,"184":0,"188":0,"189":0,"190":0,"191":0,"194":0,"195":0,"197":0,"199":0,"203":0,"205":0,"219":1,"220":0,"225":0,"228":0,"229":0,"231":0,"234":0,"240":1,"241":1,"242":1,"243":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/smith-waterman.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/smith-waterman.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"SIMILARITY","line":21,"loc":{"start":{"line":21,"column":17},"end":{"line":21,"column":43}}},"2":{"name":"score","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"3":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":25}},"5":{"start":{"line":35,"column":0},"end":{"line":79,"column":1}},"6":{"start":{"line":36,"column":2},"end":{"line":39,"column":88}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":31}},"8":{"start":{"line":43,"column":15},"end":{"line":43,"column":31}},"9":{"start":{"line":45,"column":2},"end":{"line":46,"column":19}},"10":{"start":{"line":48,"column":2},"end":{"line":48,"column":25}},"11":{"start":{"line":48,"column":16},"end":{"line":48,"column":25}},"12":{"start":{"line":52,"column":2},"end":{"line":52,"column":27}},"13":{"start":{"line":54,"column":2},"end":{"line":54,"column":12}},"14":{"start":{"line":56,"column":2},"end":{"line":59,"column":3}},"15":{"start":{"line":57,"column":4},"end":{"line":57,"column":24}},"16":{"start":{"line":58,"column":4},"end":{"line":58,"column":16}},"17":{"start":{"line":61,"column":2},"end":{"line":76,"column":3}},"18":{"start":{"line":62,"column":4},"end":{"line":62,"column":20}},"19":{"start":{"line":64,"column":4},"end":{"line":75,"column":5}},"20":{"start":{"line":65,"column":6},"end":{"line":65,"column":49}},"21":{"start":{"line":67,"column":6},"end":{"line":71,"column":8}},"22":{"start":{"line":74,"column":6},"end":{"line":74,"column":45}},"23":{"start":{"line":74,"column":28},"end":{"line":74,"column":45}},"24":{"start":{"line":78,"column":2},"end":{"line":78,"column":11}},"25":{"start":{"line":84,"column":0},"end":{"line":84,"column":41}},"26":{"start":{"line":86,"column":0},"end":{"line":86,"column":32}},"27":{"start":{"line":87,"column":0},"end":{"line":87,"column":36}},"28":{"start":{"line":88,"column":0},"end":{"line":88,"column":41}}},"branchMap":{"1":{"line":22,"type":"cond-expr","locations":[{"start":{"line":22,"column":19},"end":{"line":22,"column":20}},{"start":{"line":22,"column":23},"end":{"line":22,"column":24}}]},"2":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":41},"end":{"line":37,"column":42}},{"start":{"line":37,"column":45},"end":{"line":37,"column":57}}]},"3":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":55},"end":{"line":39,"column":65}},{"start":{"line":39,"column":68},"end":{"line":39,"column":87}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"6":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":8}},{"start":{"line":48,"column":12},"end":{"line":48,"column":14}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.score = score;","/**"," * Talisman metrics/distance/smith-waterman"," * ========================================="," *"," * Functions computing the Smith-Waterman distance."," *"," * [Reference]: https://en.wikipedia.org/wiki/Smith%E2%80%93Waterman_algorithm"," *"," * [Article]:"," * Smith, Temple F. & Waterman, Michael S. (1981). \"Identification of Common"," * Molecular Subsequences\" (PDF). Journal of Molecular Biology. 147: 195–197."," *"," * [Tags]: metric, string metric."," */","var SIMILARITY = function SIMILARITY(a, b) {","  return a === b ? 1 : 0;","};","","/**"," * Function returning the Smith-Waterman score between two sequences."," *"," * @param  {object}   options      - Options:"," * @param  {number}     gap        - Gap cost."," * @param  {function}   similarity - Similarity function."," * @param  {mixed}    a            - The first sequence to process."," * @param  {mixed}    b            - The second sequence to process."," * @return {number}                - The Smith-Waterman score between a & b."," */","function score(options, a, b) {","  var _options$gap = options.gap,","      gap = _options$gap === undefined ? 1 : _options$gap,","      _options$similarity = options.similarity,","      similarity = _options$similarity === undefined ? SIMILARITY : _options$similarity;","","  // Early terminations","","  if (a === b) return a.length;","","  var m = a.length,","      n = b.length;","","  if (!m || !n) return 0;","","  // TODO: Possibility to optimize for common prefix, but need to know max substitution cost","","  var d = new Array(m + 1);","","  var D = 0;","","  for (var i = 0; i <= m; i++) {","    d[i] = new Array(2);","    d[i][0] = 0;","  }","","  for (var j = 1; j <= n; j++) {","    d[0][j % 2] = 0;","","    for (var _i = 1; _i <= m; _i++) {","      var cost = similarity(a[_i - 1], b[j - 1]);","","      d[_i][j % 2] = Math.max(0, // Start over","      d[_i - 1][(j - 1) % 2] + cost, // Substitution","      d[_i - 1][j % 2] - gap, // Insertion","      d[_i][(j - 1) % 2] - gap // Deletion","      );","","      // Storing max","      if (d[_i][j % 2] > D) D = d[_i][j % 2];","    }","  }","","  return D;","}","","/**"," * Exporting standard distance."," */","var smithWaterman = score.bind(null, {});","","exports.default = smithWaterman;","module.exports = exports[\"default\"];","exports[\"default\"].score = exports.score;"],"l":{"3":1,"6":1,"21":1,"22":0,"35":1,"36":0,"43":0,"45":0,"48":0,"52":0,"54":0,"56":0,"57":0,"58":0,"61":0,"62":0,"64":0,"65":0,"67":0,"74":0,"78":0,"84":1,"86":1,"87":1,"88":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/sorensen.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/sorensen.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":88}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":43}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":33}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":31}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":37}},"10":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}},"11":{"start":{"line":39,"column":0},"end":{"line":39,"column":34}},"12":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}},"13":{"start":{"line":41,"column":0},"end":{"line":41,"column":41}},"14":{"start":{"line":42,"column":0},"end":{"line":42,"column":53}},"15":{"start":{"line":43,"column":0},"end":{"line":43,"column":51}},"16":{"start":{"line":44,"column":0},"end":{"line":44,"column":47}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.distance = exports.similarity = exports.coefficient = exports.index = undefined;","","var _dice = require('./dice');","","var _dice2 = _interopRequireDefault(_dice);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * The Sorensen index is the same as the Dice one."," */","exports.default = _dice2.default; /**","                                   * Talisman metrics/distance/sorensen","                                   * ===================================","                                   *","                                   * Functions computing the Sorensen index. Note that Sorensen index is","                                   * actually the same as the Dice coefficient (metrics/dice).","                                   *","                                   * [Reference]:","                                   * https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient","                                   *","                                   * [Article]:","                                   * Sørensen, T. (1948). \"A method of establishing groups of equal amplitude in","                                   * plant sociology based on similarity of species and its application to","                                   * analyses of the vegetation on Danish commons\".","                                   * Kongelige Danske Videnskabernes Selskab 5 (4): 1–34.","                                   *","                                   * [Tags]: semimetric, string metric.","                                   */","","exports.index = _dice2.default;","exports.coefficient = _dice2.default;","exports.similarity = _dice2.default;","exports.distance = _dice.distance;","module.exports = exports['default'];","exports['default'].index = exports.index;","exports['default'].coefficient = exports.coefficient;","exports['default'].similarity = exports.similarity;","exports['default'].distance = exports.distance;"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"17":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/suffix.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/metrics/distance/suffix.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"similarity","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":26}}},"2":{"name":"distance","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":28}},"4":{"start":{"line":26,"column":0},"end":{"line":47,"column":1}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":24}},"6":{"start":{"line":27,"column":15},"end":{"line":27,"column":24}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":39}},"8":{"start":{"line":29,"column":30},"end":{"line":29,"column":39}},"9":{"start":{"line":31,"column":2},"end":{"line":37,"column":3}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":22}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":16}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":16}},"13":{"start":{"line":37,"column":3},"end":{"line":37,"column":13}},"14":{"start":{"line":39,"column":2},"end":{"line":40,"column":20}},"15":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":47}},"17":{"start":{"line":43,"column":41},"end":{"line":43,"column":47}},"18":{"start":{"line":46,"column":2},"end":{"line":46,"column":16}},"19":{"start":{"line":56,"column":0},"end":{"line":58,"column":1}},"20":{"start":{"line":57,"column":2},"end":{"line":57,"column":30}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":15}},{"start":{"line":29,"column":19},"end":{"line":29,"column":28}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]}},"code":["\"use strict\";","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.similarity = similarity;","exports.distance = distance;","/**"," * Talisman metrics/distance/suffix"," * ================================="," *"," * Function computing the Suffix distance/similarity. This is basically the"," * ratio of the length of the common suffix to the length of the shortest"," * sequence."," *"," * [Tags]: metric, string metric."," */","","/**"," * Suffix similarity."," *"," * @param  {array|string} a - First sequence."," * @param  {array|string} b - Second sequence."," * @param  {number}         - Similarity between 0 & 1."," */","function similarity(a, b) {","  if (a === b) return 1;","","  if (!a.length || !b.length) return 0;","","  if (a.length > b.length) {","    ;","","    var _ref = [b, a];","    a = _ref[0];","    b = _ref[1];","  }var i = 0;","","  var la = a.length,","      lb = b.length;","","  for (; i < la; i++) {","    if (a[la - i - 1] !== b[lb - i - 1]) break;","  }","","  return i / la;","}","","/**"," * Suffix distance."," *"," * @param  {array|string} a - First sequence."," * @param  {array|string} b - Second sequence."," * @param  {number}         - Distance between 0 & 1."," */","function distance(a, b) {","  return 1 - similarity(a, b);","}"],"l":{"3":1,"6":1,"7":1,"26":1,"27":0,"29":0,"31":0,"34":0,"35":0,"36":0,"37":0,"39":0,"42":0,"43":0,"46":0,"56":1,"57":0}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/french/fonem.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/french/fonem.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":1,"16":54,"17":54,"18":18,"19":1,"20":57,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[18,36],"5":[0,0]},"f":{"1":1,"2":0,"3":57,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"_toConsumableArray","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}}},"3":{"name":"(anonymous_3)","line":120,"loc":{"start":{"line":120,"column":6},"end":{"line":120,"column":21}}},"4":{"name":"fonem","line":134,"loc":{"start":{"line":134,"column":0},"end":{"line":134,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":195}},"8":{"start":{"line":14,"column":35},"end":{"line":14,"column":193}},"9":{"start":{"line":14,"column":61},"end":{"line":14,"column":145}},"10":{"start":{"line":14,"column":126},"end":{"line":14,"column":143}},"11":{"start":{"line":14,"column":146},"end":{"line":14,"column":158}},"12":{"start":{"line":14,"column":168},"end":{"line":14,"column":191}},"13":{"start":{"line":34,"column":0},"end":{"line":37,"column":31}},"14":{"start":{"line":42,"column":0},"end":{"line":103,"column":2}},"15":{"start":{"line":106,"column":0},"end":{"line":110,"column":1}},"16":{"start":{"line":107,"column":2},"end":{"line":107,"column":22}},"17":{"start":{"line":109,"column":2},"end":{"line":109,"column":71}},"18":{"start":{"line":109,"column":36},"end":{"line":109,"column":71}},"19":{"start":{"line":113,"column":0},"end":{"line":122,"column":3}},"20":{"start":{"line":121,"column":2},"end":{"line":121,"column":20}},"21":{"start":{"line":124,"column":0},"end":{"line":124,"column":51}},"22":{"start":{"line":134,"column":0},"end":{"line":155,"column":1}},"23":{"start":{"line":135,"column":2},"end":{"line":135,"column":112}},"24":{"start":{"line":135,"column":32},"end":{"line":135,"column":112}},"25":{"start":{"line":137,"column":2},"end":{"line":137,"column":77}},"26":{"start":{"line":140,"column":2},"end":{"line":147,"column":3}},"27":{"start":{"line":141,"column":4},"end":{"line":143,"column":42}},"28":{"start":{"line":146,"column":4},"end":{"line":146,"column":46}},"29":{"start":{"line":150,"column":2},"end":{"line":154,"column":3}},"30":{"start":{"line":151,"column":4},"end":{"line":151,"column":14}},"31":{"start":{"line":153,"column":4},"end":{"line":153,"column":85}},"32":{"start":{"line":154,"column":3},"end":{"line":154,"column":15}},"33":{"start":{"line":156,"column":0},"end":{"line":156,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":35},"end":{"line":14,"column":35}},{"start":{"line":14,"column":35},"end":{"line":14,"column":35}}]},"4":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"5":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = fonem;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**","                                                                                                                                                                                                     * Talisman phonetics/french/fonemmplementation of the French phonetic algorithm \"FONEM\" designed to match","                                                                                                                                                                                                     * family names from Saguenay.","                                                                                                                                                                                                     *","                                                                                                                                                                                                     * [Reference]:","                                                                                                                                                                                                     * http://www.persee.fr/doc/pop_0032-4663_1981_num_36_6_17248","                                                                                                                                                                                                     *","                                                                                                                                                                                                     * [Article]:","                                                                                                                                                                                                     * Bouchard Gérard, Brard Patrick, Lavoie Yolande. FONEM : Un code de","                                                                                                                                                                                                     * transcription phonétique pour la reconstitution automatique des familles","                                                                                                                                                                                                     * saguenayennes. In: Population, 36ᵉ année, n°6, 1981. pp. 1085-1103;","                                                                                                                                                                                                     */","","","/**"," * Constants."," */","var VOWELS = 'AEIOUY',","    CONSONANTS = '^' + VOWELS,","    V = '[' + VOWELS + ']',","    C = '[' + CONSONANTS + ']';","","/**"," * Rules."," */","var RULES = {","","  // Vowels & vowel clusters","  'V-1': [/E?AU/g, 'O'],","  'V-2': [/(?:E?AU|O)LT$/, 'O'],","  'V-3': [/E?AUT$/, 'O'],","  'V-4': [/E?AUX$/, 'O'],","  'V-5': [/(?:E?AU|O)LX$/, 'O'],","  'V-6': [/E?AUL?D$/, 'O'],","  'V-7': [/([^G])AY$/, '$1E'],","  'V-8': [/EUX$/, 'EU'],","  'V-9': ['EY(?=$|' + C + ')', 'E'],","  'V-10': ['(' + C + ')?Y(?!' + V + ')', '$1I'],","  'V-11': ['(' + V + ')I(?=' + V + ')', '$1Y'],","  'V-12': ['(' + V + ')ILL', '$1Y'],","  'V-13': [/OU(?=I(?!LL)|[AEOU])/g, 'W'],","  'V-14': ['(' + V + ')\\\\1', '$1'],","","  // Nasals","  'V-15': ['[AE]M(?=[' + CONSONANTS + 'N](?!$))', 'EN'],","  'V-16': ['OM(?=[' + CONSONANTS + 'N])', 'ON'],","  'V-17': ['AN(?=' + C + ')', 'EN'],","  'V-18': ['(?:AIM|AIN|EIN)(?=' + C + '|$)', 'IN'],","  'V-19': [/(?:BORNE?|BOURNE?|BURNE)$/, 'BURN'],","  'V-20': ['(?:^IM|IM(?=' + C + '))(?=[' + CONSONANTS + 'N])', 'IN'],","","  // Consonants & consonant clusters","  'C-1': [/BV/g, 'V'],","  'C-2': ['(' + V + ')C(?=[EIY])', '$1SS'],","  'C-3': [/([^CX])C(?=[EIY])/g, '$1S'],","  'C-4': [/^C(?=[EIY])/, 'S'],","  'C-5': [/^C(?=[AOU])/, 'K'],","  'C-6': ['(' + V + ')C$', '$1K'],","  'C-7': ['C(?=[' + CONSONANTS + 'CH])', 'K'],","  'C-8': [/CC(?=[AOU])/g, 'K'],","  'C-9': [/CC(?=[EIY])/g, 'X'],","  'C-10': [/G(?=[EIY])/g, 'J'],","  'C-11': [/GA(?=I?[MN])/g, 'G§'], // The paper is inconsistent so I cheated.","  'C-12': [/(?:GEO|GEAU)/g, 'JO'],","  'C-13': ['GNI(?=' + V + ')', 'GN'],","  'C-14': [/(^|[^CPS])H/g, '$1'],","  'C-15': [/JEA/g, 'JA'],","  'C-16': ['^MAC(?=' + C + ')', 'M§'], // The paper is inconsistent so I cheated.","  'C-17': [/^MC/, 'M§'],","  'C-18': [/PH/g, 'F'],","  'C-19': [/QU/g, 'K'],","  'C-20': [/^SC(?=[EIY])/, 'S'],","  'C-21': [/(.)SC(?=[EIY])/g, '$1SS'],","  'C-22': [/(.)SC(?=[AOU])/g, '$1SK'],","  'C-23': [/SH/g, 'CH'],","  'C-24': [/TIA$/, 'SSIA'],","  'C-25': [/([AIOUY])W/g, '$1'],","  'C-26': [/X[CSZ]/g, 'X'],","  'C-27': ['(?:Z(?=' + V + ')|(' + C + ')Z(?=' + C + '))', '$1S'],","  'C-28': ['(?:([' + CONSONANTS + 'CLS])\\\\1|(C)C(?!' + V + ')|(.S)S(?!' + V + ')|([^I]L)L)', '$1$2$3$4'],","  'C-28-bis': [/ILE$/, 'ILLE'],","  'C-29': ['(?:(ILS)|([CS]H)|([MN]P)|(R[CFKLNSX])|(' + C + ')' + C + ')$', '$1$2$3$4$5'],","  'C-30': [/^(?:SINT?|SAINT?|SEIN|SEIM|CINQ?)/, 'ST-'],","  'C-31': [/^SAINTE/, 'STE-'],","  'C-32': [/^ST(?!E)/, 'ST-'],","  'C-33': [/^STE/, 'STE-']","};","","// Compiling rules","for (var k in RULES) {","  var rule = RULES[k];","","  if (!(rule[0] instanceof RegExp)) rule[0] = new RegExp(rule[0], 'g');","}","","// Rules must be ordered","var ORDERED_RULES = ['V-14', 'C-28', 'C-28-bis', // START","'C-12', 'C-9', 'C-10', 'C-16', 'C-17', 'C-20', 'C-2', 'C-3', 'C-7', 'V-2', 'V-3', 'V-4', 'V-5', 'V-6', 'V-1', 'C-14', 'C-11', 'C-33', 'C-32', 'C-31', 'C-30', // SAINT","'V-15', 'V-17', 'V-18', 'V-7', 'V-8', 'V-9', 'V-10', 'V-11', 'V-12', 'V-13', 'V-16', 'V-19', 'V-20', // V","'C-1', 'C-4', 'C-5', 'C-6', 'C-8', 'C-13', 'C-15', 'C-18', // C","'C-19', 'C-21', 'C-22', 'C-23', 'C-24', 'C-25', 'C-26', 'C-27', // C","'C-29', // END","'V-14', 'C-28', 'C-28-bis' // ONCE AGAIN","].map(function (key) {","  return RULES[key];","});","","var FIXING_RULES = [[/G§/g, 'GA'], [/M§/g, 'MAC']];","","/**"," * Function taking a single name and computing its FONEM code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The FONEM code."," *"," * @throws {Error} The function expects the name to be a string."," */","function fonem(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/french/fonem: the given name is not a string.');","","  var code = (0, _deburr2.default)(name).toUpperCase().replace(/[^A-Z]/, '');","","  // Applying rules in order","  for (var i = 0, l = ORDERED_RULES.length; i < l; i++) {","    var _ORDERED_RULES$i = ORDERED_RULES[i],","        pattern = _ORDERED_RULES$i[0],","        replacement = _ORDERED_RULES$i[1];","","","    code = code.replace(pattern, replacement);","  }","","  // Fixing rules","  for (var _i = 0, _l = FIXING_RULES.length; _i < _l; _i++) {","    var _code;","","    code = (_code = code).replace.apply(_code, _toConsumableArray(FIXING_RULES[_i]));","  }return code;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"34":1,"42":1,"106":1,"107":54,"109":54,"113":1,"121":57,"124":1,"134":1,"135":0,"137":0,"140":0,"141":0,"146":0,"150":0,"151":0,"153":0,"154":0,"156":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/french/phonetic.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/french/phonetic.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"2":{"name":"squeeze","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":23}}},"3":{"name":"phonetic","line":130,"loc":{"start":{"line":130,"column":0},"end":{"line":130,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":95}},"6":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"7":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"8":{"start":{"line":20,"column":2},"end":{"line":20,"column":38}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":118}},"10":{"start":{"line":39,"column":0},"end":{"line":39,"column":491}},"11":{"start":{"line":41,"column":0},"end":{"line":83,"column":484}},"12":{"start":{"line":85,"column":0},"end":{"line":88,"column":14}},"13":{"start":{"line":90,"column":0},"end":{"line":90,"column":571}},"14":{"start":{"line":95,"column":0},"end":{"line":116,"column":2}},"15":{"start":{"line":118,"column":0},"end":{"line":118,"column":121}},"16":{"start":{"line":120,"column":0},"end":{"line":120,"column":47}},"17":{"start":{"line":130,"column":0},"end":{"line":226,"column":1}},"18":{"start":{"line":131,"column":2},"end":{"line":131,"column":115}},"19":{"start":{"line":131,"column":32},"end":{"line":131,"column":115}},"20":{"start":{"line":134,"column":2},"end":{"line":134,"column":87}},"21":{"start":{"line":136,"column":2},"end":{"line":136,"column":60}},"22":{"start":{"line":138,"column":2},"end":{"line":138,"column":18}},"23":{"start":{"line":141,"column":2},"end":{"line":148,"column":3}},"24":{"start":{"line":142,"column":4},"end":{"line":144,"column":47}},"25":{"start":{"line":147,"column":4},"end":{"line":147,"column":46}},"26":{"start":{"line":151,"column":2},"end":{"line":151,"column":23}},"27":{"start":{"line":154,"column":2},"end":{"line":154,"column":35}},"28":{"start":{"line":156,"column":2},"end":{"line":156,"column":34}},"29":{"start":{"line":156,"column":17},"end":{"line":156,"column":34}},"30":{"start":{"line":159,"column":2},"end":{"line":166,"column":3}},"31":{"start":{"line":160,"column":4},"end":{"line":162,"column":47}},"32":{"start":{"line":165,"column":4},"end":{"line":165,"column":46}},"33":{"start":{"line":169,"column":2},"end":{"line":176,"column":3}},"34":{"start":{"line":170,"column":4},"end":{"line":172,"column":35}},"35":{"start":{"line":175,"column":4},"end":{"line":175,"column":46}},"36":{"start":{"line":179,"column":2},"end":{"line":186,"column":3}},"37":{"start":{"line":180,"column":4},"end":{"line":182,"column":43}},"38":{"start":{"line":185,"column":4},"end":{"line":185,"column":46}},"39":{"start":{"line":189,"column":2},"end":{"line":189,"column":24}},"40":{"start":{"line":192,"column":2},"end":{"line":199,"column":3}},"41":{"start":{"line":193,"column":4},"end":{"line":195,"column":44}},"42":{"start":{"line":198,"column":4},"end":{"line":198,"column":46}},"43":{"start":{"line":202,"column":2},"end":{"line":202,"column":23}},"44":{"start":{"line":205,"column":2},"end":{"line":205,"column":38}},"45":{"start":{"line":205,"column":23},"end":{"line":205,"column":38}},"46":{"start":{"line":208,"column":2},"end":{"line":208,"column":32}},"47":{"start":{"line":208,"column":20},"end":{"line":208,"column":32}},"48":{"start":{"line":211,"column":2},"end":{"line":221,"column":3}},"49":{"start":{"line":214,"column":4},"end":{"line":214,"column":51}},"50":{"start":{"line":214,"column":39},"end":{"line":214,"column":51}},"51":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"52":{"start":{"line":217,"column":6},"end":{"line":217,"column":75}},"53":{"start":{"line":217,"column":50},"end":{"line":217,"column":75}},"54":{"start":{"line":220,"column":4},"end":{"line":220,"column":49}},"55":{"start":{"line":220,"column":31},"end":{"line":220,"column":49}},"56":{"start":{"line":223,"column":2},"end":{"line":223,"column":35}},"57":{"start":{"line":223,"column":23},"end":{"line":223,"column":35}},"58":{"start":{"line":225,"column":2},"end":{"line":225,"column":12}},"59":{"start":{"line":227,"column":0},"end":{"line":227,"column":36}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}]},"3":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"4":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"5":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"6":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"7":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":2},"end":{"line":211,"column":2}},{"start":{"line":211,"column":2},"end":{"line":211,"column":2}}]},"8":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"9":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"10":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":6},"end":{"line":217,"column":6}},{"start":{"line":217,"column":6},"end":{"line":217,"column":6}}]},"11":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":10},"end":{"line":217,"column":27}},{"start":{"line":217,"column":31},"end":{"line":217,"column":48}}]},"12":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"13":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":223,"column":2}},{"start":{"line":223,"column":2},"end":{"line":223,"column":2}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = phonetic;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Helpers."," */","","// NOTE: will only squeeze one letter, not more (e.g. AGREEE => AGREE)","function squeeze(word) {","  return word.replace(/(.)\\1/g, '$1');","}","","/**"," * Rules."," */","/**"," * Talisman phonetics/french/phonetic"," * ==================================="," *"," * Implementation of the \"phonetic\" algorithm for the French language."," *"," * [Author]: Edouard Bergé"," *"," * [Reference]:"," * http://www.roudoudou.com/phonetic.php"," */","var FIRST_PREPROCESSING = [[/O[O]+/g, 'OU'], [/SAOU/g, 'SOU'], [/OES/g, 'OS'], [/CCH/g, 'K'], [/CC([IYE])/g, 'KS$1']];","","var SECOND_PREPROCESSING = [[/OIN[GT]$/g, 'OIN'], [/E[RS]$/g, 'E'], [/(C|CH)OEU/g, 'KE'], [/MOEU/g, 'ME'], [/OE([UI]+)([BCDFGHJKLMNPQRSTVWXZ])/g, 'E$1$2'], [/^GEN[TS]$/, 'JAN'], [/CUEI/g, 'KEI'], [/([^AEIOUYC])AE([BCDFGHJKLMNPQRSTVWXZ])/g, '$1E$2'], [/AE([QS])/g, 'E$1'], [/AIE([BCDFGJKLMNPQRSTVWXZ])/g, 'AI$1'], [/ANIEM/g, 'ANIM'], [/(DRA|TRO|IRO)P$/, '$1'], [/(LOM)B$/, '$1'], [/(RON|POR)C$/, '$1'], [/PECT$/, 'PET'], [/ECUL$/, 'CU'], [/(CHA|CA|E)M(P|PS)$/, '$1N'], [/(TAN|RAN)G$/, '$1']];","","var RULES = [","","// YEUX","[/([^VO])ILAG/g, '$1IAJ'], [/([^TRH])UIL(AR|E)(.+)/g, '$1UI$2$3'], [/([G])UIL([AEO])/g, '$1UI$2'], [/([NSPM])AIL([AEO])/g, '$1AI$2'], [/DIL(AI|ON|ER|EM)/g, 'DI$1'], [/RILON/g, 'RION'], [/TAILE/g, 'TAIE'], [/GAILET/g, 'GAIET'], [/AIL(A[IR])/g, 'AI$1'], [/OUILA/g, 'OUIA'], [/EIL(AI|AR|ER|EM)/g, 'AI$1'], [/REILET/g, 'RAIET'], [/EILET/g, 'EIET'], [/AILOL/g, 'AIOL'], [/([^AEIOUY])(SC|S)IEM([EA])/g, '$1$2IAM$3'], [/^(SC|S)IEM([EA])/g, '$1IAM$2'],","","// MP/MB -> NP/NB","[/([OAI])MB/g, '$1NB'], [/([OA])MP/g, '$1NP'], [/GEMB/g, 'JANB'], [/EM([BP])/g, 'AN$1'], [/UMBL/g, 'INBL'], [/CIEN/g, 'SIAN'],","","// K sounds","[/^ECEUR/, 'EKEUR'], [/^CH(OG+|OL+|OR+|EU+|ARIS|M+|IRO|ONDR)/, 'K$1'], [/(YN|RI)CH(OG+|OL+|OC+|OP+|OM+|ARIS|M+|IRO|ONDR)/g, '$1K$2'], [/CHS/g, 'CH'], [/CH(AIQ)/g, 'K$1'], [/^ECHO([^UIPY])/, 'EKO$1'], [/ISCH(I|E)/g, 'ISK$1'], [/^ICHT/, 'IKT'], [/ORCHID/g, 'ORKID'], [/ONCHIO/g, 'ONKIO'], [/ACHIA/g, 'AKIA'], [/([^C])ANICH/g, '$1ANIK'], [/OMANIK/g, 'OMANICH'], [/ACHY([^D])/g, 'AKI$1'], [/([AEIOU])C([BDFGJKLMNPQRTVWXZ])/g, '$1K$2'], [/EUCHA/g, 'EKA'], [/YCH(IA|A|O|ED)/g, 'IK$1'], [/([AR])CHEO/g, '$1KEO'], [/RCHES/g, 'RKES'], [/ECHN/g, 'EKN'], [/OCHTO/g, 'OKTO'], [/CHO(RA|NDR|RE)/g, 'KO$1'], [/MACHM/g, 'MAKM'], [/BRONCHO/g, 'BRONKO'], [/LICHO([SC])/g, 'LIKO$1'],","","// WEUH","[/WA/g, 'OI'], [/WO/g, 'O'], [/(?:WI|WHI|WHY)/g, 'OUI'], [/WHA/g, 'OUA'], [/WHO/g, 'OU'],","","// GUEU, GNEU, JEU etc.","[/GNE([STR])/g, 'NIE$1'], [/GNE/g, 'NE'], [/GI/g, 'JI'], [/GNI/g, 'NI'], [/GN(A|OU|UR)/g, 'NI$1'], [/GY/g, 'JI'], [/OUGAIN/g, 'OUGIN'], [/AGEO([LT])/g, 'AJO$1'], [/GEORG/g, 'JORJ'], [/GEO(LO|M|P|G|S|R)/g, 'JEO$1'], [/([NU])GEOT/g, '$1JOT'], [/GEO([TDC])/g, 'JEO$1'], [/GE([OA])/g, 'J$1'], [/GE/g, 'JE'], [/QU?/g, 'K'], [/C[YI]/g, 'SI'], [/CN/g, 'KN'], [/ICM/g, 'IKM'], [/CEAT/g, 'SAT'], [/CE/g, 'SE'], [/C([RO])/g, 'K$1'], [/CUEI/g, 'KEI'], [/CU/g, 'KU'], [/VENCA/g, 'VANSA'], [/C([AS])/g, 'K$1'], [/CLEN/g, 'KLAN'], [/C([LZ])/g, 'K$1'], [/CTIQ/g, 'KTIK'], [/CTI[CS]/g, 'KTIS'], [/CTI([FL])/g, 'KTI$1'], [/CTIO/g, 'KSIO'], [/CT([IUEOR])?/g, 'KT$1'], [/PH/g, 'F'], [/TH/g, 'T'], [/OW/g, 'OU'], [/LH/g, 'L'], [/RDL/g, 'RL'], [/CH(LO|R)/g, 'K$1'], [/PTIA/g, 'PSIA'], [/GU([^RLMBSTPZN])/g, 'G$1'], [/GNO(?=[MLTNRKG])/g, 'NIO'],","","// TI -> SI","[/BUTI([EA])/g, 'BUSI$1'], [/BATIA/g, 'BASIA'], [/ANTIEL/g, 'ANSIEL'], [/RETION/g, 'RESION'], [/ENTI([EA])L/g, 'ENSI$1L'], [/ENTIO/g, 'ENSIO'], [/ENTIAI/g, 'ENSIAI'], [/UJETION/g, 'UJESION'], [/ATIEM/g, 'ASIAM'], [/PETIEN/g, 'PESIEN'], [/CETIE/g, 'CESIE'], [/OFETIE/g, 'OFESIE'], [/IPETI/g, 'IPESI'], [/LBUTION/g, 'LBUSION'], [/BLUTION/g, 'BLUSION'], [/L([EA])TION/g, 'L$1SION'], [/SATIET/g, 'SASIET'], [/(.+)ANTI(AL|O)/g, '$1ANSI$2'], [/(.+)INUTI([^V])/g, '$1INUSI$2'], [/([^O])UTIEN/g, '$1USIEN'], [/([^DE])RATI([E])$/, '$1RASI$2'], [/([^SNEU]|KU|KO|RU|LU|BU|TU|AU)T(IEN|ION)/g, '$1S$2'],","","// Silent H","[/([^CS])H/g, '$1'], [/([EN])SH/g, '$1S'], [/SH/g, 'CH'],","","// Nasals","[/OMT/g, 'ONT'], [/IM([BP])/g, 'IN$1'], [/UMD/g, 'OND'], [/([TRD])IENT/g, '$1IANT'], [/IEN/g, 'IN'], [/YM([UOAEIN])/g, 'IM$1'], [/YM/g, 'IN'], [/AHO/g, 'AO'], [/([FDS])AIM/g, '$1IN'], [/EIN/g, 'AIN'], [/AINS/g, 'INS'],","","// AIN -> IN","[/AIN$/, 'IN'], [/AIN([BTDK])/g, 'IN$1'],","","// UN -> IN","[/([^O])UND/g, '$1IND'], [/([JTVLFMRPSBD])UN([^IAE])/g, '$1IN$2'], [/([JTVLFMRPSBD])UN$/, '$1IN'], [/RFUM$/, 'RFIN'], [/LUMB/g, 'LINB'],","","// EN -> AN","[/([^BCDFGHJKLMNPQRSTVWXZ])EN/g, '$1AN'], [/([VTLJMRPDSBFKNG])EN(?=[BRCTDKZSVN])/g, '$1AN'], [/^EN([BCDFGHJKLNPQRSTVXZ]|CH|IV|ORG|OB|UI|UA|UY)/, 'AN$1'], [/(^[JRVTH])EN([DRTFGSVJMP])/, '$1AN$2'], [/SEN([ST])/g, 'SAN$1'], [/^DESENIV/g, 'DESANIV'], [/([^M])EN(U[IY])/g, '$1AN$2'], [/(.+[JTVLFMRPSBD])EN([JLFDSTG])/g, '$1AN$2'],","","// EI -> AI","[/([VSBSTNRLPM])E[IY]([ACDFRJLGZ])/g, '$1AI$2'],","","// Ô","[/EAU/g, 'O'], [/EU/g, 'E'], [/Y/g, 'I'], [/EOI/g, 'OI'], [/JEA/g, 'JA'], [/OIEM/g, 'OIM'], [/OUANJ/g, 'OUENJ'], [/OUA/g, 'OI'], [/OUENJ/g, 'OUANJ'], [/AU([^E])/g, 'O$1'],","","// Refining","[/^BENJ/, 'BINJ'], [/RTIEL/g, 'RSIEL'], [/PINK/g, 'PONK'], [/KIND/g, 'KOND'], [/KUM(N|P)/g, 'KON$1'], [/LKOU/g, 'LKO'], [/EDBE/g, 'EBE'], [/ARCM/g, 'ARKM'], [/SCH/g, 'CH'], [/^OINI/, 'ONI'], [/([^NDCGRHKO])APT/g, '$1AT'], [/([L]|KON)PT/g, '$1T'], [/OTB/g, 'OB'], [/IXA/g, 'ISA'], [/TG/g, 'G'], [/^TZ/, 'TS'], [/PTIE/g, 'TIE'], [/GT/g, 'T'], [/ANKIEM/g, 'ANKILEM'], [/(LO|RE)KEMAN/g, '$1KAMAN'], [/NT(B|M)/g, 'N$1'], [/GSU/g, 'SU'], [/ESD/g, 'ED'], [/LESKEL/g, 'LEKEL'], [/CK/g, 'K']];","","var FIRST_ENDINGS = [[/USIL$/, 'USI'], [/X$|[TD]S$|[DS]$/, ''], [/([^KL]+)T$/, '$1'],","","// Not really an ending","[/^[H]/, '']];","","var SECOND_ENDINGS = [[/TIL$/, 'TI'], [/LC$/, 'LK'], [/L[E]?[S]?$/, 'L'], [/(.+)N[E]?[S]?$/, '$1N'], [/EZ$/, 'E'], [/OIG$/, 'OI'], [/OUP$/, 'OU'], [/([^R])OM$/, '$1ON'], [/LOP$/, 'LO'], [/NTANP$/, 'NTAN'], [/TUN$/, 'TIN'], [/AU$/, 'O'], [/EI$/, 'AI'], [/R[DG]$/, 'R'], [/ANC$/, 'AN'], [/KROC$/, 'KRO'], [/HOUC$/, 'HOU'], [/OMAC$/, 'OMA'], [/([J])O([NU])[CG]$/, '$1O$2'], [/([^GTR])([AO])NG$/, '$1$2N'], [/UC$/, 'UK'], [/AING$/, 'IN'], [/([EISOARN])C$/, '$1K'], [/([ABD-MO-Z]+)[EH]+$/, '$1'], [/EN$/, 'AN'], [/(NJ)EN$/, '$1AN'], [/^PAIEM/, 'PAIM'], [/([^NTB])EF$/, '$1']];","","/**"," * Exceptions."," */","var EXCEPTIONS = {","  CD: 'CD',","  BD: 'BD',","  BV: 'BV',","  TABAC: 'TABA',","  FEU: 'FE',","  FE: 'FE',","  FER: 'FER',","  FIEF: 'FIEF',","  FJORD: 'FJORD',","  GOAL: 'GOL',","  FLEAU: 'FLEO',","  HIER: 'IER',","  HEU: 'E',","  HE: 'E',","  OS: 'OS',","  RIZ: 'RI',","  RAZ: 'RA',","","  // Catching up exceptions placed elsewhere in the original algorithm","  ECHO: 'EKO'","};","","var ABBREVIATION_REGEX = /[BCDFGHJKLMNPQRSTVWXYZ][BCDFGHJKLMNPQRSTVWXYZ][BCDFGHJKLMNPQRSTVWXYZ][BCDFGHJKLMNPQRSTVWXYZ]*/;","","var SIMPLE_WORDS_REGEX = /[RFMLVSPJDF][AEIOU]/;","","/**"," * Function taking a single word and computing its phonetic code."," *"," * @param  {string}  word - The word to process."," * @return {string}       - The phonetic code."," *"," * @throws {Error} The function expects the word to be a string."," */","function phonetic(word) {","  if (typeof word !== 'string') throw Error('talisman/phonetics/french/phonetic: the given word is not a string.');","","  // Preparing the word","  word = word.toUpperCase().replace(/Œ/g, 'OEU').replace(/Æ/g, 'E').replace(/Ç/g, 'S');","","  word = (0, _deburr2.default)(word).replace(/[^A-Z]/g, '');","","  var code = word;","","  // First preprocessing","  for (var i = 0, l = FIRST_PREPROCESSING.length; i < l; i++) {","    var _FIRST_PREPROCESSING$ = FIRST_PREPROCESSING[i],","        pattern = _FIRST_PREPROCESSING$[0],","        replacement = _FIRST_PREPROCESSING$[1];","","","    code = code.replace(pattern, replacement);","  }","","  // Squeezing","  code = squeeze(code);","","  // Is the word an exception?","  var exception = EXCEPTIONS[code];","","  if (exception) return exception;","","  // Second preprocessing","  for (var _i = 0, _l = SECOND_PREPROCESSING.length; _i < _l; _i++) {","    var _SECOND_PREPROCESSING = SECOND_PREPROCESSING[_i],","        pattern = _SECOND_PREPROCESSING[0],","        replacement = _SECOND_PREPROCESSING[1];","","","    code = code.replace(pattern, replacement);","  }","","  // Applying rules","  for (var _i2 = 0, _l2 = RULES.length; _i2 < _l2; _i2++) {","    var _RULES$_i = RULES[_i2],","        pattern = _RULES$_i[0],","        replacement = _RULES$_i[1];","","","    code = code.replace(pattern, replacement);","  }","","  // First endings","  for (var _i3 = 0, _l3 = FIRST_ENDINGS.length; _i3 < _l3; _i3++) {","    var _FIRST_ENDINGS$_i = FIRST_ENDINGS[_i3],","        pattern = _FIRST_ENDINGS$_i[0],","        replacement = _FIRST_ENDINGS$_i[1];","","","    code = code.replace(pattern, replacement);","  }","","  // Saving the code for very short words","  var backupCode = code;","","  // Second endings","  for (var _i4 = 0, _l4 = SECOND_ENDINGS.length; _i4 < _l4; _i4++) {","    var _SECOND_ENDINGS$_i = SECOND_ENDINGS[_i4],","        pattern = _SECOND_ENDINGS$_i[0],","        replacement = _SECOND_ENDINGS$_i[1];","","","    code = code.replace(pattern, replacement);","  }","","  // Squeezing the code again","  code = squeeze(code);","","  // Special cases","  if (code === 'FUEL') code = 'FIOUL';","","  // If the code is \"O\" we return it (only acceptable code with only 1 letter)","  if (code === 'O') return code;","","  // Attempting to save short codes","  if (code.length < 2) {","","    // Abbreviations","    if (ABBREVIATION_REGEX.test(word)) return word;","","    if (SIMPLE_WORDS_REGEX.test(word)) {","      if (word.length === 3 || word.length === 4) return word.slice(0, -1);","    }","","    if (backupCode.length > 1) return backupCode;","  }","","  if (code.length > 1) return code;","","  return '';","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"19":1,"20":0,"37":1,"39":1,"41":1,"85":1,"90":1,"95":1,"118":1,"120":1,"130":1,"131":0,"134":0,"136":0,"138":0,"141":0,"142":0,"147":0,"151":0,"154":0,"156":0,"159":0,"160":0,"165":0,"169":0,"170":0,"175":0,"179":0,"180":0,"185":0,"189":0,"192":0,"193":0,"198":0,"202":0,"205":0,"208":0,"211":0,"214":0,"216":0,"217":0,"220":0,"223":0,"225":0,"227":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/french/sonnex.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/french/sonnex.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":0,"13":1,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"fnMap":{"1":{"name":"_toConsumableArray","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}}},"2":{"name":"isVowel","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":25}}},"3":{"name":"isConsonant","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":29}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":64},"end":{"line":78,"column":81}}},"5":{"name":"(anonymous_5)","line":81,"loc":{"start":{"line":81,"column":36},"end":{"line":81,"column":53}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":95},"end":{"line":85,"column":112}}},"7":{"name":"(anonymous_7)","line":89,"loc":{"start":{"line":89,"column":34},"end":{"line":89,"column":51}}},"8":{"name":"(anonymous_8)","line":93,"loc":{"start":{"line":93,"column":39},"end":{"line":93,"column":56}}},"9":{"name":"(anonymous_9)","line":97,"loc":{"start":{"line":97,"column":18},"end":{"line":97,"column":32}}},"10":{"name":"(anonymous_10)","line":107,"loc":{"start":{"line":107,"column":50},"end":{"line":107,"column":67}}},"11":{"name":"(anonymous_11)","line":119,"loc":{"start":{"line":119,"column":188},"end":{"line":119,"column":205}}},"12":{"name":"(anonymous_12)","line":123,"loc":{"start":{"line":123,"column":59},"end":{"line":123,"column":76}}},"13":{"name":"(anonymous_13)","line":129,"loc":{"start":{"line":129,"column":18},"end":{"line":129,"column":35}}},"14":{"name":"(anonymous_14)","line":133,"loc":{"start":{"line":133,"column":54},"end":{"line":133,"column":71}}},"15":{"name":"(anonymous_15)","line":136,"loc":{"start":{"line":136,"column":140},"end":{"line":136,"column":157}}},"16":{"name":"(anonymous_16)","line":141,"loc":{"start":{"line":141,"column":21},"end":{"line":141,"column":38}}},"17":{"name":"(anonymous_17)","line":145,"loc":{"start":{"line":145,"column":74},"end":{"line":145,"column":91}}},"18":{"name":"(anonymous_18)","line":148,"loc":{"start":{"line":148,"column":89},"end":{"line":148,"column":106}}},"19":{"name":"(anonymous_19)","line":159,"loc":{"start":{"line":159,"column":32},"end":{"line":159,"column":49}}},"20":{"name":"(anonymous_20)","line":170,"loc":{"start":{"line":170,"column":105},"end":{"line":170,"column":122}}},"21":{"name":"(anonymous_21)","line":174,"loc":{"start":{"line":174,"column":39},"end":{"line":174,"column":56}}},"22":{"name":"(anonymous_22)","line":188,"loc":{"start":{"line":188,"column":137},"end":{"line":188,"column":154}}},"23":{"name":"(anonymous_23)","line":191,"loc":{"start":{"line":191,"column":77},"end":{"line":191,"column":94}}},"24":{"name":"(anonymous_24)","line":201,"loc":{"start":{"line":201,"column":67},"end":{"line":201,"column":81}}},"25":{"name":"(anonymous_25)","line":211,"loc":{"start":{"line":211,"column":52},"end":{"line":211,"column":69}}},"26":{"name":"(anonymous_26)","line":216,"loc":{"start":{"line":216,"column":49},"end":{"line":216,"column":66}}},"27":{"name":"(anonymous_27)","line":226,"loc":{"start":{"line":226,"column":31},"end":{"line":226,"column":48}}},"28":{"name":"sonnex","line":245,"loc":{"start":{"line":245,"column":0},"end":{"line":245,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":195}},"4":{"start":{"line":8,"column":35},"end":{"line":8,"column":193}},"5":{"start":{"line":8,"column":61},"end":{"line":8,"column":145}},"6":{"start":{"line":8,"column":126},"end":{"line":8,"column":143}},"7":{"start":{"line":8,"column":146},"end":{"line":8,"column":158}},"8":{"start":{"line":8,"column":168},"end":{"line":8,"column":191}},"9":{"start":{"line":31,"column":0},"end":{"line":33,"column":29}},"10":{"start":{"line":35,"column":0},"end":{"line":35,"column":68}},"11":{"start":{"line":37,"column":0},"end":{"line":39,"column":1}},"12":{"start":{"line":38,"column":2},"end":{"line":38,"column":28}},"13":{"start":{"line":41,"column":0},"end":{"line":43,"column":1}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":32}},"15":{"start":{"line":48,"column":0},"end":{"line":68,"column":2}},"16":{"start":{"line":77,"column":0},"end":{"line":235,"column":2}},"17":{"start":{"line":79,"column":4},"end":{"line":79,"column":41}},"18":{"start":{"line":79,"column":20},"end":{"line":79,"column":41}},"19":{"start":{"line":80,"column":4},"end":{"line":80,"column":25}},"20":{"start":{"line":82,"column":4},"end":{"line":82,"column":37}},"21":{"start":{"line":82,"column":19},"end":{"line":82,"column":37}},"22":{"start":{"line":83,"column":4},"end":{"line":83,"column":42}},"23":{"start":{"line":83,"column":20},"end":{"line":83,"column":42}},"24":{"start":{"line":84,"column":4},"end":{"line":84,"column":26}},"25":{"start":{"line":86,"column":4},"end":{"line":86,"column":37}},"26":{"start":{"line":86,"column":19},"end":{"line":86,"column":37}},"27":{"start":{"line":87,"column":4},"end":{"line":87,"column":42}},"28":{"start":{"line":87,"column":20},"end":{"line":87,"column":42}},"29":{"start":{"line":88,"column":4},"end":{"line":88,"column":25}},"30":{"start":{"line":90,"column":4},"end":{"line":90,"column":37}},"31":{"start":{"line":90,"column":19},"end":{"line":90,"column":37}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":42}},"33":{"start":{"line":91,"column":20},"end":{"line":91,"column":42}},"34":{"start":{"line":92,"column":4},"end":{"line":92,"column":25}},"35":{"start":{"line":94,"column":4},"end":{"line":94,"column":37}},"36":{"start":{"line":94,"column":19},"end":{"line":94,"column":37}},"37":{"start":{"line":95,"column":4},"end":{"line":95,"column":46}},"38":{"start":{"line":95,"column":24},"end":{"line":95,"column":46}},"39":{"start":{"line":96,"column":4},"end":{"line":96,"column":26}},"40":{"start":{"line":98,"column":4},"end":{"line":98,"column":21}},"41":{"start":{"line":108,"column":4},"end":{"line":108,"column":53}},"42":{"start":{"line":108,"column":32},"end":{"line":108,"column":53}},"43":{"start":{"line":109,"column":4},"end":{"line":109,"column":22}},"44":{"start":{"line":120,"column":4},"end":{"line":120,"column":37}},"45":{"start":{"line":120,"column":19},"end":{"line":120,"column":37}},"46":{"start":{"line":121,"column":4},"end":{"line":121,"column":42}},"47":{"start":{"line":121,"column":20},"end":{"line":121,"column":42}},"48":{"start":{"line":122,"column":4},"end":{"line":122,"column":25}},"49":{"start":{"line":124,"column":4},"end":{"line":124,"column":51}},"50":{"start":{"line":124,"column":24},"end":{"line":124,"column":51}},"51":{"start":{"line":125,"column":4},"end":{"line":125,"column":31}},"52":{"start":{"line":130,"column":4},"end":{"line":130,"column":46}},"53":{"start":{"line":130,"column":19},"end":{"line":130,"column":46}},"54":{"start":{"line":131,"column":4},"end":{"line":131,"column":45}},"55":{"start":{"line":131,"column":28},"end":{"line":131,"column":45}},"56":{"start":{"line":132,"column":4},"end":{"line":132,"column":26}},"57":{"start":{"line":134,"column":4},"end":{"line":134,"column":42}},"58":{"start":{"line":134,"column":20},"end":{"line":134,"column":42}},"59":{"start":{"line":135,"column":4},"end":{"line":135,"column":25}},"60":{"start":{"line":137,"column":4},"end":{"line":137,"column":53}},"61":{"start":{"line":137,"column":32},"end":{"line":137,"column":53}},"62":{"start":{"line":138,"column":4},"end":{"line":138,"column":37}},"63":{"start":{"line":138,"column":19},"end":{"line":138,"column":37}},"64":{"start":{"line":139,"column":4},"end":{"line":139,"column":46}},"65":{"start":{"line":139,"column":24},"end":{"line":139,"column":46}},"66":{"start":{"line":140,"column":4},"end":{"line":140,"column":26}},"67":{"start":{"line":142,"column":4},"end":{"line":142,"column":37}},"68":{"start":{"line":142,"column":19},"end":{"line":142,"column":37}},"69":{"start":{"line":143,"column":4},"end":{"line":143,"column":46}},"70":{"start":{"line":143,"column":24},"end":{"line":143,"column":46}},"71":{"start":{"line":144,"column":4},"end":{"line":144,"column":26}},"72":{"start":{"line":146,"column":4},"end":{"line":146,"column":42}},"73":{"start":{"line":146,"column":20},"end":{"line":146,"column":42}},"74":{"start":{"line":147,"column":4},"end":{"line":147,"column":25}},"75":{"start":{"line":149,"column":4},"end":{"line":149,"column":45}},"76":{"start":{"line":149,"column":24},"end":{"line":149,"column":45}},"77":{"start":{"line":150,"column":4},"end":{"line":150,"column":31}},"78":{"start":{"line":160,"column":4},"end":{"line":160,"column":37}},"79":{"start":{"line":160,"column":19},"end":{"line":160,"column":37}},"80":{"start":{"line":161,"column":4},"end":{"line":161,"column":25}},"81":{"start":{"line":171,"column":4},"end":{"line":171,"column":37}},"82":{"start":{"line":171,"column":19},"end":{"line":171,"column":37}},"83":{"start":{"line":172,"column":4},"end":{"line":172,"column":42}},"84":{"start":{"line":172,"column":20},"end":{"line":172,"column":42}},"85":{"start":{"line":173,"column":4},"end":{"line":173,"column":25}},"86":{"start":{"line":175,"column":4},"end":{"line":175,"column":37}},"87":{"start":{"line":175,"column":19},"end":{"line":175,"column":37}},"88":{"start":{"line":176,"column":4},"end":{"line":176,"column":46}},"89":{"start":{"line":176,"column":24},"end":{"line":176,"column":46}},"90":{"start":{"line":177,"column":4},"end":{"line":177,"column":26}},"91":{"start":{"line":189,"column":4},"end":{"line":189,"column":42}},"92":{"start":{"line":189,"column":20},"end":{"line":189,"column":42}},"93":{"start":{"line":190,"column":4},"end":{"line":190,"column":25}},"94":{"start":{"line":192,"column":4},"end":{"line":192,"column":37}},"95":{"start":{"line":192,"column":19},"end":{"line":192,"column":37}},"96":{"start":{"line":193,"column":4},"end":{"line":193,"column":46}},"97":{"start":{"line":193,"column":24},"end":{"line":193,"column":46}},"98":{"start":{"line":194,"column":4},"end":{"line":194,"column":26}},"99":{"start":{"line":202,"column":4},"end":{"line":202,"column":29}},"100":{"start":{"line":212,"column":4},"end":{"line":212,"column":47}},"101":{"start":{"line":212,"column":20},"end":{"line":212,"column":47}},"102":{"start":{"line":213,"column":4},"end":{"line":213,"column":31}},"103":{"start":{"line":217,"column":4},"end":{"line":217,"column":37}},"104":{"start":{"line":217,"column":19},"end":{"line":217,"column":37}},"105":{"start":{"line":218,"column":4},"end":{"line":218,"column":46}},"106":{"start":{"line":218,"column":24},"end":{"line":218,"column":46}},"107":{"start":{"line":219,"column":4},"end":{"line":219,"column":26}},"108":{"start":{"line":227,"column":4},"end":{"line":227,"column":37}},"109":{"start":{"line":227,"column":19},"end":{"line":227,"column":37}},"110":{"start":{"line":228,"column":4},"end":{"line":228,"column":42}},"111":{"start":{"line":228,"column":20},"end":{"line":228,"column":42}},"112":{"start":{"line":229,"column":4},"end":{"line":229,"column":26}},"113":{"start":{"line":245,"column":0},"end":{"line":326,"column":1}},"114":{"start":{"line":246,"column":2},"end":{"line":246,"column":113}},"115":{"start":{"line":246,"column":32},"end":{"line":246,"column":113}},"116":{"start":{"line":248,"column":2},"end":{"line":248,"column":80}},"117":{"start":{"line":251,"column":2},"end":{"line":251,"column":35}},"118":{"start":{"line":253,"column":2},"end":{"line":253,"column":34}},"119":{"start":{"line":253,"column":17},"end":{"line":253,"column":34}},"120":{"start":{"line":256,"column":2},"end":{"line":257,"column":16}},"121":{"start":{"line":260,"column":2},"end":{"line":263,"column":3}},"122":{"start":{"line":261,"column":4},"end":{"line":261,"column":31}},"123":{"start":{"line":262,"column":4},"end":{"line":262,"column":15}},"124":{"start":{"line":266,"column":2},"end":{"line":323,"column":3}},"125":{"start":{"line":267,"column":4},"end":{"line":267,"column":33}},"126":{"start":{"line":270,"column":4},"end":{"line":270,"column":35}},"127":{"start":{"line":273,"column":4},"end":{"line":277,"column":5}},"128":{"start":{"line":274,"column":6},"end":{"line":274,"column":26}},"129":{"start":{"line":275,"column":6},"end":{"line":275,"column":33}},"130":{"start":{"line":276,"column":6},"end":{"line":276,"column":15}},"131":{"start":{"line":279,"column":4},"end":{"line":279,"column":22}},"132":{"start":{"line":282,"column":4},"end":{"line":317,"column":5}},"133":{"start":{"line":283,"column":6},"end":{"line":283,"column":32}},"134":{"start":{"line":284,"column":6},"end":{"line":284,"column":33}},"135":{"start":{"line":287,"column":6},"end":{"line":296,"column":7}},"136":{"start":{"line":288,"column":8},"end":{"line":293,"column":9}},"137":{"start":{"line":289,"column":10},"end":{"line":289,"column":23}},"138":{"start":{"line":290,"column":10},"end":{"line":290,"column":27}},"139":{"start":{"line":291,"column":10},"end":{"line":291,"column":23}},"140":{"start":{"line":292,"column":10},"end":{"line":292,"column":16}},"141":{"start":{"line":295,"column":8},"end":{"line":295,"column":17}},"142":{"start":{"line":299,"column":6},"end":{"line":299,"column":41}},"143":{"start":{"line":301,"column":6},"end":{"line":316,"column":7}},"144":{"start":{"line":302,"column":8},"end":{"line":302,"column":21}},"145":{"start":{"line":304,"column":8},"end":{"line":311,"column":9}},"146":{"start":{"line":305,"column":10},"end":{"line":305,"column":35}},"147":{"start":{"line":307,"column":10},"end":{"line":307,"column":88}},"148":{"start":{"line":309,"column":10},"end":{"line":309,"column":34}},"149":{"start":{"line":310,"column":10},"end":{"line":310,"column":33}},"150":{"start":{"line":313,"column":8},"end":{"line":313,"column":25}},"151":{"start":{"line":315,"column":8},"end":{"line":315,"column":14}},"152":{"start":{"line":319,"column":4},"end":{"line":322,"column":5}},"153":{"start":{"line":320,"column":6},"end":{"line":320,"column":26}},"154":{"start":{"line":321,"column":6},"end":{"line":321,"column":33}},"155":{"start":{"line":325,"column":2},"end":{"line":325,"column":14}},"156":{"start":{"line":327,"column":0},"end":{"line":327,"column":36}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":35},"end":{"line":8,"column":35}},{"start":{"line":8,"column":35},"end":{"line":8,"column":35}}]},"2":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"3":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"4":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"5":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"6":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"8":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"9":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"10":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"11":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"12":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":17}},{"start":{"line":108,"column":21},"end":{"line":108,"column":30}}]},"13":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"14":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"15":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]},"16":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"17":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"18":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":8},"end":{"line":131,"column":19}},{"start":{"line":131,"column":23},"end":{"line":131,"column":26}}]},"19":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"20":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"21":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":8},"end":{"line":137,"column":17}},{"start":{"line":137,"column":21},"end":{"line":137,"column":30}}]},"22":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"23":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"24":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"25":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"26":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"27":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"28":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"29":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"30":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"31":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"32":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"33":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"34":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"35":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"36":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"37":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4}},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]},"38":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"39":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":227,"column":4}},{"start":{"line":227,"column":4},"end":{"line":227,"column":4}}]},"40":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"41":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"42":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"43":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"44":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":4},"end":{"line":273,"column":4}},{"start":{"line":273,"column":4},"end":{"line":273,"column":4}}]},"45":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":6},"end":{"line":287,"column":6}},{"start":{"line":287,"column":6},"end":{"line":287,"column":6}}]},"46":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8}},{"start":{"line":288,"column":8},"end":{"line":288,"column":8}}]},"47":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":6},"end":{"line":301,"column":6}},{"start":{"line":301,"column":6},"end":{"line":301,"column":6}}]},"48":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":8},"end":{"line":304,"column":8}},{"start":{"line":304,"column":8},"end":{"line":304,"column":8}}]},"49":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":20},"end":{"line":305,"column":28}},{"start":{"line":305,"column":32},"end":{"line":305,"column":34}}]},"50":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":4},"end":{"line":319,"column":4}},{"start":{"line":319,"column":4},"end":{"line":319,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = sonnex;","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }","","/* eslint no-confusing-arrow: 0 */","/**"," * Talisman phonetics/french/sonnex"," * ================================="," *"," * Implementation of the French phonetic algorithm \"Sonnex\"."," *"," * [Author]: Frédéric Bisson"," * [Revision]: Guillaume Plique"," *"," * [Reference]:"," * https://github.com/Zigazou/Sonnex"," *"," * [Note]:"," * The orignal algorithm has been slightly modified to better account for some"," * more cases."," */","","/**"," * Helpers."," */","var VOWELS = new Set('aâàäeéèêëiîïoôöuùûüyœ'),","    CONSONANTS = new Set('bcçdfghjklmnpqrstvwxyz'),","    SIMPLE_QUOTES = '’‘`‛\\'';","","var DROP_SIMPLE_QUOTES = new RegExp('[' + SIMPLE_QUOTES + ']', 'g');","","function isVowel(letter) {","  return VOWELS.has(letter);","}","","function isConsonant(letter) {","  return CONSONANTS.has(letter);","}","","/**"," * Rules."," */","var EXCEPTIONS = {","  cerf: 'sEr',","  cerfs: 'sEr',","  de: 'de',","  est: 'E',","  es: 'E',","  huit: 'uit',","  les: 'lE',","  mer: 'mEr',","  mes: 'mE',","  ressent: 'res2',","  serf: 'sEr',","  serfs: 'sEr',","  sept: 'sEt',","  septième: 'sEtiEm',","  ses: 'sE',","  tes: 'tE',","","  // NOTE: those exceptions have been added","  eschatologie: 'Eskatoloji'","};","","// Rules expressed in the following format:","//   [0]: The pattern to match (string if exact, regex if fuzzy)","//   [1]: The encoding. If passed as a function, the function must return","//        both the encoding and the continuation string.","//","// Note: it's possible to optimize the rules not to use regular expression","//       at all.","var RULES = {","  a: [['a', 'a'], ['aient', 'E'], ['ain', '1'], [/ain(.)(.*)$/, function (v, cs) {","    if (isVowel(v)) return ['E', v + cs];","    return ['1', v + cs];","  }], ['ais', 'E'], [/^ais(.)(.*)/, function (v, cs) {","    if (v === 's') return ['Es', cs];","    if (isVowel(v)) return ['Ez', v + cs];","    return ['Es', v + cs];","  }], ['ail', 'ai'], [/^aill(.*)/, 'ai'], [/^ai(.*)/, 'E'], [/^amm(.*)/, 'am'], [/^am(.)(.*)/, function (c, cs) {","    if (c === 'm') return ['am', cs];","    if (isVowel(c)) return ['am', c + cs];","    return ['2', c + cs];","  }], ['an', '2'], [/^an(.)(.*)/, function (c, cs) {","    if (c === 'n') return ['an', cs];","    if (isVowel(c)) return ['an', c + cs];","    return ['2', c + cs];","  }], ['assent', 'as'], [/^as(.)(.*)/, function (c, cs) {","    if (c === 's') return ['as', cs];","    if (isConsonant(c)) return ['as', c + cs];","    return ['az', c + cs];","  }], [/^au(.*)/, function (cs) {","    return ['o', cs];","  }], ['ay', 'E'], ['ays', 'E']],","","  à: [[/^à(.*)/, 'a']],","","  â: [[/^â(.*)/, 'a']],","","  b: [['b', ''], [/^bb(.*)/, 'b']],","","  c: [['c', ''], [/^c(a.*)/, 'k'], [/^cc(.)(.*)/, function (v, cs) {","    if (v === 'o' || v === 'u') return ['k', v + cs];","    return ['ks', cs];","  }], [/^c(e.*)/, 's'], [/^c'(.*)/, 's'],","","  // NOTE: adding a rule to account for the Greek root \"chiro\"","  [/^chiro([^u].*)/, 'kiro'], [/^ch(ao.*)/, 'k'], [/^chl(.*)/, 'kl'], [/^ch(oe.*)/, 'k'], [/^chr(.*)/, 'kr'], [/^ch(.*)/, 'C'], [/^c(i.*)/, 's'], [/^ck(.*)/, 'k'], [/^c(oeu.*)/, 'k'], [/^compt(.*)/, 'k3t'], [/^c(o.*)/, 'k'], [/^cue(i.*)/, 'ke'], [/^c(u.*)/, 'k'], [/^c(y.*)/, 's'], [/^c(.*)/, 'k']],","","  ç: [[/^ç(.*)/, 's']],","","  d: [['d', ''], ['ds', ''], [/^dd(.*)/, 'd']],","","  e: [['e', ''], ['ec', 'Ec'], ['ef', 'Ef'], ['eaux', 'o'], [/^eann(.*)/, 'an'], [/^ean(.*)/, '2'], [/^eau(.*)/, 'o'], [/^eff(.*)/, 'Ef'], [/^e(gm.*)/, 'E'], ['ein', '1'], [/^ein(.)(.*)/, function (c, cs) {","    if (c === 'n') return ['En', cs];","    if (isVowel(c)) return ['En', c + cs];","    return ['1', c + cs];","  }], [/^ei(.*)/, 'E'], [/^ell(.*)/, 'El'], [/^el(.)(.*)/, function (c, cs) {","    if (isConsonant(c)) return ['E', 'l' + c + cs];","    return ['e', 'l' + c + cs];","  }], [/^emm(.*)/, 'Em'],","","  // NOTE: this rule has been modified to better handle \"emp\"","  [/^emp(.)(.*)/, function (c, cs) {","    if (c === 'h') return ['2', 'p' + c + cs];","    if (!isVowel(c) && !cs) return ['2', cs];","    return ['2p', c + cs];","  }], [/^enn(.*)/, 'En'], ['en', '2'], [/^en(.)(.*)/, function (c, cs) {","    if (isVowel(c)) return ['en', c + cs];","    return ['2', c + cs];","  }], ['er', 'E'], ['ert', 'Er'], [/^err(.*)/, 'Er'], [/^er(f.*)/, 'Er'], ['es', ''], [/^esch(.*)/, 'EC'], ['essent', 'Es'], [/^es(.)(.*)/, function (c, cs) {","    if (c === 'h' || c === 'n') return ['E', c + cs];","    if (c === 's') return ['Es', cs];","    if (isConsonant(c)) return ['Es', c + cs];","    return ['ez', c + cs];","  }], [/^és(.)(.*)/, function (c, cs) {","    if (c === 's') return ['Es', cs];","    if (isConsonant(c)) return ['Es', c + cs];","    return ['Ez', c + cs];","  }], [/^ett(.*)/, 'Et'], ['et', 'E'], [/^et(.*)/, 'et'], [/^eun(.)(.*)/, function (c, cs) {","    if (isVowel(c)) return ['en', c + cs];","    return ['1', c + cs];","  }], ['eux', 'e'], [/^eux(i.*)/, 'ez'], [/^eu(.*)/, 'e'], ['ex', 'Eks'], [/^ey(.)(.*)/, function (c, cs) {","    if (isConsonant(c)) return ['E', c + cs];","    return ['E', 'y' + c + cs];","  }], ['ez', 'E']],","","  è: [[/^è(.*)/, 'E']],","","  ê: [[/ê(.*)/, 'E']],","","  ë: [[/^ë(l.*)/, 'E']],","","  é: [['é', 'E'], [/^é(.)(.*)/, function (c, cs) {","    if (c === 't') return ['Et', cs];","    return ['E', c + cs];","  }]],","","  f: [[/^ff(.*)/, 'f']],","","  g: [['g', ''], [/^g(e.*)/, 'j'], [/^gé(.*)/, 'jE'], [/^g(i.*)/, 'j'], [/^gn(.*)/, 'n'], [/^g(y.*)/, 'j'], [/^guë(.*)/, 'gu'], [/^gu(.*)/, 'g'], [/^gg(.*)/, 'g']],","","  h: [[/^h(.*)/, '']],","","  i: [['ic', 'ik'], ['ics', 'ik'], [/^ienn(.*)/, 'iEn'], [/^ien(.*)/, 'i1'], ['in', '1'], [/^in(.)(.*)/, function (c, cs) {","    if (c === 'n') return ['in', cs];","    if (isVowel(c)) return ['in', c + cs];","    return ['1', c + cs];","  }], ['issent', 'is'], [/^is(.)(.*)/, function (c, cs) {","    if (c === 's') return ['is', cs];","    if (isConsonant(c)) return ['is', c + cs];","    return ['iz', c + cs];","  }], [/^ix(i.*)/, 'iz'], [/^ill(.*)/, 'i'], [/^i(.*)/, 'i']],","","  ï: [[/^ï(.*)/, 'i']],","","  l: [[/^ll(.*)/, 'l']],","","  m: [[/^mm(.*)/, 'm']],","","  n: [[/^nn(.*)/, 'n']],","","  o: [[/^occ(.*)/, 'ok'], [/^oeu?(.*)/, 'e'], ['oient', 'Ua'], [/^oin(.*)/, 'U1'], [/^oi(.*)/, 'Ua'], [/^omm(.*)/, 'om'], [/^om(.)(.*)/, function (c, cs) {","    if (isVowel(c)) return ['om', c + cs];","    return ['3', c + cs];","  }], [/^onn(.*)/, 'on'], [/^on(.*)/, '3'], ['ossent', 'os'], [/^os(.)(.*)/, function (c, cs) {","    if (c === 's') return ['os', cs];","    if (isConsonant(c)) return ['os', c + cs];","    return ['oz', c + cs];","  }], [/^o[uùû](.*)/, 'U']],","","  ô: [[/^ô(.*)/, 'o']],","","  ö: [[/^ô(.*)/, 'o']],","","  p: [['p', ''], [/^ph(.*)/, 'f'], [/^pp(.*)/, 'p'], [/^pays(.*)/, function (cs) {","    return ['pE', 'is' + cs];","  }]],","","  q: [[/^qu(r.*)/, 'ku'], [/^qu(.*)/, 'k'], [/^q(.*)/, 'k']],","","  r: [[/^rr(.*)/, 'r']],","","  s: [['s', ''], [/^ss(.*)/, 's'], [/^st(.*)/, 'st'], [/^sc(i.*)/, 's']],","","  t: [['t', ''], [/^t(ier.*)/, 't'], [/^ti(.)(.*)/, function (v, cs) {","    if (isVowel(v)) return ['s', 'i' + v + cs];","    return ['t', 'i' + v + cs];","  }], [/^tt(.*)/, 't']],","","  u: [['un', '1'], ['ussent', 'us'], [/^us(.*)/, function (c, cs) {","    if (c === 's') return ['us', cs];","    if (isConsonant(c)) return ['us', c + cs];","    return ['uz', c + cs];","  }]],","","  û: [[/^û(.*)/, 'u']],","","  w: [[/^w(.*)/, 'v']],","","  x: [['x', ''], [/^x(.)(.*)/, function (c, cs) {","    if (c === 'c') return ['ks', cs];","    if (isVowel(c)) return ['kz', c + cs];","    return ['ks', c + cs];","  }]],","","  y: [[/^y(.*)/, 'i']],","","  z: [[/^zz(.*)/, 'z']]","};","","/**"," * Function taking a single word and computing its Sonnex code."," *"," * @param  {string}  word - The word to process."," * @return {string}       - The Sonnex code."," *"," * @throws {Error} The function expects the word to be a string."," */","function sonnex(word) {","  if (typeof word !== 'string') throw Error('talisman/phonetics/french/sonnex: the given word is not a string.');","","  word = word.toLowerCase().replace(DROP_SIMPLE_QUOTES, '').replace(/œ/g, 'oe');","","  // Some exceptions","  var exception = EXCEPTIONS[word];","","  if (exception) return exception;","","  // Applying the rules","  var current = word,","      code = '';","","  // If the word starts with \"tien\", we skip encoding the \"t\"","  if (/^tien/.test(current)) {","    current = current.slice(1);","    code = 't';","  }","","  // Encoding each letter of the word","  while (current.length) {","    var firstLetter = current[0];","","    // Retrieving the proper set of rules","    var rules = RULES[firstLetter];","","    // If there is no rules for the letter, we skip to the next one","    if (!rules) {","      code += firstLetter;","      current = current.slice(1);","      continue;","    }","","    var found = false;","","    // Iterating through rules","    for (var i = 0, l = rules.length; i < l; i++) {","      var pattern = rules[i][0];","      var encoding = rules[i][1];","","      // Simple pattern","      if (typeof pattern === 'string') {","        if (current === pattern) {","          found = true;","          code += encoding;","          current = '';","          break;","        }","","        continue;","      }","","      // Regex pattern","      var match = current.match(pattern);","","      if (match) {","        found = true;","","        if (typeof encoding === 'string') {","          current = match[1] || '';","        } else {","          var _encoding = encoding.apply(undefined, _toConsumableArray(match.slice(1)));","","          encoding = _encoding[0];","          current = _encoding[1];","        }","","        code += encoding;","","        break;","      }","    }","","    if (!found) {","      code += firstLetter;","      current = current.slice(1);","    }","  }","","  return code;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"31":1,"35":1,"37":1,"38":0,"41":1,"42":0,"48":1,"77":1,"79":0,"80":0,"82":0,"83":0,"84":0,"86":0,"87":0,"88":0,"90":0,"91":0,"92":0,"94":0,"95":0,"96":0,"98":0,"108":0,"109":0,"120":0,"121":0,"122":0,"124":0,"125":0,"130":0,"131":0,"132":0,"134":0,"135":0,"137":0,"138":0,"139":0,"140":0,"142":0,"143":0,"144":0,"146":0,"147":0,"149":0,"150":0,"160":0,"161":0,"171":0,"172":0,"173":0,"175":0,"176":0,"177":0,"189":0,"190":0,"192":0,"193":0,"194":0,"202":0,"212":0,"213":0,"217":0,"218":0,"219":0,"227":0,"228":0,"229":0,"245":1,"246":0,"248":0,"251":0,"253":0,"256":0,"260":0,"261":0,"262":0,"266":0,"267":0,"270":0,"273":0,"274":0,"275":0,"276":0,"279":0,"282":0,"283":0,"284":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"295":0,"299":0,"301":0,"302":0,"304":0,"305":0,"307":0,"309":0,"310":0,"313":0,"315":0,"319":0,"320":0,"321":0,"325":0,"327":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/french/soundex2.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/french/soundex2.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"_toConsumableArray","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}}},"3":{"name":"pad","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":19}}},"4":{"name":"soundex2","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":195}},"9":{"start":{"line":16,"column":35},"end":{"line":16,"column":193}},"10":{"start":{"line":16,"column":61},"end":{"line":16,"column":145}},"11":{"start":{"line":16,"column":126},"end":{"line":16,"column":143}},"12":{"start":{"line":16,"column":146},"end":{"line":16,"column":158}},"13":{"start":{"line":16,"column":168},"end":{"line":16,"column":191}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":116}},"15":{"start":{"line":33,"column":0},"end":{"line":37,"column":90}},"16":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"17":{"start":{"line":43,"column":2},"end":{"line":43,"column":26}},"18":{"start":{"line":58,"column":0},"end":{"line":95,"column":1}},"19":{"start":{"line":59,"column":2},"end":{"line":59,"column":115}},"20":{"start":{"line":59,"column":32},"end":{"line":59,"column":115}},"21":{"start":{"line":61,"column":2},"end":{"line":61,"column":84}},"22":{"start":{"line":64,"column":2},"end":{"line":68,"column":3}},"23":{"start":{"line":65,"column":4},"end":{"line":65,"column":14}},"24":{"start":{"line":67,"column":4},"end":{"line":67,"column":78}},"25":{"start":{"line":69,"column":2},"end":{"line":69,"column":65}},"26":{"start":{"line":72,"column":2},"end":{"line":80,"column":3}},"27":{"start":{"line":73,"column":4},"end":{"line":76,"column":31}},"28":{"start":{"line":79,"column":4},"end":{"line":79,"column":82}},"29":{"start":{"line":79,"column":42},"end":{"line":79,"column":82}},"30":{"start":{"line":83,"column":2},"end":{"line":83,"column":41}},"31":{"start":{"line":86,"column":2},"end":{"line":86,"column":40}},"32":{"start":{"line":89,"column":2},"end":{"line":89,"column":37}},"33":{"start":{"line":92,"column":2},"end":{"line":92,"column":58}},"34":{"start":{"line":94,"column":2},"end":{"line":94,"column":42}},"35":{"start":{"line":96,"column":0},"end":{"line":96,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":35},"end":{"line":16,"column":35}},{"start":{"line":16,"column":35},"end":{"line":16,"column":35}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = soundex2;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","var _helpers = require('../../helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**","                                                                                                                                                                                                     * Talisman phonetics/french/soundexrench phonetic algorithm loosely based upon the classifcal Soundex.","                                                                                                                                                                                                     *","                                                                                                                                                                                                     * [Reference]:","                                                                                                                                                                                                     * http://www-info.univ-lemans.fr/~carlier/recherche/soundex.html","                                                                                                                                                                                                     * http://sqlpro.developpez.com/cours/soundex/","                                                                                                                                                                                                     */","","","/**"," * Rules."," */","var GROUPS = [[/GU([IE])/g, 'K$1'], [/G([AO])/g, 'K$1'], [/GU/g, 'K'], [/C([AOU])/g, 'K$1'], [/(?:Q|CC|CK)/g, 'K']];","","var PREFIXES = [","","// Note: the way the algorithm is described, it is highly probable that","// the 'MAC' rule cannot work because of precendent modifications","['MAC', 'MCC'], ['SCH', 'SSS'], ['ASA', 'AZA'], ['KN', 'NN'], ['PH', 'FF'], ['PF', 'FF']];","","/**"," * Helpers."," */","function pad(code) {","  return code.slice(0, 4);","}","","/**"," * Function taking a single name and computing its Soundex2 code."," *"," * Note: the description of the algorithm says to pad the code using spaces, but"," * as I cannot see why one would do that (plus it is quite error-prone when"," * debugging), I decided to drop it."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The Soundex2 code."," *"," * @throws {Error} The function expects the name to be a string."," */","function soundex2(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/french/soundex2: the given name is not a string.');","","  var code = (0, _deburr2.default)(name.trim()).toUpperCase().replace(/[^A-Z]/, '');","","  // Replacing some letter groups","  for (var i = 0, l = GROUPS.length; i < l; i++) {","    var _code;","","    code = (_code = code).replace.apply(_code, _toConsumableArray(GROUPS[i]));","  } // Replacing vowels","  code = code.charAt(0) + code.slice(1).replace(/[AEIOU]/g, 'A');","","  // Replacing prefixes","  for (var _i = 0, _l = PREFIXES.length; _i < _l; _i++) {","    var _PREFIXES$_i = PREFIXES[_i],","        prefix = _PREFIXES$_i[0],","        replacement = _PREFIXES$_i[1],","        length = prefix.length;","","","    if (code.slice(0, length) === prefix) code = replacement + code.slice(length);","  }","","  // Handling the letter H","  code = code.replace(/([^CS])H/g, '$1');","","  // Handling the letter Y","  code = code.replace(/([^A])Y/g, '$1');","","  // Removing some endings","  code = code.replace(/[ADTS]$/, '');","","  // Removing non-leading vowels","  code = code.charAt(0) + code.slice(1).replace(/A/g, '');","","  return pad((0, _helpers.squeeze)(code));","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"31":1,"33":1,"42":1,"43":0,"58":1,"59":0,"61":0,"64":0,"65":0,"67":0,"69":0,"72":0,"73":0,"79":0,"83":0,"86":0,"89":0,"92":0,"94":0,"96":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/german/cologne.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/german/cologne.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"germanicSubstitutions","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":37}}},"3":{"name":"cologne","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":23}}},"4":{"name":"(anonymous_4)","line":122,"loc":{"start":{"line":122,"column":44},"end":{"line":122,"column":65}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":33,"column":0},"end":{"line":64,"column":2}},"9":{"start":{"line":66,"column":0},"end":{"line":70,"column":33}},"10":{"start":{"line":75,"column":0},"end":{"line":77,"column":1}},"11":{"start":{"line":76,"column":2},"end":{"line":76,"column":111}},"12":{"start":{"line":87,"column":0},"end":{"line":127,"column":1}},"13":{"start":{"line":88,"column":2},"end":{"line":88,"column":114}},"14":{"start":{"line":88,"column":32},"end":{"line":88,"column":114}},"15":{"start":{"line":91,"column":2},"end":{"line":91,"column":97}},"16":{"start":{"line":94,"column":2},"end":{"line":94,"column":16}},"17":{"start":{"line":96,"column":2},"end":{"line":119,"column":3}},"18":{"start":{"line":97,"column":4},"end":{"line":98,"column":37}},"19":{"start":{"line":100,"column":4},"end":{"line":118,"column":72}},"20":{"start":{"line":100,"column":36},"end":{"line":100,"column":60}},"21":{"start":{"line":103,"column":9},"end":{"line":118,"column":72}},"22":{"start":{"line":103,"column":47},"end":{"line":103,"column":86}},"23":{"start":{"line":106,"column":11},"end":{"line":118,"column":72}},"24":{"start":{"line":107,"column":10},"end":{"line":108,"column":38}},"25":{"start":{"line":110,"column":10},"end":{"line":114,"column":11}},"26":{"start":{"line":111,"column":12},"end":{"line":111,"column":25}},"27":{"start":{"line":113,"column":12},"end":{"line":113,"column":25}},"28":{"start":{"line":118,"column":13},"end":{"line":118,"column":72}},"29":{"start":{"line":118,"column":33},"end":{"line":118,"column":72}},"30":{"start":{"line":122,"column":2},"end":{"line":124,"column":5}},"31":{"start":{"line":123,"column":4},"end":{"line":123,"column":24}},"32":{"start":{"line":126,"column":2},"end":{"line":126,"column":23}},"33":{"start":{"line":128,"column":0},"end":{"line":128,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"4":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"5":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":9},"end":{"line":103,"column":9}},{"start":{"line":103,"column":9},"end":{"line":103,"column":9}}]},"6":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":13},"end":{"line":103,"column":27}},{"start":{"line":103,"column":31},"end":{"line":103,"column":45}}]},"7":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":79},"end":{"line":103,"column":80}},{"start":{"line":103,"column":83},"end":{"line":103,"column":84}}]},"8":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":11},"end":{"line":106,"column":11}},{"start":{"line":106,"column":11},"end":{"line":106,"column":11}}]},"9":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":10},"end":{"line":110,"column":10}},{"start":{"line":110,"column":10},"end":{"line":110,"column":10}}]},"10":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":14},"end":{"line":110,"column":23}},{"start":{"line":110,"column":27},"end":{"line":110,"column":53}},{"start":{"line":110,"column":57},"end":{"line":110,"column":83}},{"start":{"line":110,"column":87},"end":{"line":110,"column":111}}]},"11":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":13},"end":{"line":118,"column":13}},{"start":{"line":118,"column":13},"end":{"line":118,"column":13}}]},"12":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":64},"end":{"line":118,"column":65}},{"start":{"line":118,"column":68},"end":{"line":118,"column":70}}]},"13":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":11},"end":{"line":123,"column":13}},{"start":{"line":123,"column":17},"end":{"line":123,"column":23}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = cologne;","","var _helpers = require('../../helpers');","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Maps."," */","/**"," * Talisman phonetics/german/cologne"," * =================================="," *"," * The cologne algorithm."," *"," * [Reference]:"," * https://en.wikipedia.org/wiki/Cologne_phonetics"," *"," * [Article]:"," * Hans Joachim Postel: Die Kölner Phonetik. Ein Verfahren zur Identifizierung"," * von Personennamen auf der Grundlage der Gestaltanalyse."," * in: IBM-Nachrichten, 19. Jahrgang, 1969, S. 925-931."," */","var CODES = {","  H: null,","","  A: 0,","  E: 0,","  I: 0,","  O: 0,","  U: 0,","  J: 0,","  Y: 0,","","  B: 1,","  P: 1,","","  F: 3,","  V: 3,","  W: 3,","","  G: 4,","  K: 4,","  Q: 4,","","  L: 5,","","  M: 6,","  N: 6,","","  R: 7,","","  S: 8,","  Z: 8","};","","var DT = new Set(['C', 'S', 'Z']),","    CFollowing1 = new Set(['A', 'H', 'K', 'L', 'O', 'Q', 'R', 'U', 'X']),","    CFollowing2 = new Set(['A', 'H', 'K', 'O', 'Q', 'U', 'X']),","    CPrevious = new Set(['S', 'Z']),","    X = new Set(['C', 'Q', 'K']);","","/**"," * Helpers."," */","function germanicSubstitutions(name) {","  return name.replace(/Ä/g, 'A').replace(/Ö/g, 'O').replace(/Ü/g, 'U').replace(/ß/g, 'SS').replace(/PH/g, 'F');","}","","/**"," * Function taking a single name and computing its cologne code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The cologne code."," *"," * @throws {Error} The function expects the name to be a string."," */","function cologne(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/german/cologne: the given name is not a string.');","","  // Preparing the name","  name = (0, _deburr2.default)(germanicSubstitutions(name.toUpperCase())).replace(/[^A-Z]/g, '');","","  // Processing the letters of the name","  var code = [];","","  for (var i = 0, l = name.length; i < l; i++) {","    var letter = name[i],","        possibleCode = CODES[letter];","","    if (possibleCode !== undefined) code.push(possibleCode);","","    // Handling D/T","    else if (letter === 'D' || letter === 'T') code.push(DT.has(name[i + 1]) ? 8 : 2);","","      // Handling C","      else if (letter === 'C') {","          var previous = name[i - 1],","              following = name[i + 1];","","          if (!previous && CFollowing1.has(following) || CFollowing2.has(following) && !CPrevious.has(previous)) {","            code.push(4);","          } else {","            code.push(8);","          }","        }","","        // Handling X","        else if (letter === 'X') code.push(X.has(name[i - 1]) ? 8 : 48);","  }","","  // Squeezing and dropping 0 if not first letter","  code = (0, _helpers.squeeze)(code).filter(function (letter, i) {","    return !i || letter;","  });","","  return code.join('');","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"33":1,"66":1,"75":1,"76":0,"87":1,"88":0,"91":0,"94":0,"96":0,"97":0,"100":0,"103":0,"106":0,"107":0,"110":0,"111":0,"113":0,"118":0,"122":0,"123":0,"126":0,"128":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/german/phonem.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/phonetics/german/phonem.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"_toConsumableArray","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}}},"2":{"name":"phonem","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":195}},"5":{"start":{"line":10,"column":35},"end":{"line":10,"column":193}},"6":{"start":{"line":10,"column":61},"end":{"line":10,"column":145}},"7":{"start":{"line":10,"column":126},"end":{"line":10,"column":143}},"8":{"start":{"line":10,"column":146},"end":{"line":10,"column":158}},"9":{"start":{"line":10,"column":168},"end":{"line":10,"column":191}},"10":{"start":{"line":29,"column":0},"end":{"line":29,"column":205}},"11":{"start":{"line":31,"column":0},"end":{"line":31,"column":130}},"12":{"start":{"line":33,"column":0},"end":{"line":33,"column":53}},"13":{"start":{"line":43,"column":0},"end":{"line":63,"column":1}},"14":{"start":{"line":44,"column":2},"end":{"line":44,"column":113}},"15":{"start":{"line":44,"column":32},"end":{"line":44,"column":113}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":32}},"17":{"start":{"line":48,"column":2},"end":{"line":52,"column":3}},"18":{"start":{"line":49,"column":4},"end":{"line":49,"column":14}},"19":{"start":{"line":51,"column":4},"end":{"line":51,"column":85}},"20":{"start":{"line":52,"column":3},"end":{"line":52,"column":27}},"21":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"22":{"start":{"line":54,"column":4},"end":{"line":54,"column":56}},"23":{"start":{"line":55,"column":3},"end":{"line":55,"column":58}},"24":{"start":{"line":57,"column":2},"end":{"line":57,"column":12}},"25":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"26":{"start":{"line":59,"column":4},"end":{"line":59,"column":81}},"27":{"start":{"line":59,"column":53},"end":{"line":59,"column":81}},"28":{"start":{"line":62,"column":2},"end":{"line":62,"column":14}},"29":{"start":{"line":64,"column":0},"end":{"line":64,"column":36}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":35},"end":{"line":10,"column":35}},{"start":{"line":10,"column":35},"end":{"line":10,"column":35}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"3":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":22},"end":{"line":54,"column":43}},{"start":{"line":54,"column":47},"end":{"line":54,"column":55}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = phonem;","","var _helpers = require('../../helpers');","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /**","                                                                                                                                                                                                     * Talisman phonetics/german/phonemhe phonem algorithm.","                                                                                                                                                                                                     *","                                                                                                                                                                                                     * [Reference]:","                                                                                                                                                                                                     * http://web.archive.org/web/20070209153423/http://uni-koeln.de/phil-fak/phonetik/Lehre/MA-Arbeiten/magister_wilz.pdf","                                                                                                                                                                                                     *","                                                                                                                                                                                                     * [Article]:","                                                                                                                                                                                                     * Wilde, Georg ; Meyer, Carsten: Doppelgänger gesucht - Ein Programm fur","                                                                                                                                                                                                     * kontext-sensitive phonetische Textumwandlung. In: ct Magazin fur","                                                                                                                                                                                                     * Computer & Technik 25 (1988)","                                                                                                                                                                                                     */","","","/**"," * Rules."," */","var SUBSTITUTIONS = [[/(?:SC|SZ|CZ|TZ|TS)/g, 'C'], [/KS/g, 'X'], [/(?:PF|PH)/g, 'V'], [/QU/g, 'KW'], [/UE/g, 'Y'], [/AE/g, 'E'], [/OE/g, 'Ö'], [/E[IY]/g, 'AY'], [/EU/g, 'OY'], [/AU/g, 'A§'], [/OU/g, '§']];","","var TRANSLATION = (0, _helpers.translation)('ZKGQÇÑßFWPTÁÀÂÃÅÄÆÉÈÊËIJÌÍÎÏÜÝ§ÚÙÛÔÒÓÕØ', 'CCCCCNSVVBDAAAAAEEEEEEYYYYYYYYUUUUOOOOÖ');","","var ACCEPTABLE_LETTERS = new Set('ABCDLMNORSUVWXYÖ');","","/**"," * Function taking a single name and computing its phonem code."," *"," * @param  {string}  name - The name to process."," * @return {string}       - The phonem code."," *"," * @throws {Error} The function expects the name to be a string."," */","function phonem(name) {","  if (typeof name !== 'string') throw Error('talisman/phonetics/german/phonem: the given name is not a string.');","","  var code = name.toUpperCase();","","  for (var i = 0, l = SUBSTITUTIONS.length; i < l; i++) {","    var _code;","","    code = (_code = code).replace.apply(_code, _toConsumableArray(SUBSTITUTIONS[i]));","  }var translatedCode = '';","  for (var _i = 0, _l = code.length; _i < _l; _i++) {","    translatedCode += TRANSLATION[code[_i]] || code[_i];","  }translatedCode = (0, _helpers.squeeze)(translatedCode);","","  code = '';","  for (var _i2 = 0, _l2 = translatedCode.length; _i2 < _l2; _i2++) {","    if (ACCEPTABLE_LETTERS.has(translatedCode[_i2])) code += translatedCode[_i2];","  }","","  return code;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"29":1,"31":1,"33":1,"43":1,"44":0,"46":0,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"57":0,"58":0,"59":0,"62":0,"64":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/french/carry.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/french/carry.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"computeM","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":26}}},"2":{"name":"applyRules","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":33}}},"3":{"name":"carry","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":29,"column":0},"end":{"line":31,"column":28}},"4":{"start":{"line":33,"column":0},"end":{"line":35,"column":45}},"5":{"start":{"line":40,"column":0},"end":{"line":46,"column":1}},"6":{"start":{"line":43,"column":2},"end":{"line":43,"column":50}},"7":{"start":{"line":45,"column":2},"end":{"line":45,"column":40}},"8":{"start":{"line":51,"column":0},"end":{"line":53,"column":1398}},"9":{"start":{"line":55,"column":0},"end":{"line":55,"column":87}},"10":{"start":{"line":57,"column":0},"end":{"line":57,"column":145}},"11":{"start":{"line":65,"column":0},"end":{"line":86,"column":1}},"12":{"start":{"line":67,"column":2},"end":{"line":83,"column":3}},"13":{"start":{"line":68,"column":4},"end":{"line":72,"column":63}},"14":{"start":{"line":75,"column":4},"end":{"line":82,"column":5}},"15":{"start":{"line":76,"column":6},"end":{"line":77,"column":32}},"16":{"start":{"line":79,"column":6},"end":{"line":79,"column":29}},"17":{"start":{"line":79,"column":20},"end":{"line":79,"column":29}},"18":{"start":{"line":81,"column":6},"end":{"line":81,"column":21}},"19":{"start":{"line":85,"column":2},"end":{"line":85,"column":14}},"20":{"start":{"line":95,"column":0},"end":{"line":103,"column":1}},"21":{"start":{"line":96,"column":2},"end":{"line":96,"column":32}},"22":{"start":{"line":98,"column":2},"end":{"line":98,"column":33}},"23":{"start":{"line":99,"column":2},"end":{"line":99,"column":33}},"24":{"start":{"line":100,"column":2},"end":{"line":100,"column":33}},"25":{"start":{"line":102,"column":2},"end":{"line":102,"column":14}},"26":{"start":{"line":104,"column":0},"end":{"line":104,"column":36}}},"branchMap":{"1":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":10},"end":{"line":45,"column":25}},{"start":{"line":45,"column":29},"end":{"line":45,"column":31}}]},"2":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":48},"end":{"line":72,"column":50}},{"start":{"line":72,"column":53},"end":{"line":72,"column":62}}]},"3":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"4":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = carry;","/**"," * Talisman stemmers/french/carry"," * ==============================="," *"," * The Carry stemmer for the French language."," *"," * [Reference]:"," * http://www.otlet-institute.org/docs/Carry.pdf"," *"," * [Article]:"," * Carry, un algorithme de désuffixation pour le français. M. Paternostre,"," * P. Francq, J. Lamoral, D. Wartel et M. Saerens. 2002"," *"," * [Note]:"," * This algorithm has been edited to handle some more cases and is thus"," * lightly different from the original paper (modifications by Guillaume"," * Plique)."," */","","/**"," * Constants."," */","var VOWELS = 'aeiouyâàëéêèïîôûùœæ',","    V = '[' + VOWELS + ']',","    C = '[^' + VOWELS + ']';","","var LC = new RegExp('^' + C + '+'),","    TV = new RegExp(V + '+$'),","    M = new RegExp('(' + V + '+' + C + '+)');","","/**"," * Helpers."," */","function computeM(string) {","","  // Removing leading consonants","  string = string.replace(LC, '').replace(TV, '');","","  return (string.match(M) || []).length;","}","","/**"," * Rules."," */","var STEP1 = [[0, 'issaient'], [0, 'ellement', 'el'], [0, 'issement'], [0, 'alement', 'al'], [0, 'eraient'], [0, 'iraient'], [0, 'eassent'], [0, 'ussent'], [0, 'amment'], [0, 'emment'], [0, 'issant'], [0, 'issent'], [0, 'assent'], [0, 'eaient'], [0, 'issait'], [0, 'èrent'], [0, 'erent'], [0, 'irent'], [0, 'erait'], [0, 'irait'], [0, 'iront'], [0, 'eront'], [0, 'ement'], [0, 'aient'], [0, 'îrent'], [0, 'eont'], [0, 'eant'], [0, 'eait'], [0, 'ient'], [0, 'ent'], [0, 'ont'], [0, 'ant'], [0, 'eât'], [0, 'ait'], [0, 'at'], [0, 'ât'], [0, 'it'], [0, 'ît'], [0, 't'], [0, 'uction'], [1, 'ication'], [1, 'iation'], [1, 'ation'], [0, 'ition'], [0, 'tion'], [1, 'ateur'], [1, 'teur'], [0, 'eur'], [0, 'ier'], [0, 'er'], [0, 'ir'], [0, 'r'], [0, 'eassiez'], [0, 'issiez'], [0, 'assiez'], [0, 'ussiez'], [0, 'issez'], [0, 'assez'], [0, 'eriez'], [0, 'iriez'], [0, 'erez'], [0, 'irez'], [0, 'iez'], [0, 'ez'], [0, 'erai'], [0, 'irai'], [0, 'eai'], [0, 'ai'], [0, 'i'], [0, 'ira'], [0, 'era'], [0, 'ea'], [0, 'a'], [0, 'f', 'v'], [0, 'yeux', 'oeil'], [0, 'eux'], [0, 'aux', 'al'], [0, 'x'], [0, 'issante'], [1, 'atrice'], // Added","[0, 'eresse'], [0, 'eante'], [0, 'easse'], [0, 'eure'], [0, 'esse'], [0, 'asse'], [0, 'ance'], [0, 'ence'], [0, 'aise'], [0, 'euse'], [0, 'oise', 'o'], [0, 'isse'], [0, 'ante'], [0, 'ouse', 'ou'], [0, 'ière'], [0, 'ete'], [0, 'ète'], [0, 'iere'], [0, 'aire'], [1, 'ure'], [0, 'erie'], [0, 'étude'], [0, 'etude'], [0, 'itude'], [0, 'ade'], [0, 'isme'], [0, 'age'], [0, 'trice'], [0, 'cque', 'c'], [0, 'que', 'c'], [0, 'eille', 'eil'], [0, 'elle'], [0, 'able'], [0, 'iste'], [0, 'ulle', 'ul'], [0, 'gue', 'g'], [0, 'ette'], [0, 'nne', 'n'], [0, 'itée'], [0, 'ité'], [0, 'té'], [0, 'ée'], [0, 'é'], [0, 'usse'], [0, 'aise'], [0, 'ate'], [0, 'ite'], [0, 'ee'], [0, 'e'], [0, 'issements'], [0, 'issantes'], [1, 'ications'], [0, 'eassions'], [0, 'eresses'], [0, 'issions'], [0, 'assions'], [1, 'atrices'], // Added","[1, 'iations'], [0, 'issants'], [0, 'ussions'], [0, 'ements'], [0, 'eantes'], [0, 'issons'], [0, 'assons'], [0, 'easses'], [0, 'études'], [0, 'etudes'], [0, 'itudes'], [0, 'issais'], [0, 'trices'], [0, 'eilles', 'eil'], [0, 'irions'], [0, 'erions'], [1, 'ateurs'], [1, 'ations'], [0, 'usses'], [0, 'tions'], [0, 'ances'], [0, 'entes'], [1, 'teurs'], [0, 'eants'], [0, 'ables'], [0, 'irons'], [0, 'irais'], [0, 'ences'], [0, 'ients'], [0, 'ieres'], [0, 'eures'], [0, 'aires'], [0, 'erons'], [0, 'esses'], [0, 'euses'], [0, 'ulles', 'ul'], [0, 'cques', 'c'], [0, 'elles'], [0, 'ables'], [0, 'istes'], [0, 'aises'], [0, 'asses'], [0, 'isses'], [0, 'oises', 'o'], [0, 'tions'], [0, 'ouses', 'ou'], [0, 'ières'], [0, 'eries'], [0, 'antes'], [0, 'ismes'], [0, 'erais'], [0, 'eâtes'], [0, 'eâmes'], [0, 'itées'], [0, 'ettes'], [0, 'ages'], [0, 'eurs'], [0, 'ents'], [0, 'ètes'], [0, 'etes'], [0, 'ions'], [0, 'ités'], [0, 'ites'], [0, 'ates'], [0, 'âtes'], [0, 'îtes'], [0, 'eurs'], [0, 'iers'], [0, 'iras'], [0, 'eras'], [1, 'ures'], [0, 'ants'], [0, 'îmes'], [0, 'ûmes'], [0, 'âmes'], [0, 'ades'], [0, 'eais'], [0, 'eons'], [0, 'ques', 'c'], [0, 'gues', 'g'], [0, 'nnes', 'n'], [0, 'ttes'], [0, 'îtes'], [0, 'tés'], [0, 'ons'], [0, 'ais'], [0, 'ées'], [0, 'ees'], [0, 'ats'], [0, 'eas'], [0, 'ts'], [0, 'rs'], [0, 'as'], [0, 'es'], [0, 'fs', 'v'], [0, 'és'], [0, 'is'], [0, 's'], [0, 'eau'], [0, 'au']];","","var STEP2 = [[1, 'ation'], [1, 'ition'], [1, 'tion'], [1, 'ent'], [1, 'el'], [0, 'i']];","","var STEP3 = [[0, 'll', 'l'], [0, 'mm', 'm'], [0, 'nn', 'n'], [0, 'pp', 'p'], [0, 'tt', 't'], [0, 'ss', 's'], [0, 'y'], [0, 't'], [0, 'qu', 'c']];","","/**"," * Function used to apply a set of rules to the current stem."," *"," * @param  {string} stem - Target stem."," * @return {string}      - The resulting stem."," */","function applyRules(rules, stem) {","","  for (var i = 0, l = rules.length; i < l; i++) {","    var _rules$i = rules[i],","        min = _rules$i[0],","        pattern = _rules$i[1],","        _rules$i$ = _rules$i[2],","        replacement = _rules$i$ === undefined ? '' : _rules$i$;","","","    if (stem.slice(-pattern.length) === pattern) {","      var newStem = stem.slice(0, -pattern.length) + replacement,","          m = computeM(newStem);","","      if (m <= min) continue;","","      return newStem;","    }","  }","","  return stem;","}","","/**"," * Function stemming the given world using the Carry algorithm for the French"," * language."," *"," * @param  {string} word - The word to stem."," * @return {string}      - The resulting stem."," */","function carry(word) {","  var stem = word.toLowerCase();","","  stem = applyRules(STEP1, stem);","  stem = applyRules(STEP2, stem);","  stem = applyRules(STEP3, stem);","","  return stem;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"29":1,"33":1,"40":1,"43":0,"45":0,"51":1,"55":1,"57":1,"65":1,"67":0,"68":0,"75":0,"76":0,"79":0,"81":0,"85":0,"95":1,"96":0,"98":0,"99":0,"100":0,"102":0,"104":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/french/eda.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/french/eda.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"2":{"name":"eda","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":19}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"7":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":61}},"9":{"start":{"line":38,"column":0},"end":{"line":38,"column":252}},"10":{"start":{"line":47,"column":0},"end":{"line":85,"column":1}},"11":{"start":{"line":48,"column":2},"end":{"line":48,"column":78}},"12":{"start":{"line":51,"column":2},"end":{"line":56,"column":3}},"13":{"start":{"line":52,"column":4},"end":{"line":52,"column":57}},"14":{"start":{"line":52,"column":32},"end":{"line":52,"column":57}},"15":{"start":{"line":53,"column":4},"end":{"line":53,"column":57}},"16":{"start":{"line":53,"column":32},"end":{"line":53,"column":57}},"17":{"start":{"line":55,"column":4},"end":{"line":55,"column":16}},"18":{"start":{"line":59,"column":2},"end":{"line":66,"column":3}},"19":{"start":{"line":60,"column":4},"end":{"line":62,"column":43}},"20":{"start":{"line":65,"column":4},"end":{"line":65,"column":46}},"21":{"start":{"line":69,"column":2},"end":{"line":82,"column":3}},"22":{"start":{"line":70,"column":4},"end":{"line":70,"column":30}},"23":{"start":{"line":72,"column":4},"end":{"line":81,"column":5}},"24":{"start":{"line":73,"column":6},"end":{"line":73,"column":43}},"25":{"start":{"line":75,"column":6},"end":{"line":80,"column":7}},"26":{"start":{"line":76,"column":8},"end":{"line":76,"column":61}},"27":{"start":{"line":76,"column":36},"end":{"line":76,"column":61}},"28":{"start":{"line":77,"column":8},"end":{"line":77,"column":61}},"29":{"start":{"line":77,"column":36},"end":{"line":77,"column":61}},"30":{"start":{"line":79,"column":8},"end":{"line":79,"column":20}},"31":{"start":{"line":84,"column":2},"end":{"line":84,"column":14}},"32":{"start":{"line":86,"column":0},"end":{"line":86,"column":36}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"6":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"7":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"9":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":8}},{"start":{"line":77,"column":8},"end":{"line":77,"column":8}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = eda;","","var _deburr = require('lodash/deburr');","","var _deburr2 = _interopRequireDefault(_deburr);","","var _helpers = require('../../helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * Constants."," */","/**"," * Talisman stemmers/french/eda"," * ============================="," *"," * The EDA stemmer for the French language. Note that this stemmers orignally"," * targets words from the medical world."," *"," * [Reference]:"," * https://cedric.cnam.fr/fichiers/RC1314.pdf"," *"," * [Author]:"," * Didier Nakache"," *"," * [Article]:"," * Extraction automatique des diagnostics à partir des comptes rendus médicaux"," * textuels. Didier Nakache, 2007."," */","var PHONETIC_RULES = [[/(?:cqu|qu|ck?)/g, 'k'], [/y/g, 'i']];","","var SUFFIXES = ['s', 'e', 'x', 'ant', 'al', 'au', 'tion', 'sion', 'er', 'iv', 'if', 'abl', 'ibl', 'ment', 'tele', 'tel', 'tos', 'ik', 'ton', 'tos', 'ent', 'en', 'tik', 'toid', 'o', 'i', 's', 'dien', 'u', 'e', 'era', 'ank', 'enk', 'teur', 'trice', 'i'];","","/**"," * Function stemming the given world using the EDA algorithm for the French"," * language."," *"," * @param  {string} word - The word to stem."," * @return {string}      - The resulting stem."," */","function eda(word) {","  var stem = (0, _helpers.squeeze)((0, _deburr2.default)(word.toLowerCase()));","","  // Early termination","  if (stem.length <= 5) {","    if (stem.slice(-1) === 'e') stem = stem.slice(0, -1);","    if (stem.slice(-1) === 's') stem = stem.slice(0, -1);","","    return stem;","  }","","  // Applying phonetic rules","  for (var i = 0, l = PHONETIC_RULES.length; i < l; i++) {","    var _PHONETIC_RULES$i = PHONETIC_RULES[i],","        pattern = _PHONETIC_RULES$i[0],","        replacement = _PHONETIC_RULES$i[1];","","","    stem = stem.replace(pattern, replacement);","  }","","  // Removing suffixes","  for (var _i = 0, _l = SUFFIXES.length; _i < _l; _i++) {","    var suffix = SUFFIXES[_i];","","    if (stem.slice(-suffix.length) === suffix) {","      stem = stem.slice(0, -suffix.length);","","      if (stem.length <= 5) {","        if (stem.slice(-1) === 'e') stem = stem.slice(0, -1);","        if (stem.slice(-1) === 's') stem = stem.slice(0, -1);","","        return stem;","      }","    }","  }","","  return stem;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"10":1,"12":1,"14":1,"36":1,"38":1,"47":1,"48":0,"51":0,"52":0,"53":0,"55":0,"59":0,"60":0,"65":0,"69":0,"70":0,"72":0,"73":0,"75":0,"76":0,"77":0,"79":0,"84":0,"86":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/french/unine.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/french/unine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":1,"179":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0,0,0,0,0,0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"replaceAt","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":40}}},"2":{"name":"deleteAt","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":33}}},"3":{"name":"endsWith","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":42}}},"4":{"name":"minimal","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":23}}},"5":{"name":"normalize","line":102,"loc":{"start":{"line":102,"column":0},"end":{"line":102,"column":33}}},"6":{"name":"complex","line":157,"loc":{"start":{"line":157,"column":0},"end":{"line":157,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"4":{"start":{"line":37,"column":0},"end":{"line":39,"column":1}},"5":{"start":{"line":38,"column":2},"end":{"line":38,"column":77}},"6":{"start":{"line":48,"column":0},"end":{"line":50,"column":1}},"7":{"start":{"line":49,"column":2},"end":{"line":49,"column":60}},"8":{"start":{"line":60,"column":0},"end":{"line":63,"column":1}},"9":{"start":{"line":61,"column":2},"end":{"line":61,"column":43}},"10":{"start":{"line":61,"column":30},"end":{"line":61,"column":43}},"11":{"start":{"line":62,"column":2},"end":{"line":62,"column":66}},"12":{"start":{"line":72,"column":0},"end":{"line":90,"column":1}},"13":{"start":{"line":73,"column":2},"end":{"line":73,"column":35}},"14":{"start":{"line":73,"column":23},"end":{"line":73,"column":35}},"15":{"start":{"line":75,"column":2},"end":{"line":75,"column":27}},"16":{"start":{"line":77,"column":2},"end":{"line":81,"column":3}},"17":{"start":{"line":78,"column":4},"end":{"line":78,"column":93}},"18":{"start":{"line":78,"column":62},"end":{"line":78,"column":93}},"19":{"start":{"line":80,"column":4},"end":{"line":80,"column":29}},"20":{"start":{"line":83,"column":2},"end":{"line":83,"column":41}},"21":{"start":{"line":83,"column":32},"end":{"line":83,"column":41}},"22":{"start":{"line":84,"column":2},"end":{"line":84,"column":41}},"23":{"start":{"line":84,"column":32},"end":{"line":84,"column":41}},"24":{"start":{"line":85,"column":2},"end":{"line":85,"column":41}},"25":{"start":{"line":85,"column":32},"end":{"line":85,"column":41}},"26":{"start":{"line":86,"column":2},"end":{"line":86,"column":41}},"27":{"start":{"line":86,"column":32},"end":{"line":86,"column":41}},"28":{"start":{"line":87,"column":2},"end":{"line":87,"column":54}},"29":{"start":{"line":87,"column":45},"end":{"line":87,"column":54}},"30":{"start":{"line":89,"column":2},"end":{"line":89,"column":31}},"31":{"start":{"line":92,"column":0},"end":{"line":92,"column":26}},"32":{"start":{"line":102,"column":0},"end":{"line":155,"column":1}},"33":{"start":{"line":103,"column":2},"end":{"line":143,"column":3}},"34":{"start":{"line":104,"column":4},"end":{"line":131,"column":5}},"35":{"start":{"line":105,"column":6},"end":{"line":130,"column":7}},"36":{"start":{"line":109,"column":10},"end":{"line":109,"column":41}},"37":{"start":{"line":110,"column":10},"end":{"line":110,"column":16}},"38":{"start":{"line":112,"column":10},"end":{"line":112,"column":41}},"39":{"start":{"line":113,"column":10},"end":{"line":113,"column":16}},"40":{"start":{"line":117,"column":10},"end":{"line":117,"column":41}},"41":{"start":{"line":118,"column":10},"end":{"line":118,"column":16}},"42":{"start":{"line":121,"column":10},"end":{"line":121,"column":41}},"43":{"start":{"line":122,"column":10},"end":{"line":122,"column":16}},"44":{"start":{"line":124,"column":10},"end":{"line":124,"column":41}},"45":{"start":{"line":125,"column":10},"end":{"line":125,"column":16}},"46":{"start":{"line":127,"column":10},"end":{"line":127,"column":41}},"47":{"start":{"line":128,"column":10},"end":{"line":128,"column":16}},"48":{"start":{"line":133,"column":4},"end":{"line":133,"column":28}},"49":{"start":{"line":135,"column":4},"end":{"line":142,"column":5}},"50":{"start":{"line":136,"column":6},"end":{"line":141,"column":7}},"51":{"start":{"line":137,"column":8},"end":{"line":137,"column":36}},"52":{"start":{"line":138,"column":8},"end":{"line":138,"column":17}},"53":{"start":{"line":140,"column":8},"end":{"line":140,"column":29}},"54":{"start":{"line":145,"column":2},"end":{"line":145,"column":62}},"55":{"start":{"line":145,"column":50},"end":{"line":145,"column":62}},"56":{"start":{"line":147,"column":2},"end":{"line":152,"column":3}},"57":{"start":{"line":148,"column":4},"end":{"line":148,"column":43}},"58":{"start":{"line":148,"column":34},"end":{"line":148,"column":43}},"59":{"start":{"line":149,"column":4},"end":{"line":149,"column":43}},"60":{"start":{"line":149,"column":34},"end":{"line":149,"column":43}},"61":{"start":{"line":150,"column":4},"end":{"line":150,"column":43}},"62":{"start":{"line":150,"column":34},"end":{"line":150,"column":43}},"63":{"start":{"line":151,"column":4},"end":{"line":151,"column":92}},"64":{"start":{"line":151,"column":83},"end":{"line":151,"column":92}},"65":{"start":{"line":154,"column":2},"end":{"line":154,"column":31}},"66":{"start":{"line":157,"column":0},"end":{"line":309,"column":1}},"67":{"start":{"line":158,"column":2},"end":{"line":159,"column":18}},"68":{"start":{"line":161,"column":2},"end":{"line":166,"column":3}},"69":{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},"70":{"start":{"line":163,"column":6},"end":{"line":163,"column":46}},"71":{"start":{"line":165,"column":4},"end":{"line":165,"column":13}},"72":{"start":{"line":168,"column":2},"end":{"line":168,"column":55}},"73":{"start":{"line":168,"column":46},"end":{"line":168,"column":55}},"74":{"start":{"line":170,"column":2},"end":{"line":170,"column":55}},"75":{"start":{"line":170,"column":46},"end":{"line":170,"column":55}},"76":{"start":{"line":172,"column":2},"end":{"line":176,"column":3}},"77":{"start":{"line":173,"column":4},"end":{"line":173,"column":16}},"78":{"start":{"line":174,"column":4},"end":{"line":174,"column":44}},"79":{"start":{"line":175,"column":4},"end":{"line":175,"column":35}},"80":{"start":{"line":178,"column":2},"end":{"line":182,"column":3}},"81":{"start":{"line":179,"column":4},"end":{"line":179,"column":16}},"82":{"start":{"line":180,"column":4},"end":{"line":180,"column":44}},"83":{"start":{"line":181,"column":4},"end":{"line":181,"column":35}},"84":{"start":{"line":184,"column":2},"end":{"line":193,"column":3}},"85":{"start":{"line":185,"column":4},"end":{"line":185,"column":16}},"86":{"start":{"line":187,"column":4},"end":{"line":190,"column":5}},"87":{"start":{"line":188,"column":6},"end":{"line":188,"column":15}},"88":{"start":{"line":189,"column":6},"end":{"line":189,"column":46}},"89":{"start":{"line":192,"column":4},"end":{"line":192,"column":35}},"90":{"start":{"line":195,"column":2},"end":{"line":200,"column":3}},"91":{"start":{"line":196,"column":4},"end":{"line":196,"column":16}},"92":{"start":{"line":197,"column":4},"end":{"line":197,"column":44}},"93":{"start":{"line":198,"column":4},"end":{"line":198,"column":44}},"94":{"start":{"line":199,"column":4},"end":{"line":199,"column":35}},"95":{"start":{"line":202,"column":2},"end":{"line":207,"column":3}},"96":{"start":{"line":203,"column":4},"end":{"line":203,"column":16}},"97":{"start":{"line":204,"column":4},"end":{"line":204,"column":44}},"98":{"start":{"line":205,"column":4},"end":{"line":205,"column":44}},"99":{"start":{"line":206,"column":4},"end":{"line":206,"column":35}},"100":{"start":{"line":209,"column":2},"end":{"line":215,"column":3}},"101":{"start":{"line":210,"column":4},"end":{"line":210,"column":16}},"102":{"start":{"line":211,"column":4},"end":{"line":211,"column":44}},"103":{"start":{"line":212,"column":4},"end":{"line":212,"column":44}},"104":{"start":{"line":213,"column":4},"end":{"line":213,"column":44}},"105":{"start":{"line":214,"column":4},"end":{"line":214,"column":35}},"106":{"start":{"line":217,"column":2},"end":{"line":224,"column":3}},"107":{"start":{"line":218,"column":4},"end":{"line":218,"column":16}},"108":{"start":{"line":219,"column":4},"end":{"line":219,"column":44}},"109":{"start":{"line":220,"column":4},"end":{"line":220,"column":44}},"110":{"start":{"line":221,"column":4},"end":{"line":221,"column":44}},"111":{"start":{"line":222,"column":4},"end":{"line":222,"column":44}},"112":{"start":{"line":223,"column":4},"end":{"line":223,"column":35}},"113":{"start":{"line":226,"column":2},"end":{"line":231,"column":3}},"114":{"start":{"line":227,"column":4},"end":{"line":227,"column":16}},"115":{"start":{"line":228,"column":4},"end":{"line":228,"column":44}},"116":{"start":{"line":229,"column":4},"end":{"line":229,"column":44}},"117":{"start":{"line":230,"column":4},"end":{"line":230,"column":35}},"118":{"start":{"line":233,"column":2},"end":{"line":238,"column":3}},"119":{"start":{"line":234,"column":4},"end":{"line":234,"column":16}},"120":{"start":{"line":235,"column":4},"end":{"line":235,"column":44}},"121":{"start":{"line":236,"column":4},"end":{"line":236,"column":44}},"122":{"start":{"line":237,"column":4},"end":{"line":237,"column":35}},"123":{"start":{"line":240,"column":2},"end":{"line":245,"column":3}},"124":{"start":{"line":241,"column":4},"end":{"line":241,"column":13}},"125":{"start":{"line":242,"column":4},"end":{"line":242,"column":44}},"126":{"start":{"line":243,"column":4},"end":{"line":243,"column":44}},"127":{"start":{"line":244,"column":4},"end":{"line":244,"column":44}},"128":{"start":{"line":247,"column":2},"end":{"line":247,"column":87}},"129":{"start":{"line":247,"column":52},"end":{"line":247,"column":87}},"130":{"start":{"line":249,"column":2},"end":{"line":253,"column":3}},"131":{"start":{"line":250,"column":4},"end":{"line":250,"column":16}},"132":{"start":{"line":251,"column":4},"end":{"line":251,"column":44}},"133":{"start":{"line":252,"column":4},"end":{"line":252,"column":35}},"134":{"start":{"line":255,"column":2},"end":{"line":259,"column":3}},"135":{"start":{"line":256,"column":4},"end":{"line":256,"column":13}},"136":{"start":{"line":257,"column":4},"end":{"line":257,"column":44}},"137":{"start":{"line":258,"column":4},"end":{"line":258,"column":35}},"138":{"start":{"line":261,"column":2},"end":{"line":261,"column":87}},"139":{"start":{"line":261,"column":52},"end":{"line":261,"column":87}},"140":{"start":{"line":263,"column":2},"end":{"line":267,"column":3}},"141":{"start":{"line":264,"column":4},"end":{"line":264,"column":13}},"142":{"start":{"line":265,"column":4},"end":{"line":265,"column":44}},"143":{"start":{"line":266,"column":4},"end":{"line":266,"column":35}},"144":{"start":{"line":269,"column":2},"end":{"line":273,"column":3}},"145":{"start":{"line":270,"column":4},"end":{"line":270,"column":13}},"146":{"start":{"line":271,"column":4},"end":{"line":271,"column":44}},"147":{"start":{"line":272,"column":4},"end":{"line":272,"column":35}},"148":{"start":{"line":275,"column":2},"end":{"line":279,"column":3}},"149":{"start":{"line":276,"column":4},"end":{"line":276,"column":16}},"150":{"start":{"line":277,"column":4},"end":{"line":277,"column":44}},"151":{"start":{"line":278,"column":4},"end":{"line":278,"column":35}},"152":{"start":{"line":281,"column":2},"end":{"line":281,"column":89}},"153":{"start":{"line":281,"column":54},"end":{"line":281,"column":89}},"154":{"start":{"line":283,"column":2},"end":{"line":283,"column":87}},"155":{"start":{"line":283,"column":52},"end":{"line":283,"column":87}},"156":{"start":{"line":285,"column":2},"end":{"line":288,"column":3}},"157":{"start":{"line":286,"column":4},"end":{"line":286,"column":13}},"158":{"start":{"line":287,"column":4},"end":{"line":287,"column":44}},"159":{"start":{"line":290,"column":2},"end":{"line":290,"column":64}},"160":{"start":{"line":290,"column":52},"end":{"line":290,"column":64}},"161":{"start":{"line":292,"column":2},"end":{"line":292,"column":87}},"162":{"start":{"line":292,"column":52},"end":{"line":292,"column":87}},"163":{"start":{"line":294,"column":2},"end":{"line":294,"column":88}},"164":{"start":{"line":294,"column":53},"end":{"line":294,"column":88}},"165":{"start":{"line":296,"column":2},"end":{"line":300,"column":3}},"166":{"start":{"line":297,"column":4},"end":{"line":297,"column":16}},"167":{"start":{"line":298,"column":4},"end":{"line":298,"column":93}},"168":{"start":{"line":298,"column":53},"end":{"line":298,"column":93}},"169":{"start":{"line":299,"column":4},"end":{"line":299,"column":35}},"170":{"start":{"line":302,"column":2},"end":{"line":302,"column":90}},"171":{"start":{"line":302,"column":55},"end":{"line":302,"column":90}},"172":{"start":{"line":304,"column":2},"end":{"line":304,"column":88}},"173":{"start":{"line":304,"column":53},"end":{"line":304,"column":88}},"174":{"start":{"line":306,"column":2},"end":{"line":306,"column":88}},"175":{"start":{"line":306,"column":53},"end":{"line":306,"column":88}},"176":{"start":{"line":308,"column":2},"end":{"line":308,"column":33}},"177":{"start":{"line":310,"column":0},"end":{"line":310,"column":36}},"178":{"start":{"line":311,"column":0},"end":{"line":311,"column":45}},"179":{"start":{"line":312,"column":0},"end":{"line":312,"column":45}}},"branchMap":{"1":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"2":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"3":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"5":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":32}},{"start":{"line":78,"column":36},"end":{"line":78,"column":60}}]},"6":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"7":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"8":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"10":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"11":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"12":{"line":105,"type":"switch","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":17}},{"start":{"line":107,"column":8},"end":{"line":107,"column":17}},{"start":{"line":108,"column":8},"end":{"line":110,"column":16}},{"start":{"line":111,"column":8},"end":{"line":113,"column":16}},{"start":{"line":114,"column":8},"end":{"line":114,"column":17}},{"start":{"line":115,"column":8},"end":{"line":115,"column":17}},{"start":{"line":116,"column":8},"end":{"line":118,"column":16}},{"start":{"line":119,"column":8},"end":{"line":119,"column":17}},{"start":{"line":120,"column":8},"end":{"line":122,"column":16}},{"start":{"line":123,"column":8},"end":{"line":125,"column":16}},{"start":{"line":126,"column":8},"end":{"line":128,"column":16}},{"start":{"line":129,"column":8},"end":{"line":129,"column":16}}]},"13":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":6}},{"start":{"line":136,"column":6},"end":{"line":136,"column":6}}]},"14":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":10},"end":{"line":136,"column":32}},{"start":{"line":136,"column":36},"end":{"line":136,"column":61}}]},"15":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"16":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":16}},{"start":{"line":145,"column":20},"end":{"line":145,"column":48}}]},"17":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"18":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"19":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"20":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"21":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"22":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":45}},{"start":{"line":151,"column":49},"end":{"line":151,"column":81}}]},"23":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"24":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":16}},{"start":{"line":161,"column":20},"end":{"line":161,"column":44}}]},"25":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"26":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":32}},{"start":{"line":162,"column":36},"end":{"line":162,"column":60}},{"start":{"line":162,"column":64},"end":{"line":162,"column":88}}]},"27":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"28":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":6},"end":{"line":168,"column":16}},{"start":{"line":168,"column":20},"end":{"line":168,"column":44}}]},"29":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":2}},{"start":{"line":170,"column":2},"end":{"line":170,"column":2}}]},"30":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":6},"end":{"line":170,"column":16}},{"start":{"line":170,"column":20},"end":{"line":170,"column":44}}]},"31":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"32":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":16}},{"start":{"line":172,"column":20},"end":{"line":172,"column":54}}]},"33":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"34":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":6},"end":{"line":178,"column":16}},{"start":{"line":178,"column":20},"end":{"line":178,"column":52}}]},"35":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":2}},{"start":{"line":184,"column":2},"end":{"line":184,"column":2}}]},"36":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":16}},{"start":{"line":184,"column":20},"end":{"line":184,"column":51}}]},"37":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"38":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":18}},{"start":{"line":187,"column":22},"end":{"line":187,"column":51}}]},"39":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"40":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":17}},{"start":{"line":195,"column":21},"end":{"line":195,"column":56}}]},"41":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":2},"end":{"line":202,"column":2}},{"start":{"line":202,"column":2},"end":{"line":202,"column":2}}]},"42":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":17}},{"start":{"line":202,"column":21},"end":{"line":202,"column":55}}]},"43":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"44":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":6},"end":{"line":209,"column":16}},{"start":{"line":209,"column":20},"end":{"line":209,"column":53}}]},"45":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":2},"end":{"line":217,"column":2}},{"start":{"line":217,"column":2},"end":{"line":217,"column":2}}]},"46":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":6},"end":{"line":217,"column":16}},{"start":{"line":217,"column":20},"end":{"line":217,"column":52}}]},"47":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"48":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":6},"end":{"line":226,"column":16}},{"start":{"line":226,"column":20},"end":{"line":226,"column":52}}]},"49":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"50":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":6},"end":{"line":233,"column":16}},{"start":{"line":233,"column":20},"end":{"line":233,"column":51}}]},"51":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":240,"column":2}},{"start":{"line":240,"column":2},"end":{"line":240,"column":2}}]},"52":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":6},"end":{"line":240,"column":16}},{"start":{"line":240,"column":20},"end":{"line":240,"column":51}}]},"53":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]},"54":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":6},"end":{"line":247,"column":16}},{"start":{"line":247,"column":20},"end":{"line":247,"column":50}}]},"55":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"56":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":6},"end":{"line":249,"column":16}},{"start":{"line":249,"column":20},"end":{"line":249,"column":51}}]},"57":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"58":{"line":255,"type":"binary-expr","locations":[{"start":{"line":255,"column":6},"end":{"line":255,"column":16}},{"start":{"line":255,"column":20},"end":{"line":255,"column":50}}]},"59":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":261,"column":2}},{"start":{"line":261,"column":2},"end":{"line":261,"column":2}}]},"60":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":6},"end":{"line":261,"column":16}},{"start":{"line":261,"column":20},"end":{"line":261,"column":50}}]},"61":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":2},"end":{"line":263,"column":2}},{"start":{"line":263,"column":2},"end":{"line":263,"column":2}}]},"62":{"line":263,"type":"binary-expr","locations":[{"start":{"line":263,"column":6},"end":{"line":263,"column":16}},{"start":{"line":263,"column":20},"end":{"line":263,"column":49}}]},"63":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":2},"end":{"line":269,"column":2}},{"start":{"line":269,"column":2},"end":{"line":269,"column":2}}]},"64":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":6},"end":{"line":269,"column":16}},{"start":{"line":269,"column":20},"end":{"line":269,"column":49}}]},"65":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"66":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":6},"end":{"line":275,"column":16}},{"start":{"line":275,"column":21},"end":{"line":275,"column":52}},{"start":{"line":275,"column":56},"end":{"line":275,"column":87}}]},"67":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":2},"end":{"line":281,"column":2}},{"start":{"line":281,"column":2},"end":{"line":281,"column":2}}]},"68":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":6},"end":{"line":281,"column":16}},{"start":{"line":281,"column":20},"end":{"line":281,"column":52}}]},"69":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"70":{"line":283,"type":"binary-expr","locations":[{"start":{"line":283,"column":6},"end":{"line":283,"column":16}},{"start":{"line":283,"column":20},"end":{"line":283,"column":50}}]},"71":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":2},"end":{"line":285,"column":2}},{"start":{"line":285,"column":2},"end":{"line":285,"column":2}}]},"72":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":6},"end":{"line":285,"column":16}},{"start":{"line":285,"column":20},"end":{"line":285,"column":49}}]},"73":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":2},"end":{"line":290,"column":2}},{"start":{"line":290,"column":2},"end":{"line":290,"column":2}}]},"74":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":6},"end":{"line":290,"column":16}},{"start":{"line":290,"column":20},"end":{"line":290,"column":50}}]},"75":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":2},"end":{"line":292,"column":2}},{"start":{"line":292,"column":2},"end":{"line":292,"column":2}}]},"76":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":6},"end":{"line":292,"column":16}},{"start":{"line":292,"column":20},"end":{"line":292,"column":50}}]},"77":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":2},"end":{"line":294,"column":2}},{"start":{"line":294,"column":2},"end":{"line":294,"column":2}}]},"78":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":6},"end":{"line":294,"column":16}},{"start":{"line":294,"column":20},"end":{"line":294,"column":51}}]},"79":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":2},"end":{"line":296,"column":2}},{"start":{"line":296,"column":2},"end":{"line":296,"column":2}}]},"80":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":6},"end":{"line":296,"column":16}},{"start":{"line":296,"column":20},"end":{"line":296,"column":53}}]},"81":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":4},"end":{"line":298,"column":4}},{"start":{"line":298,"column":4},"end":{"line":298,"column":4}}]},"82":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":8},"end":{"line":298,"column":18}},{"start":{"line":298,"column":22},"end":{"line":298,"column":51}}]},"83":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"84":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":6},"end":{"line":302,"column":16}},{"start":{"line":302,"column":20},"end":{"line":302,"column":53}}]},"85":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":2},"end":{"line":304,"column":2}},{"start":{"line":304,"column":2},"end":{"line":304,"column":2}}]},"86":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":6},"end":{"line":304,"column":16}},{"start":{"line":304,"column":20},"end":{"line":304,"column":51}}]},"87":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":2},"end":{"line":306,"column":2}},{"start":{"line":306,"column":2},"end":{"line":306,"column":2}}]},"88":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":6},"end":{"line":306,"column":16}},{"start":{"line":306,"column":20},"end":{"line":306,"column":51}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.minimal = minimal;","exports.complex = complex;","/**"," * Talisman stemmers/french/unine"," * ==============================="," *"," * The UniNE (University of Neuchâtel) stemmers for the French language."," *"," * [Reference]:"," * http://members.unine.ch/jacques.savoy/clef/"," *"," * [Articles]:"," * Savoy, J. (1993). Stemming of French words based on grammatical category."," * Journal of the American Society for Information Science, 44(1), 1-9."," *"," * Savoy, J. (1999). A stemming procedure and stopword list for general French"," * corpora. Journal of the American Society for Information Science, 50(10),"," * 944-952."," *"," * [Note]:"," * It should be possible to fix some bug relevant to SOLR's implementation."," */","","/**"," * Function replacing the character at the given index in the target string."," *"," * @param  {string} string - The target string."," * @param  {number} index  - Index of the character to substitute."," * @param  {string} char   - The replacing character."," * @return {string}        - The resulting string."," */","function replaceAt(string, index, char) {","  return string.substr(0, index) + char + string.substr(index + char.length);","}","","/**"," * Function deleting the character at the given index in the target string."," *"," * @param  {string} string - The target string."," * @param  {number} index  - Index of the character to substitute."," * @return {string}        - The resulting string."," */","function deleteAt(string, index) {","  return string.substr(0, index) + string.substr(index + 1);","}","","/**"," * Function checking whether the string has the given suffix."," *"," * @param  {string} string - The target string."," * @param  {number} length - Length offset."," * @param  {string} suffix - The considered suffix."," * @return {boolean}"," */","function endsWith(string, length, suffix) {","  if (suffix.length > length) return false;","  return string.slice(0, length).slice(-suffix.length) === suffix;","}","","/**"," * Function stemming the given world using the minimal UniNE algorithm for the"," * French language."," *"," * @param  {string} word - The word to stem."," * @return {string}      - The resulting stem."," */","function minimal(word) {","  if (word.length < 6) return word;","","  var length = word.length;","","  if (word[length - 1] === 'x') {","    if (word[length - 3] === 'a' && word[length - 2] === 'u') return word.slice(0, -2) + 'l';","","    return word.slice(0, -1);","  }","","  if (word[length - 1] === 's') length--;","  if (word[length - 1] === 'r') length--;","  if (word[length - 1] === 'e') length--;","  if (word[length - 1] === 'é') length--;","  if (word[length - 1] === word[length - 2]) length--;","","  return word.slice(0, length);","}","","exports.default = minimal;","","/**"," * Function stemming the given world using the complex UniNE algorithm for the"," * French language."," *"," * @param  {string} word - The word to stem."," * @return {string}      - The resulting stem."," */","","function normalize(stem, length) {","  if (length > 4) {","    for (var i = 0; i < length; i++) {","      switch (stem[i]) {","        case 'à':","        case 'á':","        case 'â':","          stem = replaceAt(stem, i, 'a');","          break;","        case 'ô':","          stem = replaceAt(stem, i, 'o');","          break;","        case 'è':","        case 'é':","        case 'ê':","          stem = replaceAt(stem, i, 'e');","          break;","        case 'ù':","        case 'û':","          stem = replaceAt(stem, i, 'u');","          break;","        case 'î':","          stem = replaceAt(stem, i, 'i');","          break;","        case 'ç':","          stem = replaceAt(stem, i, 'c');","          break;","        default:","      }","    }","","    var character = stem[0];","","    for (var _i = 1; _i < length; _i++) {","      if (stem[_i] === character && /[^\\W\\d]/.test(character)) {","        stem = deleteAt(stem, _i--);","        length--;","      } else {","        character = stem[_i];","      }","    }","  }","","  if (length > 4 && endsWith(stem, length, 'ie')) length -= 2;","","  if (length > 4) {","    if (stem[length - 1] === 'r') length--;","    if (stem[length - 1] === 'e') length--;","    if (stem[length - 1] === 'e') length--;","    if (stem[length - 1] === stem[length - 2] && /[^\\W\\d]/.test(stem[length - 1])) length--;","  }","","  return stem.slice(0, length);","}","","function complex(word) {","  var length = word.length,","      stem = word;","","  if (length > 5 && stem[length - 1] === 'x') {","    if (stem[length - 3] === 'a' && stem[length - 2] === 'u' && stem[length - 4] !== 'e') {","      stem = replaceAt(stem, length - 2, 'l');","    }","    length--;","  }","","  if (length > 3 && stem[length - 1] === 'x') length--;","","  if (length > 3 && stem[length - 1] === 's') length--;","","  if (length > 9 && endsWith(stem, length, 'issement')) {","    length -= 6;","    stem = replaceAt(stem, length - 1, 'r');","    return normalize(stem, length);","  }","","  if (length > 8 && endsWith(stem, length, 'issant')) {","    length -= 4;","    stem = replaceAt(stem, length - 1, 'r');","    return normalize(stem, length);","  }","","  if (length > 6 && endsWith(stem, length, 'ement')) {","    length -= 4;","","    if (length > 3 && endsWith(stem, length, 'ive')) {","      length--;","      stem = replaceAt(stem, length - 1, 'f');","    }","","    return normalize(stem, length);","  }","","  if (length > 11 && endsWith(stem, length, 'ficatrice')) {","    length -= 5;","    stem = replaceAt(stem, length - 2, 'e');","    stem = replaceAt(stem, length - 1, 'r');","    return normalize(stem, length);","  }","","  if (length > 10 && endsWith(stem, length, 'ficateur')) {","    length -= 4;","    stem = replaceAt(stem, length - 2, 'e');","    stem = replaceAt(stem, length - 1, 'r');","    return normalize(stem, length);","  }","","  if (length > 9 && endsWith(stem, length, 'catrice')) {","    length -= 3;","    stem = replaceAt(stem, length - 4, 'q');","    stem = replaceAt(stem, length - 3, 'u');","    stem = replaceAt(stem, length - 2, 'e');","    return normalize(stem, length);","  }","","  if (length > 8 && endsWith(stem, length, 'cateur')) {","    length -= 2;","    stem = replaceAt(stem, length - 4, 'q');","    stem = replaceAt(stem, length - 3, 'u');","    stem = replaceAt(stem, length - 2, 'e');","    stem = replaceAt(stem, length - 1, 'r');","    return normalize(stem, length);","  }","","  if (length > 8 && endsWith(stem, length, 'atrice')) {","    length -= 4;","    stem = replaceAt(stem, length - 2, 'e');","    stem = replaceAt(stem, length - 1, 'r');","    return normalize(stem, length);","  }","","  if (length > 7 && endsWith(stem, length, 'ateur')) {","    length -= 3;","    stem = replaceAt(stem, length - 2, 'e');","    stem = replaceAt(stem, length - 1, 'r');","    return normalize(stem, length);","  }","","  if (length > 6 && endsWith(stem, length, 'trice')) {","    length--;","    stem = replaceAt(stem, length - 3, 'e');","    stem = replaceAt(stem, length - 2, 'u');","    stem = replaceAt(stem, length - 1, 'r');","  }","","  if (length > 5 && endsWith(stem, length, 'ième')) return normalize(stem, length - 4);","","  if (length > 7 && endsWith(stem, length, 'teuse')) {","    length -= 2;","    stem = replaceAt(stem, length - 1, 'r');","    return normalize(stem, length);","  }","","  if (length > 6 && endsWith(stem, length, 'teur')) {","    length--;","    stem = replaceAt(stem, length - 1, 'r');","    return normalize(stem, length);","  }","","  if (length > 5 && endsWith(stem, length, 'euse')) return normalize(stem, length - 2);","","  if (length > 8 && endsWith(stem, length, 'ère')) {","    length--;","    stem = replaceAt(stem, length - 2, 'e');","    return normalize(stem, length);","  }","","  if (length > 7 && endsWith(stem, length, 'ive')) {","    length--;","    stem = replaceAt(stem, length - 1, 'f');","    return normalize(stem, length);","  }","","  if (length > 4 && (endsWith(stem, length, 'folle') || endsWith(stem, length, 'molle'))) {","    length -= 2;","    stem = replaceAt(stem, length - 1, 'u');","    return normalize(stem, length);","  }","","  if (length > 9 && endsWith(stem, length, 'nnelle')) return normalize(stem, length - 5);","","  if (length > 9 && endsWith(stem, length, 'nnel')) return normalize(stem, length - 3);","","  if (length > 4 && endsWith(stem, length, 'ète')) {","    length--;","    stem = replaceAt(stem, length - 2, 'e');","  }","","  if (length > 8 && endsWith(stem, length, 'ique')) length -= 4;","","  if (length > 8 && endsWith(stem, length, 'esse')) return normalize(stem, length - 3);","","  if (length > 7 && endsWith(stem, length, 'inage')) return normalize(stem, length - 3);","","  if (length > 9 && endsWith(stem, length, 'isation')) {","    length -= 7;","    if (length > 5 && endsWith(stem, length, 'ual')) stem = replaceAt(stem, length - 2, 'e');","    return normalize(stem, length);","  }","","  if (length > 9 && endsWith(stem, length, 'isateur')) return normalize(stem, length - 7);","","  if (length > 8 && endsWith(stem, length, 'ation')) return normalize(stem, length - 5);","","  if (length > 8 && endsWith(stem, length, 'ition')) return normalize(stem, length - 5);","","  return normalize(stem, length);","}","module.exports = exports['default'];","exports['default'].minimal = exports.minimal;","exports['default'].complex = exports.complex;"],"l":{"3":1,"6":1,"7":1,"37":1,"38":0,"48":1,"49":0,"60":1,"61":0,"62":0,"72":1,"73":0,"75":0,"77":0,"78":0,"80":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"92":1,"102":1,"103":0,"104":0,"105":0,"109":0,"110":0,"112":0,"113":0,"117":0,"118":0,"121":0,"122":0,"124":0,"125":0,"127":0,"128":0,"133":0,"135":0,"136":0,"137":0,"138":0,"140":0,"145":0,"147":0,"148":0,"149":0,"150":0,"151":0,"154":0,"157":1,"158":0,"161":0,"162":0,"163":0,"165":0,"168":0,"170":0,"172":0,"173":0,"174":0,"175":0,"178":0,"179":0,"180":0,"181":0,"184":0,"185":0,"187":0,"188":0,"189":0,"192":0,"195":0,"196":0,"197":0,"198":0,"199":0,"202":0,"203":0,"204":0,"205":0,"206":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"226":0,"227":0,"228":0,"229":0,"230":0,"233":0,"234":0,"235":0,"236":0,"237":0,"240":0,"241":0,"242":0,"243":0,"244":0,"247":0,"249":0,"250":0,"251":0,"252":0,"255":0,"256":0,"257":0,"258":0,"261":0,"263":0,"264":0,"265":0,"266":0,"269":0,"270":0,"271":0,"272":0,"275":0,"276":0,"277":0,"278":0,"281":0,"283":0,"285":0,"286":0,"287":0,"290":0,"292":0,"294":0,"296":0,"297":0,"298":0,"299":0,"302":0,"304":0,"306":0,"308":0,"310":1,"311":1,"312":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/german/caumanns.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/german/caumanns.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0,0],"5":[0,0],"6":[0,0,0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"caumanns","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":24}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":26,"column":0},"end":{"line":71,"column":1}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":23}},"5":{"start":{"line":27,"column":13},"end":{"line":27,"column":23}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":52}},"7":{"start":{"line":33,"column":2},"end":{"line":33,"column":105}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":21}},"9":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":52}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":135}},"12":{"start":{"line":43,"column":2},"end":{"line":54,"column":3}},"13":{"start":{"line":44,"column":4},"end":{"line":45,"column":43}},"14":{"start":{"line":47,"column":4},"end":{"line":53,"column":5}},"15":{"start":{"line":48,"column":6},"end":{"line":48,"column":31}},"16":{"start":{"line":49,"column":11},"end":{"line":53,"column":5}},"17":{"start":{"line":50,"column":6},"end":{"line":50,"column":31}},"18":{"start":{"line":52,"column":6},"end":{"line":52,"column":12}},"19":{"start":{"line":57,"column":2},"end":{"line":57,"column":78}},"20":{"start":{"line":57,"column":53},"end":{"line":57,"column":78}},"21":{"start":{"line":59,"column":2},"end":{"line":59,"column":68}},"22":{"start":{"line":59,"column":37},"end":{"line":59,"column":68}},"23":{"start":{"line":62,"column":2},"end":{"line":62,"column":136}},"24":{"start":{"line":65,"column":2},"end":{"line":65,"column":26}},"25":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"26":{"start":{"line":67,"column":4},"end":{"line":67,"column":65}},"27":{"start":{"line":68,"column":3},"end":{"line":68,"column":73}},"28":{"start":{"line":68,"column":29},"end":{"line":68,"column":73}},"29":{"start":{"line":70,"column":2},"end":{"line":70,"column":19}},"30":{"start":{"line":72,"column":0},"end":{"line":72,"column":36}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":38},"end":{"line":38,"column":45}},{"start":{"line":38,"column":48},"end":{"line":38,"column":51}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"4":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":23}},{"start":{"line":47,"column":28},"end":{"line":47,"column":51}},{"start":{"line":47,"column":55},"end":{"line":47,"column":78}},{"start":{"line":47,"column":83},"end":{"line":47,"column":98}},{"start":{"line":47,"column":102},"end":{"line":47,"column":125}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":11},"end":{"line":49,"column":11}},{"start":{"line":49,"column":11},"end":{"line":49,"column":11}}]},"6":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":15},"end":{"line":49,"column":33}},{"start":{"line":49,"column":37},"end":{"line":49,"column":55}},{"start":{"line":49,"column":59},"end":{"line":49,"column":77}},{"start":{"line":49,"column":81},"end":{"line":49,"column":94}},{"start":{"line":49,"column":99},"end":{"line":49,"column":117}},{"start":{"line":49,"column":121},"end":{"line":49,"column":139}}]},"7":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"8":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":21}},{"start":{"line":57,"column":25},"end":{"line":57,"column":51}}]},"9":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"10":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":36},"end":{"line":67,"column":53}},{"start":{"line":67,"column":56},"end":{"line":67,"column":64}}]},"11":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":3},"end":{"line":68,"column":3}},{"start":{"line":68,"column":3},"end":{"line":68,"column":3}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = caumanns;","/**"," * Talisman stemmers/german/caumanns"," * =================================="," *"," * The Caumanns stemmer for the German language."," *"," * [Reference]:"," * http://edocs.fu-berlin.de/docs/servlets/MCRFileNodeServlet/FUDOCS_derivate_000000000350/tr-b-99-16.pdf"," *"," * [Article]:"," * Jörg Caumanns (1999) A Fast and Simple Stemming Algorithm for German Words."," */","","/**"," * Function stemming the given world using the Caumanns algorithm."," *"," * @param  {string} word - The word to stem."," * @return {string}      - The resulting stem."," */","function caumanns(word) {","  if (!word) return '';","","  // Note: this test would break on non-alpha characters","  var upperInitial = word[0] === word.toUpperCase();","","  // Basic substitutions","  word = word.toLowerCase().replace(/ä/g, 'a').replace(/ö/g, 'o').replace(/ü/g, 'u').replace(/ß/g, 'ss');","","  // Special squeezing","  var stem = word[0];","  for (var i = 1, l = word.length; i < l; i++) {","    stem += word[i] !== word[i - 1] ? word[i] : '*';","  } // Replacing some combinations of letters","  stem = stem.replace(/sch/g, '$').replace(/ch/g, '§').replace(/ei/g, '%').replace(/ie/g, '&').replace(/ig/g, '#').replace(/st/g, '!');","","  // Recursive context-free stripping","  while (stem.length > 3) {","    var lastTwoLetters = stem.slice(-2),","        lastLetter = stem[stem.length - 1];","","    if (stem.length > 4 && (lastTwoLetters === 'em' || lastTwoLetters === 'er') || stem.length > 5 && lastTwoLetters === 'nd') {","      stem = stem.slice(0, -2);","    } else if (lastLetter === 'e' || lastLetter === 's' || lastLetter === 'n' || !upperInitial && (lastLetter === 't' || lastLetter === '!')) {","      stem = stem.slice(0, -1);","    } else {","      break;","    }","  }","","  // Optimizations","  if (stem.length > 5 && stem.slice(-5) === 'erin*') stem = stem.slice(0, -1);","","  if (stem[stem.length - 1] === 'z') stem = stem.slice(0, -1) + 'x';","","  // Reverse substitutions","  stem = stem.replace(/\\$/g, 'sch').replace(/§/g, 'ch').replace(/%/g, 'ei').replace(/&/g, 'ie').replace(/#/g, 'ig').replace(/!/g, 'st');","","  // Expand doubled","  var finalStem = stem[0];","  for (var _i = 1, _l = stem.length; _i < _l; _i++) {","    finalStem += stem[_i] === '*' ? finalStem[_i - 1] : stem[_i];","  }if (finalStem.length < 4) finalStem = finalStem.replace('gege', 'ge');","","  return finalStem;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"26":1,"27":0,"30":0,"33":0,"36":0,"37":0,"38":0,"40":0,"43":0,"44":0,"47":0,"48":0,"49":0,"50":0,"52":0,"57":0,"59":0,"62":0,"65":0,"66":0,"67":0,"68":0,"70":0,"72":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/latin/schinke.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/stemmers/latin/schinke.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":0,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":34}}},"2":{"name":"normalizeLetters","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":54,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":81}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":46}},"5":{"start":{"line":16,"column":2},"end":{"line":19,"column":4}},"6":{"start":{"line":16,"column":58},"end":{"line":19,"column":4}},"7":{"start":{"line":21,"column":2},"end":{"line":22,"column":22}},"8":{"start":{"line":25,"column":2},"end":{"line":32,"column":3}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":59}},"10":{"start":{"line":28,"column":4},"end":{"line":31,"column":5}},"11":{"start":{"line":29,"column":6},"end":{"line":29,"column":25}},"12":{"start":{"line":30,"column":6},"end":{"line":30,"column":12}},"13":{"start":{"line":35,"column":2},"end":{"line":47,"column":3}},"14":{"start":{"line":36,"column":4},"end":{"line":38,"column":43}},"15":{"start":{"line":41,"column":4},"end":{"line":46,"column":5}},"16":{"start":{"line":42,"column":6},"end":{"line":42,"column":78}},"17":{"start":{"line":44,"column":6},"end":{"line":44,"column":62}},"18":{"start":{"line":45,"column":6},"end":{"line":45,"column":12}},"19":{"start":{"line":50,"column":2},"end":{"line":53,"column":4}},"20":{"start":{"line":69,"column":0},"end":{"line":69,"column":631}},"21":{"start":{"line":71,"column":0},"end":{"line":71,"column":154}},"22":{"start":{"line":73,"column":0},"end":{"line":73,"column":340}},"23":{"start":{"line":78,"column":0},"end":{"line":80,"column":1}},"24":{"start":{"line":79,"column":2},"end":{"line":79,"column":52}},"25":{"start":{"line":89,"column":0},"end":{"line":89,"column":36}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":27}},{"start":{"line":16,"column":31},"end":{"line":16,"column":56}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"5":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":46},"end":{"line":42,"column":55}},{"start":{"line":42,"column":58},"end":{"line":42,"column":60}}]},"6":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":43},"end":{"line":44,"column":54}},{"start":{"line":44,"column":58},"end":{"line":44,"column":60}}]},"7":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":32},"end":{"line":51,"column":40}},{"start":{"line":51,"column":43},"end":{"line":51,"column":47}}]},"8":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":32},"end":{"line":52,"column":40}},{"start":{"line":52,"column":43},"end":{"line":52,"column":47}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","exports.default = function (word) {","","  // Preparing the word","  var preparedWord = normalizeLetters(word.toLowerCase().replace(/[^a-z]/g, ''));","","  // Dropping the -que suffix","  var stem = preparedWord.replace(/que$/, '');","","  // Checking whether the word ends in -que & is a protected stem","  if (preparedWord !== stem && QUE_SET.has(preparedWord)) return {","    noun: preparedWord,","    verb: preparedWord","  };","","  var nounStem = stem,","      verbStem = stem;","","  // Computing the noun stem","  for (var i = 0, l = SIMPLE_SUFFIXES.length; i < l; i++) {","    var newStem = nounStem.replace(SIMPLE_SUFFIXES[i], '');","","    if (newStem !== stem) {","      nounStem = newStem;","      break;","    }","  }","","  // Computing the verb stem","  for (var _i = 0, _l = VERB_SUFFIXES.length; _i < _l; _i++) {","    var _VERB_SUFFIXES$_i = VERB_SUFFIXES[_i],","        match = _VERB_SUFFIXES$_i[0],","        replacement = _VERB_SUFFIXES$_i[1];","","","    if (match.test(verbStem)) {","      var pattern = new RegExp((replacement ? '(.{2,})' : '') + match.source);","","      verbStem = verbStem.replace(pattern, replacement || '');","      break;","    }","  }","","  // Returning the stem only if longer than one character","  return {","    noun: nounStem.length > 1 ? nounStem : stem,","    verb: verbStem.length > 1 ? verbStem : stem","  };","};","","/**"," * Talisman stemmers/latin/schinke"," * ================================"," *"," * The Schinke stemming algorithm (latin)."," *"," * [Reference]:"," * http://snowball.tartarus.org/otherapps/schinke/intro.html"," */","","/**"," * Rules."," */","var QUE_SET = new Set(['atque', 'quoque', 'neque', 'itaque', 'absque', 'apsque', 'abusque', 'adaeque', 'adusque', 'denique', 'deque', 'susque', 'oblique', 'peraeque', 'plenisque', 'quandoque', 'quisque', 'quaeque', 'cuiusque', 'cuique', 'quemque', 'quamque', 'quaque', 'quique', 'quorumque', 'quarumque', 'quibusque', 'quosque', 'quasque', 'quotusquisque', 'quousque', 'ubique', 'undique', 'usque', 'uterque', 'utique', 'utroque', 'utribique', 'torque', 'coque', 'concoque', 'contorque', 'detorque', 'decoque', 'excoque', 'extorque', 'obtorque', 'optorque', 'retorque', 'recoque', 'attorque', 'incoque', 'intorque', 'praetorque']);","","var SIMPLE_SUFFIXES = [/ibus$/, /ius$/, /ae$/, /am$/, /as$/, /em$/, /es$/, /ia$/, /is$/, /nt$/, /os$/, /ud$/, /um$/, /us$/, /a$/, /e$/, /i$/, /o$/, /u$/];","","var VERB_SUFFIXES = [[/iuntur$/, '$1i'], [/erunt$/, '$1i'], [/untur$/, '$1i'], [/iunt$/, '$1i'], [/unt$/, '$1i'], [/beris$/, '$1bi'], [/bor$/, '$1bi'], [/bo$/, '$1bi'], [/ero$/, '$1eri'], [/mini$/], [/ntur$/], [/stis$/], [/mur$/], [/mus$/], [/ris$/], [/sti$/], [/tis$/], [/tur$/], [/ns$/], [/nt$/], [/ri$/], [/m$/], [/r$/], [/s$/], [/t$/]];","","/**"," * Helpers."," */","function normalizeLetters(stem) {","  return stem.replace(/j/g, 'i').replace(/v/g, 'u');","}","","/**"," * Function stemming the given latin word using the Schinke algorithm and"," * returning a noun stem and a verb stem."," *"," * @param  {string} word - The word to stem."," * @return {objet}       - The resulting stems (noun & verb)."," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"10":0,"13":0,"16":0,"21":0,"25":0,"26":0,"28":0,"29":0,"30":0,"35":0,"36":0,"41":0,"42":0,"44":0,"45":0,"50":0,"69":1,"71":1,"73":1,"78":1,"79":0,"89":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/hyphenation/liang.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/hyphenation/liang.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":4938,"10":25798,"11":4938,"12":4938,"13":20860,"14":20860,"15":8398,"16":20860,"17":4938,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1},"b":{"1":[25798,20107],"2":[8398,12462],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":25798,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":59,"loc":{"start":{"line":59,"column":43},"end":{"line":59,"column":56}}},"2":{"name":"liang","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}},"4":{"start":{"line":13,"column":0},"end":{"line":28,"column":2}},"5":{"start":{"line":48,"column":0},"end":{"line":48,"column":31913}},"6":{"start":{"line":50,"column":0},"end":{"line":50,"column":14}},"7":{"start":{"line":53,"column":0},"end":{"line":53,"column":58}},"8":{"start":{"line":56,"column":0},"end":{"line":72,"column":1}},"9":{"start":{"line":57,"column":2},"end":{"line":61,"column":5}},"10":{"start":{"line":60,"column":4},"end":{"line":60,"column":19}},"11":{"start":{"line":63,"column":2},"end":{"line":63,"column":20}},"12":{"start":{"line":65,"column":2},"end":{"line":70,"column":3}},"13":{"start":{"line":66,"column":4},"end":{"line":66,"column":34}},"14":{"start":{"line":68,"column":4},"end":{"line":68,"column":55}},"15":{"start":{"line":68,"column":32},"end":{"line":68,"column":55}},"16":{"start":{"line":69,"column":4},"end":{"line":69,"column":31}},"17":{"start":{"line":71,"column":2},"end":{"line":71,"column":25}},"18":{"start":{"line":75,"column":0},"end":{"line":75,"column":16}},"19":{"start":{"line":83,"column":0},"end":{"line":132,"column":1}},"20":{"start":{"line":86,"column":2},"end":{"line":86,"column":38}},"21":{"start":{"line":86,"column":24},"end":{"line":86,"column":38}},"22":{"start":{"line":89,"column":2},"end":{"line":89,"column":49}},"23":{"start":{"line":91,"column":2},"end":{"line":91,"column":34}},"24":{"start":{"line":91,"column":17},"end":{"line":91,"column":34}},"25":{"start":{"line":94,"column":2},"end":{"line":95,"column":53}},"26":{"start":{"line":97,"column":2},"end":{"line":115,"column":3}},"27":{"start":{"line":98,"column":4},"end":{"line":98,"column":23}},"28":{"start":{"line":100,"column":4},"end":{"line":114,"column":5}},"29":{"start":{"line":101,"column":6},"end":{"line":101,"column":31}},"30":{"start":{"line":103,"column":6},"end":{"line":113,"column":7}},"31":{"start":{"line":104,"column":8},"end":{"line":104,"column":38}},"32":{"start":{"line":106,"column":8},"end":{"line":110,"column":9}},"33":{"start":{"line":107,"column":10},"end":{"line":109,"column":11}},"34":{"start":{"line":108,"column":12},"end":{"line":108,"column":73}},"35":{"start":{"line":112,"column":8},"end":{"line":112,"column":14}},"36":{"start":{"line":118,"column":2},"end":{"line":118,"column":16}},"37":{"start":{"line":119,"column":2},"end":{"line":119,"column":16}},"38":{"start":{"line":120,"column":2},"end":{"line":120,"column":32}},"39":{"start":{"line":121,"column":2},"end":{"line":121,"column":32}},"40":{"start":{"line":124,"column":2},"end":{"line":124,"column":20}},"41":{"start":{"line":126,"column":2},"end":{"line":129,"column":3}},"42":{"start":{"line":127,"column":4},"end":{"line":127,"column":43}},"43":{"start":{"line":128,"column":4},"end":{"line":128,"column":45}},"44":{"start":{"line":128,"column":29},"end":{"line":128,"column":45}},"45":{"start":{"line":131,"column":2},"end":{"line":131,"column":16}},"46":{"start":{"line":133,"column":0},"end":{"line":133,"column":36}}},"branchMap":{"1":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":11},"end":{"line":60,"column":13}},{"start":{"line":60,"column":17},"end":{"line":60,"column":18}}]},"2":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"3":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"4":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"5":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"6":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":8}},{"start":{"line":106,"column":8},"end":{"line":106,"column":8}}]},"7":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = liang;","","var _vectors = require('../../helpers/vectors');","","/**"," * Data."," */","var EXCEPTIONS = {","  associate: ['as', 'so', 'ciate'],","  associates: ['as', 'so', 'ciates'],","  declination: ['de', 'cli', 'na', 'tion'],","  obligatory: ['oblig', 'a', 'tory'],","  philanthropic: ['phil', 'an', 'thropic'],","  present: ['present'],","  presents: ['presents'],","  project: ['project'],","  projects: ['projects'],","  reciprocity: ['reci', 'procity'],","  recognizance: ['re', 'cog', 'ni', 'zance'],","  reformantion: ['ref', 'or', 'ma', 'tion'],","  retribution: ['ret', 'ri', 'bu', 'tion'],","  table: ['ta', 'ble']","}; /**","    * Talisman tokenizers/hyphenation/liang","    * ======================================","    *","    * Implementation of Frank Liang's hyphenation.","    *","    * [Reference]:","    * https://tug.org/docs/liang/","    *","    * [Article]:","    * Liang, Franklin Mark. \"Word Hy-phen-a-tion by Com-pu-ter\". PhD dissertation,","    * Stanford University Department of Computer Science.","    * Report number STAN-CS-83-977, August 1983.","    *","    * [Note]:","    * This implementation follows the python one described here:","    * http://nedbatchelder.com/code/modules/hyphenate.html","    */","","","var PATTERNS = '\\n.ach4 .ad4der .af1t .al3t .am5at .an5c .ang4 .ani5m .ant4 .an3te .anti5s .ar5s\\n.ar4tie .ar4ty .as3c .as1p .as1s .aster5 .atom5 .au1d .av4i .awn4 .ba4g .ba5na\\n.bas4e .ber4 .be5ra .be3sm .be5sto .bri2 .but4ti .cam4pe .can5c .capa5b .car5ol\\n.ca4t .ce4la .ch4 .chill5i .ci2 .cit5r .co3e .co4r .cor5ner .de4moi .de3o .de3ra\\n.de3ri .des4c .dictio5 .do4t .du4c .dumb5 .earth5 .eas3i .eb4 .eer4 .eg2 .el5d\\n.el3em .enam3 .en3g .en3s .eq5ui5t .er4ri .es3 .eu3 .eye5 .fes3 .for5mer .ga2\\n.ge2 .gen3t4 .ge5og .gi5a .gi4b .go4r .hand5i .han5k .he2 .hero5i .hes3 .het3\\n.hi3b .hi3er .hon5ey .hon3o .hov5 .id4l .idol3 .im3m .im5pin .in1 .in3ci .ine2\\n.in2k .in3s .ir5r .is4i .ju3r .la4cy .la4m .lat5er .lath5 .le2 .leg5e .len4\\n.lep5 .lev1 .li4g .lig5a .li2n .li3o .li4t .mag5a5 .mal5o .man5a .mar5ti .me2\\n.mer3c .me5ter .mis1 .mist5i .mon3e .mo3ro .mu5ta .muta5b .ni4c .od2 .odd5\\n.of5te .or5ato .or3c .or1d .or3t .os3 .os4tl .oth3 .out3 .ped5al .pe5te .pe5tit\\n.pi4e .pio5n .pi2t .pre3m .ra4c .ran4t .ratio5na .ree2 .re5mit .res2 .re5stat\\n.ri4g .rit5u .ro4q .ros5t .row5d .ru4d .sci3e .self5 .sell5 .se2n .se5rie .sh2\\n.si2 .sing4 .st4 .sta5bl .sy2 .ta4 .te4 .ten5an .th2 .ti2 .til4 .tim5o5 .ting4\\n.tin5k .ton4a .to4p .top5i .tou5s .trib5ut .un1a .un3ce .under5 .un1e .un5k\\n.un5o .un3u .up3 .ure3 .us5a .ven4de .ve5ra .wil5i .ye4 4ab. a5bal a5ban abe2\\nab5erd abi5a ab5it5ab ab5lat ab5o5liz 4abr ab5rog ab3ul a4car ac5ard ac5aro\\na5ceou ac1er a5chet 4a2ci a3cie ac1in a3cio ac5rob act5if ac3ul ac4um a2d ad4din\\nad5er. 2adi a3dia ad3ica adi4er a3dio a3dit a5diu ad4le ad3ow ad5ran ad4su 4adu\\na3duc ad5um ae4r aeri4e a2f aff4 a4gab aga4n ag5ell age4o 4ageu ag1i 4ag4l ag1n\\na2go 3agog ag3oni a5guer ag5ul a4gy a3ha a3he ah4l a3ho ai2 a5ia a3ic. ai5ly\\na4i4n ain5in ain5o ait5en a1j ak1en al5ab al3ad a4lar 4aldi 2ale al3end a4lenti\\na5le5o al1i al4ia. ali4e al5lev 4allic 4alm a5log. a4ly. 4alys 5a5lyst 5alyt\\n3alyz 4ama am5ab am3ag ama5ra am5asc a4matis a4m5ato am5era am3ic am5if am5ily\\nam1in ami4no a2mo a5mon amor5i amp5en a2n an3age 3analy a3nar an3arc anar4i\\na3nati 4and ande4s an3dis an1dl an4dow a5nee a3nen an5est. a3neu 2ang ang5ie\\nan1gl a4n1ic a3nies an3i3f an4ime a5nimi a5nine an3io a3nip an3ish an3it a3niu\\nan4kli 5anniz ano4 an5ot anoth5 an2sa an4sco an4sn an2sp ans3po an4st an4sur\\nantal4 an4tie 4anto an2tr an4tw an3ua an3ul a5nur 4ao apar4 ap5at ap5ero a3pher\\n4aphi a4pilla ap5illar ap3in ap3ita a3pitu a2pl apoc5 ap5ola apor5i apos3t\\naps5es a3pu aque5 2a2r ar3act a5rade ar5adis ar3al a5ramete aran4g ara3p ar4at\\na5ratio ar5ativ a5rau ar5av4 araw4 arbal4 ar4chan ar5dine ar4dr ar5eas a3ree\\nar3ent a5ress ar4fi ar4fl ar1i ar5ial ar3ian a3riet ar4im ar5inat ar3io ar2iz\\nar2mi ar5o5d a5roni a3roo ar2p ar3q arre4 ar4sa ar2sh 4as. as4ab as3ant ashi4\\na5sia. a3sib a3sic 5a5si4t ask3i as4l a4soc as5ph as4sh as3ten as1tr asur5a a2ta\\nat3abl at5ac at3alo at5ap ate5c at5ech at3ego at3en. at3era ater5n a5terna\\nat3est at5ev 4ath ath5em a5then at4ho ath5om 4ati. a5tia at5i5b at1ic at3if\\nation5ar at3itu a4tog a2tom at5omiz a4top a4tos a1tr at5rop at4sk at4tag at5te\\nat4th a2tu at5ua at5ue at3ul at3ura a2ty au4b augh3 au3gu au4l2 aun5d au3r\\nau5sib aut5en au1th a2va av3ag a5van ave4no av3era av5ern av5ery av1i avi4er\\nav3ig av5oc a1vor 3away aw3i aw4ly aws4 ax4ic ax4id ay5al aye4 ays4 azi4er azz5i\\n5ba. bad5ger ba4ge bal1a ban5dag ban4e ban3i barbi5 bari4a bas4si 1bat ba4z 2b1b\\nb2be b3ber bbi4na 4b1d 4be. beak4 beat3 4be2d be3da be3de be3di be3gi be5gu 1bel\\nbe1li be3lo 4be5m be5nig be5nu 4bes4 be3sp be5str 3bet bet5iz be5tr be3tw be3w\\nbe5yo 2bf 4b3h bi2b bi4d 3bie bi5en bi4er 2b3if 1bil bi3liz bina5r4 bin4d bi5net\\nbi3ogr bi5ou bi2t 3bi3tio bi3tr 3bit5ua b5itz b1j bk4 b2l2 blath5 b4le. blen4\\n5blesp b3lis b4lo blun4t 4b1m 4b3n bne5g 3bod bod3i bo4e bol3ic bom4bi bon4a\\nbon5at 3boo 5bor. 4b1ora bor5d 5bore 5bori 5bos4 b5ota both5 bo4to bound3 4bp\\n4brit broth3 2b5s2 bsor4 2bt bt4l b4to b3tr buf4fer bu4ga bu3li bumi4 bu4n\\nbunt4i bu3re bus5ie buss4e 5bust 4buta 3butio b5uto b1v 4b5w 5by. bys4 1ca\\ncab3in ca1bl cach4 ca5den 4cag4 2c5ah ca3lat cal4la call5in 4calo can5d can4e\\ncan4ic can5is can3iz can4ty cany4 ca5per car5om cast5er cas5tig 4casy ca4th\\n4cativ cav5al c3c ccha5 cci4a ccompa5 ccon4 ccou3t 2ce. 4ced. 4ceden 3cei 5cel.\\n3cell 1cen 3cenc 2cen4e 4ceni 3cent 3cep ce5ram 4cesa 3cessi ces5si5b ces5t cet4\\nc5e4ta cew4 2ch 4ch. 4ch3ab 5chanic ch5a5nis che2 cheap3 4ched che5lo 3chemi\\nch5ene ch3er. ch3ers 4ch1in 5chine. ch5iness 5chini 5chio 3chit chi2z 3cho2\\nch4ti 1ci 3cia ci2a5b cia5r ci5c 4cier 5cific. 4cii ci4la 3cili 2cim 2cin c4ina\\n3cinat cin3em c1ing c5ing. 5cino cion4 4cipe ci3ph 4cipic 4cista 4cisti 2c1it\\ncit3iz 5ciz ck1 ck3i 1c4l4 4clar c5laratio 5clare cle4m 4clic clim4 cly4 c5n 1co\\nco5ag coe2 2cog co4gr coi4 co3inc col5i 5colo col3or com5er con4a c4one con3g\\ncon5t co3pa cop3ic co4pl 4corb coro3n cos4e cov1 cove4 cow5a coz5e co5zi c1q\\ncras5t 5crat. 5cratic cre3at 5cred 4c3reta cre4v cri2 cri5f c4rin cris4 5criti\\ncro4pl crop5o cros4e cru4d 4c3s2 2c1t cta4b ct5ang c5tant c2te c3ter c4ticu\\nctim3i ctu4r c4tw cud5 c4uf c4ui cu5ity 5culi cul4tis 3cultu cu2ma c3ume cu4mi\\n3cun cu3pi cu5py cur5a4b cu5ria 1cus cuss4i 3c4ut cu4tie 4c5utiv 4cutr 1cy cze4\\n1d2a 5da. 2d3a4b dach4 4daf 2dag da2m2 dan3g dard5 dark5 4dary 3dat 4dativ 4dato\\n5dav4 dav5e 5day d1b d5c d1d4 2de. deaf5 deb5it de4bon decan4 de4cil de5com\\n2d1ed 4dee. de5if deli4e del5i5q de5lo d4em 5dem. 3demic dem5ic. de5mil de4mons\\ndemor5 1den de4nar de3no denti5f de3nu de1p de3pa depi4 de2pu d3eq d4erh 5derm\\ndern5iz der5s des2 d2es. de1sc de2s5o des3ti de3str de4su de1t de2to de1v dev3il\\n4dey 4d1f d4ga d3ge4t dg1i d2gy d1h2 5di. 1d4i3a dia5b di4cam d4ice 3dict 3did\\n5di3en d1if di3ge di4lato d1in 1dina 3dine. 5dini di5niz 1dio dio5g di4pl dir2\\ndi1re dirt5i dis1 5disi d4is3t d2iti 1di1v d1j d5k2 4d5la 3dle. 3dled 3dles.\\n4dless 2d3lo 4d5lu 2dly d1m 4d1n4 1do 3do. do5de 5doe 2d5of d4og do4la doli4\\ndo5lor dom5iz do3nat doni4 doo3d dop4p d4or 3dos 4d5out do4v 3dox d1p 1dr\\ndrag5on 4drai dre4 drea5r 5dren dri4b dril4 dro4p 4drow 5drupli 4dry 2d1s2 ds4p\\nd4sw d4sy d2th 1du d1u1a du2c d1uca duc5er 4duct. 4ducts du5el du4g d3ule dum4be\\ndu4n 4dup du4pe d1v d1w d2y 5dyn dy4se dys5p e1a4b e3act ead1 ead5ie ea4ge\\nea5ger ea4l eal5er eal3ou eam3er e5and ear3a ear4c ear5es ear4ic ear4il ear5k\\near2t eart3e ea5sp e3ass east3 ea2t eat5en eath3i e5atif e4a3tu ea2v eav3en\\neav5i eav5o 2e1b e4bel. e4bels e4ben e4bit e3br e4cad ecan5c ecca5 e1ce ec5essa\\nec2i e4cib ec5ificat ec5ifie ec5ify ec3im eci4t e5cite e4clam e4clus e2col\\ne4comm e4compe e4conc e2cor ec3ora eco5ro e1cr e4crem ec4tan ec4te e1cu e4cul\\nec3ula 2e2da 4ed3d e4d1er ede4s 4edi e3dia ed3ib ed3ica ed3im ed1it edi5z 4edo\\ne4dol edon2 e4dri e4dul ed5ulo ee2c eed3i ee2f eel3i ee4ly ee2m ee4na ee4p1\\nee2s4 eest4 ee4ty e5ex e1f e4f3ere 1eff e4fic 5efici efil4 e3fine ef5i5nite\\n3efit efor5es e4fuse. 4egal eger4 eg5ib eg4ic eg5ing e5git5 eg5n e4go. e4gos\\neg1ul e5gur 5egy e1h4 eher4 ei2 e5ic ei5d eig2 ei5gl e3imb e3inf e1ing e5inst\\neir4d eit3e ei3th e5ity e1j e4jud ej5udi eki4n ek4la e1la e4la. e4lac elan4d\\nel5ativ e4law elaxa4 e3lea el5ebra 5elec e4led el3ega e5len e4l1er e1les el2f\\nel2i e3libe e4l5ic. el3ica e3lier el5igib e5lim e4l3ing e3lio e2lis el5ish\\ne3liv3 4ella el4lab ello4 e5loc el5og el3op. el2sh el4ta e5lud el5ug e4mac e4mag\\ne5man em5ana em5b e1me e2mel e4met em3ica emi4e em5igra em1in2 em5ine em3i3ni\\ne4mis em5ish e5miss em3iz 5emniz emo4g emoni5o em3pi e4mul em5ula emu3n e3my\\nen5amo e4nant ench4er en3dic e5nea e5nee en3em en5ero en5esi en5est en3etr e3new\\nen5ics e5nie e5nil e3nio en3ish en3it e5niu 5eniz 4enn 4eno eno4g e4nos en3ov\\nen4sw ent5age 4enthes en3ua en5uf e3ny. 4en3z e5of eo2g e4oi4 e3ol eop3ar e1or\\neo3re eo5rol eos4 e4ot eo4to e5out e5ow e2pa e3pai ep5anc e5pel e3pent ep5etitio\\nephe4 e4pli e1po e4prec ep5reca e4pred ep3reh e3pro e4prob ep4sh ep5ti5b e4put\\nep5uta e1q equi3l e4q3ui3s er1a era4b 4erand er3ar 4erati. 2erb er4bl er3ch\\ner4che 2ere. e3real ere5co ere3in er5el. er3emo er5ena er5ence 4erene er3ent\\nere4q er5ess er3est eret4 er1h er1i e1ria4 5erick e3rien eri4er er3ine e1rio\\n4erit er4iu eri4v e4riva er3m4 er4nis 4ernit 5erniz er3no 2ero er5ob e5roc ero4r\\ner1ou er1s er3set ert3er 4ertl er3tw 4eru eru4t 5erwau e1s4a e4sage. e4sages\\nes2c e2sca es5can e3scr es5cu e1s2e e2sec es5ecr es5enc e4sert. e4serts e4serva\\n4esh e3sha esh5en e1si e2sic e2sid es5iden es5igna e2s5im es4i4n esis4te esi4u\\ne5skin es4mi e2sol es3olu e2son es5ona e1sp es3per es5pira es4pre 2ess es4si4b\\nestan4 es3tig es5tim 4es2to e3ston 2estr e5stro estruc5 e2sur es5urr es4w eta4b\\neten4d e3teo ethod3 et1ic e5tide etin4 eti4no e5tir e5titio et5itiv 4etn et5ona\\ne3tra e3tre et3ric et5rif et3rog et5ros et3ua et5ym et5z 4eu e5un e3up eu3ro\\neus4 eute4 euti5l eu5tr eva2p5 e2vas ev5ast e5vea ev3ell evel3o e5veng even4i\\nev1er e5verb e1vi ev3id evi4l e4vin evi4v e5voc e5vu e1wa e4wag e5wee e3wh ewil5\\new3ing e3wit 1exp 5eyc 5eye. eys4 1fa fa3bl fab3r fa4ce 4fag fain4 fall5e 4fa4ma\\nfam5is 5far far5th fa3ta fa3the 4fato fault5 4f5b 4fd 4fe. feas4 feath3 fe4b\\n4feca 5fect 2fed fe3li fe4mo fen2d fend5e fer1 5ferr fev4 4f1f f4fes f4fie\\nf5fin. f2f5is f4fly f2fy 4fh 1fi fi3a 2f3ic. 4f3ical f3ican 4ficate f3icen\\nfi3cer fic4i 5ficia 5ficie 4fics fi3cu fi5del fight5 fil5i fill5in 4fily 2fin\\n5fina fin2d5 fi2ne f1in3g fin4n fis4ti f4l2 f5less flin4 flo3re f2ly5 4fm 4fn\\n1fo 5fon fon4de fon4t fo2r fo5rat for5ay fore5t for4i fort5a fos5 4f5p fra4t\\nf5rea fres5c fri2 fril4 frol5 2f3s 2ft f4to f2ty 3fu fu5el 4fug fu4min fu5ne\\nfu3ri fusi4 fus4s 4futa 1fy 1ga gaf4 5gal. 3gali ga3lo 2gam ga5met g5amo gan5is\\nga3niz gani5za 4gano gar5n4 gass4 gath3 4gativ 4gaz g3b gd4 2ge. 2ged geez4\\ngel4in ge5lis ge5liz 4gely 1gen ge4nat ge5niz 4geno 4geny 1geo ge3om g4ery 5gesi\\ngeth5 4geto ge4ty ge4v 4g1g2 g2ge g3ger gglu5 ggo4 gh3in gh5out gh4to 5gi. 1gi4a\\ngia5r g1ic 5gicia g4ico gien5 5gies. gil4 g3imen 3g4in. gin5ge 5g4ins 5gio 3gir\\ngir4l g3isl gi4u 5giv 3giz gl2 gla4 glad5i 5glas 1gle gli4b g3lig 3glo glo3r g1m\\ng4my gn4a g4na. gnet4t g1ni g2nin g4nio g1no g4non 1go 3go. gob5 5goe 3g4o4g\\ngo3is gon2 4g3o3na gondo5 go3ni 5goo go5riz gor5ou 5gos. gov1 g3p 1gr 4grada\\ng4rai gran2 5graph. g5rapher 5graphic 4graphy 4gray gre4n 4gress. 4grit g4ro\\ngruf4 gs2 g5ste gth3 gu4a 3guard 2gue 5gui5t 3gun 3gus 4gu4t g3w 1gy 2g5y3n\\ngy5ra h3ab4l hach4 hae4m hae4t h5agu ha3la hala3m ha4m han4ci han4cy 5hand.\\nhan4g hang5er hang5o h5a5niz han4k han4te hap3l hap5t ha3ran ha5ras har2d hard3e\\nhar4le harp5en har5ter has5s haun4 5haz haz3a h1b 1head 3hear he4can h5ecat h4ed\\nhe5do5 he3l4i hel4lis hel4ly h5elo hem4p he2n hena4 hen5at heo5r hep5 h4era\\nhera3p her4ba here5a h3ern h5erou h3ery h1es he2s5p he4t het4ed heu4 h1f h1h\\nhi5an hi4co high5 h4il2 himer4 h4ina hion4e hi4p hir4l hi3ro hir4p hir4r his3el\\nhis4s hith5er hi2v 4hk 4h1l4 hlan4 h2lo hlo3ri 4h1m hmet4 2h1n h5odiz h5ods ho4g\\nhoge4 hol5ar 3hol4e ho4ma home3 hon4a ho5ny 3hood hoon4 hor5at ho5ris hort3e\\nho5ru hos4e ho5sen hos1p 1hous house3 hov5el 4h5p 4hr4 hree5 hro5niz hro3po\\n4h1s2 h4sh h4tar ht1en ht5es h4ty hu4g hu4min hun5ke hun4t hus3t4 hu4t h1w\\nh4wart hy3pe hy3ph hy2s 2i1a i2al iam4 iam5ete i2an 4ianc ian3i 4ian4t ia5pe\\niass4 i4ativ ia4tric i4atu ibe4 ib3era ib5ert ib5ia ib3in ib5it. ib5ite i1bl\\nib3li i5bo i1br i2b5ri i5bun 4icam 5icap 4icar i4car. i4cara icas5 i4cay iccu4\\n4iceo 4ich 2ici i5cid ic5ina i2cip ic3ipa i4cly i2c5oc 4i1cr 5icra i4cry ic4te\\nictu2 ic4t3ua ic3ula ic4um ic5uo i3cur 2id i4dai id5anc id5d ide3al ide4s i2di\\nid5ian idi4ar i5die id3io idi5ou id1it id5iu i3dle i4dom id3ow i4dr i2du id5uo\\n2ie4 ied4e 5ie5ga ield3 ien5a4 ien4e i5enn i3enti i1er. i3esc i1est i3et 4if.\\nif5ero iff5en if4fr 4ific. i3fie i3fl 4ift 2ig iga5b ig3era ight3i 4igi i3gib\\nig3il ig3in ig3it i4g4l i2go ig3or ig5ot i5gre igu5i ig1ur i3h 4i5i4 i3j 4ik\\ni1la il3a4b i4lade i2l5am ila5ra i3leg il1er ilev4 il5f il1i il3ia il2ib il3io\\nil4ist 2ilit il2iz ill5ab 4iln il3oq il4ty il5ur il3v i4mag im3age ima5ry\\nimenta5r 4imet im1i im5ida imi5le i5mini 4imit im4ni i3mon i2mu im3ula 2in.\\ni4n3au 4inav incel4 in3cer 4ind in5dling 2ine i3nee iner4ar i5ness 4inga 4inge\\nin5gen 4ingi in5gling 4ingo 4ingu 2ini i5ni. i4nia in3io in1is i5nite. 5initio\\nin3ity 4ink 4inl 2inn 2i1no i4no4c ino4s i4not 2ins in3se insur5a 2int. 2in4th\\nin1u i5nus 4iny 2io 4io. ioge4 io2gr i1ol io4m ion3at ion4ery ion3i io5ph ior3i\\ni4os io5th i5oti io4to i4our 2ip ipe4 iphras4 ip3i ip4ic ip4re4 ip3ul i3qua\\niq5uef iq3uid iq3ui3t 4ir i1ra ira4b i4rac ird5e ire4de i4ref i4rel4 i4res ir5gi\\nir1i iri5de ir4is iri3tu 5i5r2iz ir4min iro4g 5iron. ir5ul 2is. is5ag is3ar\\nisas5 2is1c is3ch 4ise is3er 3isf is5han is3hon ish5op is3ib isi4d i5sis is5itiv\\n4is4k islan4 4isms i2so iso5mer is1p is2pi is4py 4is1s is4sal issen4 is4ses\\nis4ta. is1te is1ti ist4ly 4istral i2su is5us 4ita. ita4bi i4tag 4ita5m i3tan\\ni3tat 2ite it3era i5teri it4es 2ith i1ti 4itia 4i2tic it3ica 5i5tick it3ig\\nit5ill i2tim 2itio 4itis i4tism i2t5o5m 4iton i4tram it5ry 4itt it3uat i5tud\\nit3ul 4itz. i1u 2iv iv3ell iv3en. i4v3er. i4vers. iv5il. iv5io iv1it i5vore\\niv3o3ro i4v3ot 4i5w ix4o 4iy 4izar izi4 5izont 5ja jac4q ja4p 1je jer5s 4jestie\\n4jesty jew3 jo4p 5judg 3ka. k3ab k5ag kais4 kal4 k1b k2ed 1kee ke4g ke5li k3en4d\\nk1er kes4 k3est. ke4ty k3f kh4 k1i 5ki. 5k2ic k4ill kilo5 k4im k4in. kin4de\\nk5iness kin4g ki4p kis4 k5ish kk4 k1l 4kley 4kly k1m k5nes 1k2no ko5r kosh4 k3ou\\nkro5n 4k1s2 k4sc ks4l k4sy k5t k1w lab3ic l4abo laci4 l4ade la3dy lag4n lam3o\\n3land lan4dl lan5et lan4te lar4g lar3i las4e la5tan 4lateli 4lativ 4lav la4v4a\\n2l1b lbin4 4l1c2 lce4 l3ci 2ld l2de ld4ere ld4eri ldi4 ld5is l3dr l4dri le2a\\nle4bi left5 5leg. 5legg le4mat lem5atic 4len. 3lenc 5lene. 1lent le3ph le4pr\\nlera5b ler4e 3lerg 3l4eri l4ero les2 le5sco 5lesq 3less 5less. l3eva lev4er.\\nlev4era lev4ers 3ley 4leye 2lf l5fr 4l1g4 l5ga lgar3 l4ges lgo3 2l3h li4ag li2am\\nliar5iz li4as li4ato li5bi 5licio li4cor 4lics 4lict. l4icu l3icy l3ida lid5er\\n3lidi lif3er l4iff li4fl 5ligate 3ligh li4gra 3lik 4l4i4l lim4bl lim3i li4mo\\nl4im4p l4ina 1l4ine lin3ea lin3i link5er li5og 4l4iq lis4p l1it l2it. 5litica\\nl5i5tics liv3er l1iz 4lj lka3 l3kal lka4t l1l l4law l2le l5lea l3lec l3leg l3lel\\nl3le4n l3le4t ll2i l2lin4 l5lina ll4o lloqui5 ll5out l5low 2lm l5met lm3ing\\nl4mod lmon4 2l1n2 3lo. lob5al lo4ci 4lof 3logic l5ogo 3logu lom3er 5long lon4i\\nl3o3niz lood5 5lope. lop3i l3opm lora4 lo4rato lo5rie lor5ou 5los. los5et\\n5losophiz 5losophy los4t lo4ta loun5d 2lout 4lov 2lp lpa5b l3pha l5phi lp5ing\\nl3pit l4pl l5pr 4l1r 2l1s2 l4sc l2se l4sie 4lt lt5ag ltane5 l1te lten4 ltera4\\nlth3i l5ties. ltis4 l1tr ltu2 ltur3a lu5a lu3br luch4 lu3ci lu3en luf4 lu5id\\nlu4ma 5lumi l5umn. 5lumnia lu3o luo3r 4lup luss4 lus3te 1lut l5ven l5vet4 2l1w\\n1ly 4lya 4lyb ly5me ly3no 2lys4 l5yse 1ma 2mab ma2ca ma5chine ma4cl mag5in 5magn\\n2mah maid5 4mald ma3lig ma5lin mal4li mal4ty 5mania man5is man3iz 4map ma5rine.\\nma5riz mar4ly mar3v ma5sce mas4e mas1t 5mate math3 ma3tis 4matiza 4m1b mba4t5\\nm5bil m4b3ing mbi4v 4m5c 4me. 2med 4med. 5media me3die m5e5dy me2g mel5on mel4t\\nme2m mem1o3 1men men4a men5ac men4de 4mene men4i mens4 mensu5 3ment men4te me5on\\nm5ersa 2mes 3mesti me4ta met3al me1te me5thi m4etr 5metric me5trie me3try me4v\\n4m1f 2mh 5mi. mi3a mid4a mid4g mig4 3milia m5i5lie m4ill min4a 3mind m5inee\\nm4ingl min5gli m5ingly min4t m4inu miot4 m2is mis4er. mis5l mis4ti m5istry 4mith\\nm2iz 4mk 4m1l m1m mma5ry 4m1n mn4a m4nin mn4o 1mo 4mocr 5mocratiz mo2d1 mo4go\\nmois2 moi5se 4mok mo5lest mo3me mon5et mon5ge moni3a mon4ism mon4ist mo3niz\\nmonol4 mo3ny. mo2r 4mora. mos2 mo5sey mo3sp moth3 m5ouf 3mous mo2v 4m1p mpara5\\nmpa5rab mpar5i m3pet mphas4 m2pi mpi4a mp5ies m4p1in m5pir mp5is mpo3ri mpos5ite\\nm4pous mpov5 mp4tr m2py 4m3r 4m1s2 m4sh m5si 4mt 1mu mula5r4 5mult multi3 3mum\\nmun2 4mup mu4u 4mw 1na 2n1a2b n4abu 4nac. na4ca n5act nag5er. nak4 na4li na5lia\\n4nalt na5mit n2an nanci4 nan4it nank4 nar3c 4nare nar3i nar4l n5arm n4as nas4c\\nnas5ti n2at na3tal nato5miz n2au nau3se 3naut nav4e 4n1b4 ncar5 n4ces. n3cha\\nn5cheo n5chil n3chis nc1in nc4it ncour5a n1cr n1cu n4dai n5dan n1de nd5est.\\nndi4b n5d2if n1dit n3diz n5duc ndu4r nd2we 2ne. n3ear ne2b neb3u ne2c 5neck 2ned\\nne4gat neg5ativ 5nege ne4la nel5iz ne5mi ne4mo 1nen 4nene 3neo ne4po ne2q n1er\\nnera5b n4erar n2ere n4er5i ner4r 1nes 2nes. 4nesp 2nest 4nesw 3netic ne4v n5eve\\nne4w n3f n4gab n3gel nge4n4e n5gere n3geri ng5ha n3gib ng1in n5git n4gla ngov4\\nng5sh n1gu n4gum n2gy 4n1h4 nha4 nhab3 nhe4 3n4ia ni3an ni4ap ni3ba ni4bl ni4d\\nni5di ni4er ni2fi ni5ficat n5igr nik4 n1im ni3miz n1in 5nine. nin4g ni4o 5nis.\\nnis4ta n2it n4ith 3nitio n3itor ni3tr n1j 4nk2 n5kero n3ket nk3in n1kl 4n1l n5m\\nnme4 nmet4 4n1n2 nne4 nni3al nni4v nob4l no3ble n5ocl 4n3o2d 3noe 4nog noge4\\nnois5i no5l4i 5nologis 3nomic n5o5miz no4mo no3my no4n non4ag non5i n5oniz 4nop\\n5nop5o5li nor5ab no4rary 4nosc nos4e nos5t no5ta 1nou 3noun nov3el3 nowl3 n1p4\\nnpi4 npre4c n1q n1r nru4 2n1s2 ns5ab nsati4 ns4c n2se n4s3es nsid1 nsig4 n2sl\\nns3m n4soc ns4pe n5spi nsta5bl n1t nta4b nter3s nt2i n5tib nti4er nti2f n3tine\\nn4t3ing nti4p ntrol5li nt4s ntu3me nu1a nu4d nu5en nuf4fe n3uin 3nu3it n4um\\nnu1me n5umi 3nu4n n3uo nu3tr n1v2 n1w4 nym4 nyp4 4nz n3za 4oa oad3 o5a5les oard3\\noas4e oast5e oat5i ob3a3b o5bar obe4l o1bi o2bin ob5ing o3br ob3ul o1ce och4\\no3chet ocif3 o4cil o4clam o4cod oc3rac oc5ratiz ocre3 5ocrit octor5a oc3ula\\no5cure od5ded od3ic odi3o o2do4 odor3 od5uct. od5ucts o4el o5eng o3er oe4ta o3ev\\no2fi of5ite ofit4t o2g5a5r og5ativ o4gato o1ge o5gene o5geo o4ger o3gie 1o1gis\\nog3it o4gl o5g2ly 3ogniz o4gro ogu5i 1ogy 2ogyn o1h2 ohab5 oi2 oic3es oi3der\\noiff4 oig4 oi5let o3ing oint5er o5ism oi5son oist5en oi3ter o5j 2ok o3ken ok5ie\\no1la o4lan olass4 ol2d old1e ol3er o3lesc o3let ol4fi ol2i o3lia o3lice ol5id.\\no3li4f o5lil ol3ing o5lio o5lis. ol3ish o5lite o5litio o5liv olli4e ol5ogiz\\nolo4r ol5pl ol2t ol3ub ol3ume ol3un o5lus ol2v o2ly om5ah oma5l om5atiz om2be\\nom4bl o2me om3ena om5erse o4met om5etry o3mia om3ic. om3ica o5mid om1in o5mini\\n5ommend omo4ge o4mon om3pi ompro5 o2n on1a on4ac o3nan on1c 3oncil 2ond on5do\\no3nen on5est on4gu on1ic o3nio on1is o5niu on3key on4odi on3omy on3s onspi4\\nonspir5a onsu4 onten4 on3t4i ontif5 on5um onva5 oo2 ood5e ood5i oo4k oop3i o3ord\\noost5 o2pa ope5d op1er 3opera 4operag 2oph o5phan o5pher op3ing o3pit o5pon\\no4posi o1pr op1u opy5 o1q o1ra o5ra. o4r3ag or5aliz or5ange ore5a o5real or3ei\\nore5sh or5est. orew4 or4gu 4o5ria or3ica o5ril or1in o1rio or3ity o3riu or2mi\\norn2e o5rof or3oug or5pe 3orrh or4se ors5en orst4 or3thi or3thy or4ty o5rum o1ry\\nos3al os2c os4ce o3scop 4oscopi o5scr os4i4e os5itiv os3ito os3ity osi4u os4l\\no2so os4pa os4po os2ta o5stati os5til os5tit o4tan otele4g ot3er. ot5ers o4tes\\n4oth oth5esi oth3i4 ot3ic. ot5ica o3tice o3tif o3tis oto5s ou2 ou3bl ouch5i\\nou5et ou4l ounc5er oun2d ou5v ov4en over4ne over3s ov4ert o3vis oviti4 o5v4ol\\now3der ow3el ow5est ow1i own5i o4wo oy1a 1pa pa4ca pa4ce pac4t p4ad 5pagan\\np3agat p4ai pain4 p4al pan4a pan3el pan4ty pa3ny pa1p pa4pu para5bl par5age\\npar5di 3pare par5el p4a4ri par4is pa2te pa5ter 5pathic pa5thy pa4tric pav4 3pay\\n4p1b pd4 4pe. 3pe4a pear4l pe2c 2p2ed 3pede 3pedi pedia4 ped4ic p4ee pee4d pek4\\npe4la peli4e pe4nan p4enc pen4th pe5on p4era. pera5bl p4erag p4eri peri5st\\nper4mal perme5 p4ern per3o per3ti pe5ru per1v pe2t pe5ten pe5tiz 4pf 4pg 4ph.\\nphar5i phe3no ph4er ph4es. ph1ic 5phie ph5ing 5phisti 3phiz ph2l 3phob 3phone\\n5phoni pho4r 4phs ph3t 5phu 1phy pi3a pian4 pi4cie pi4cy p4id p5ida pi3de 5pidi\\n3piec pi3en pi4grap pi3lo pi2n p4in. pind4 p4ino 3pi1o pion4 p3ith pi5tha pi2tu\\n2p3k2 1p2l2 3plan plas5t pli3a pli5er 4plig pli4n ploi4 plu4m plum4b 4p1m 2p3n\\npo4c 5pod. po5em po3et5 5po4g poin2 5point poly5t po4ni po4p 1p4or po4ry 1pos\\npos1s p4ot po4ta 5poun 4p1p ppa5ra p2pe p4ped p5pel p3pen p3per p3pet ppo5site\\npr2 pray4e 5preci pre5co pre3em pref5ac pre4la pre3r p3rese 3press pre5ten pre3v\\n5pri4e prin4t3 pri4s pris3o p3roca prof5it pro3l pros3e pro1t 2p1s2 p2se ps4h\\np4sib 2p1t pt5a4b p2te p2th pti3m ptu4r p4tw pub3 pue4 puf4 pul3c pu4m pu2n\\npur4r 5pus pu2t 5pute put3er pu3tr put4ted put4tin p3w qu2 qua5v 2que. 3quer\\n3quet 2rab ra3bi rach4e r5acl raf5fi raf4t r2ai ra4lo ram3et r2ami rane5o ran4ge\\nr4ani ra5no rap3er 3raphy rar5c rare4 rar5ef 4raril r2as ration4 rau4t ra5vai\\nrav3el ra5zie r1b r4bab r4bag rbi2 rbi4f r2bin r5bine rb5ing. rb4o r1c r2ce\\nrcen4 r3cha rch4er r4ci4b rc4it rcum3 r4dal rd2i rdi4a rdi4er rdin4 rd3ing 2re.\\nre1al re3an re5arr 5reav re4aw r5ebrat rec5oll rec5ompe re4cre 2r2ed re1de\\nre3dis red5it re4fac re2fe re5fer. re3fi re4fy reg3is re5it re1li re5lu r4en4ta\\nren4te re1o re5pin re4posi re1pu r1er4 r4eri rero4 re5ru r4es. re4spi ress5ib\\nres2t re5stal re3str re4ter re4ti4z re3tri reu2 re5uti rev2 re4val rev3el\\nr5ev5er. re5vers re5vert re5vil rev5olu re4wh r1f rfu4 r4fy rg2 rg3er r3get\\nr3gic rgi4n rg3ing r5gis r5git r1gl rgo4n r3gu rh4 4rh. 4rhal ri3a ria4b ri4ag\\nr4ib rib3a ric5as r4ice 4rici 5ricid ri4cie r4ico rid5er ri3enc ri3ent ri1er\\nri5et rig5an 5rigi ril3iz 5riman rim5i 3rimo rim4pe r2ina 5rina. rin4d rin4e\\nrin4g ri1o 5riph riph5e ri2pl rip5lic r4iq r2is r4is. ris4c r3ish ris4p ri3ta3b\\nr5ited. rit5er. rit5ers rit3ic ri2tu rit5ur riv5el riv3et riv3i r3j r3ket rk4le\\nrk4lin r1l rle4 r2led r4lig r4lis rl5ish r3lo4 r1m rma5c r2me r3men rm5ers\\nrm3ing r4ming. r4mio r3mit r4my r4nar r3nel r4ner r5net r3ney r5nic r1nis4 r3nit\\nr3niv rno4 r4nou r3nu rob3l r2oc ro3cr ro4e ro1fe ro5fil rok2 ro5ker 5role.\\nrom5ete rom4i rom4p ron4al ron4e ro5n4is ron4ta 1room 5root ro3pel rop3ic ror3i\\nro5ro ros5per ros4s ro4the ro4ty ro4va rov5el rox5 r1p r4pea r5pent rp5er. r3pet\\nrp4h4 rp3ing r3po r1r4 rre4c rre4f r4reo rre4st rri4o rri4v rron4 rros4 rrys4\\n4rs2 r1sa rsa5ti rs4c r2se r3sec rse4cr rs5er. rs3es rse5v2 r1sh r5sha r1si\\nr4si4b rson3 r1sp r5sw rtach4 r4tag r3teb rten4d rte5o r1ti rt5ib rti4d r4tier\\nr3tig rtil3i rtil4l r4tily r4tist r4tiv r3tri rtroph4 rt4sh ru3a ru3e4l ru3en\\nru4gl ru3in rum3pl ru2n runk5 run4ty r5usc ruti5n rv4e rvel4i r3ven rv5er.\\nr5vest r3vey r3vic rvi4v r3vo r1w ry4c 5rynge ry3t sa2 2s1ab 5sack sac3ri s3act\\n5sai salar4 sal4m sa5lo sal4t 3sanc san4de s1ap sa5ta 5sa3tio sat3u sau4 sa5vor\\n5saw 4s5b scan4t5 sca4p scav5 s4ced 4scei s4ces sch2 s4cho 3s4cie 5scin4d scle5\\ns4cli scof4 4scopy scour5a s1cu 4s5d 4se. se4a seas4 sea5w se2c3o 3sect 4s4ed\\nse4d4e s5edl se2g seg3r 5sei se1le 5self 5selv 4seme se4mol sen5at 4senc sen4d\\ns5ened sen5g s5enin 4sentd 4sentl sep3a3 4s1er. s4erl ser4o 4servo s1e4s se5sh\\nses5t 5se5um 5sev sev3en sew4i 5sex 4s3f 2s3g s2h 2sh. sh1er 5shev sh1in sh3io\\n3ship shiv5 sho4 sh5old shon3 shor4 short5 4shw si1b s5icc 3side. 5sides 5sidi\\nsi5diz 4signa sil4e 4sily 2s1in s2ina 5sine. s3ing 1sio 5sion sion5a si2r sir5a\\n1sis 3sitio 5siu 1siv 5siz sk2 4ske s3ket sk5ine sk5ing s1l2 s3lat s2le slith5\\n2s1m s3ma small3 sman3 smel4 s5men 5smith smol5d4 s1n4 1so so4ce soft3 so4lab\\nsol3d2 so3lic 5solv 3som 3s4on. sona4 son4g s4op 5sophic s5ophiz s5ophy sor5c\\nsor5d 4sov so5vi 2spa 5spai spa4n spen4d 2s5peo 2sper s2phe 3spher spho5 spil4\\nsp5ing 4spio s4ply s4pon spor4 4spot squal4l s1r 2ss s1sa ssas3 s2s5c s3sel\\ns5seng s4ses. s5set s1si s4sie ssi4er ss5ily s4sl ss4li s4sn sspend4 ss2t ssur5a\\nss5w 2st. s2tag s2tal stam4i 5stand s4ta4p 5stat. s4ted stern5i s5tero ste2w\\nstew5a s3the st2i s4ti. s5tia s1tic 5stick s4tie s3tif st3ing 5stir s1tle 5stock\\nstom3a 5stone s4top 3store st4r s4trad 5stratu s4tray s4trid 4stry 4st3w s2ty\\n1su su1al su4b3 su2g3 su5is suit3 s4ul su2m sum3i su2n su2r 4sv sw2 4swo s4y\\n4syc 3syl syn5o sy5rin 1ta 3ta. 2tab ta5bles 5taboliz 4taci ta5do 4taf4 tai5lo\\nta2l ta5la tal5en tal3i 4talk tal4lis ta5log ta5mo tan4de tanta3 ta5per ta5pl\\ntar4a 4tarc 4tare ta3riz tas4e ta5sy 4tatic ta4tur taun4 tav4 2taw tax4is 2t1b\\n4tc t4ch tch5et 4t1d 4te. tead4i 4teat tece4 5tect 2t1ed te5di 1tee teg4 te5ger\\nte5gi 3tel. teli4 5tels te2ma2 tem3at 3tenan 3tenc 3tend 4tenes 1tent ten4tag\\n1teo te4p te5pe ter3c 5ter3d 1teri ter5ies ter3is teri5za 5ternit ter5v 4tes.\\n4tess t3ess. teth5e 3teu 3tex 4tey 2t1f 4t1g 2th. than4 th2e 4thea th3eas the5at\\nthe3is 3thet th5ic. th5ica 4thil 5think 4thl th5ode 5thodic 4thoo thor5it\\ntho5riz 2ths 1tia ti4ab ti4ato 2ti2b 4tick t4ico t4ic1u 5tidi 3tien tif2 ti5fy\\n2tig 5tigu till5in 1tim 4timp tim5ul 2t1in t2ina 3tine. 3tini 1tio ti5oc tion5ee\\n5tiq ti3sa 3tise tis4m ti5so tis4p 5tistica ti3tl ti4u 1tiv tiv4a 1tiz ti3za\\nti3zen 2tl t5la tlan4 3tle. 3tled 3tles. t5let. t5lo 4t1m tme4 2t1n2 1to to3b\\nto5crat 4todo 2tof to2gr to5ic to2ma tom4b to3my ton4ali to3nat 4tono 4tony\\nto2ra to3rie tor5iz tos2 5tour 4tout to3war 4t1p 1tra tra3b tra5ch traci4\\ntrac4it trac4te tras4 tra5ven trav5es5 tre5f tre4m trem5i 5tria tri5ces 5tricia\\n4trics 2trim tri4v tro5mi tron5i 4trony tro5phe tro3sp tro3v tru5i trus4 4t1s2\\nt4sc tsh4 t4sw 4t3t2 t4tes t5to ttu4 1tu tu1a tu3ar tu4bi tud2 4tue 4tuf4 5tu3i\\n3tum tu4nis 2t3up. 3ture 5turi tur3is tur5o tu5ry 3tus 4tv tw4 4t1wa twis4 4two\\n1ty 4tya 2tyl type3 ty5ph 4tz tz4e 4uab uac4 ua5na uan4i uar5ant uar2d uar3i\\nuar3t u1at uav4 ub4e u4bel u3ber u4bero u1b4i u4b5ing u3ble. u3ca uci4b uc4it\\nucle3 u3cr u3cu u4cy ud5d ud3er ud5est udev4 u1dic ud3ied ud3ies ud5is u5dit\\nu4don ud4si u4du u4ene uens4 uen4te uer4il 3ufa u3fl ugh3en ug5in 2ui2 uil5iz\\nui4n u1ing uir4m uita4 uiv3 uiv4er. u5j 4uk u1la ula5b u5lati ulch4 5ulche\\nul3der ul4e u1len ul4gi ul2i u5lia ul3ing ul5ish ul4lar ul4li4b ul4lis 4ul3m\\nu1l4o 4uls uls5es ul1ti ultra3 4ultu u3lu ul5ul ul5v um5ab um4bi um4bly u1mi\\nu4m3ing umor5o um2p unat4 u2ne un4er u1ni un4im u2nin un5ish uni3v un3s4 un4sw\\nunt3ab un4ter. un4tes unu4 un5y un5z u4ors u5os u1ou u1pe uper5s u5pia up3ing\\nu3pl up3p upport5 upt5ib uptu4 u1ra 4ura. u4rag u4ras ur4be urc4 ur1d ure5at\\nur4fer ur4fr u3rif uri4fic ur1in u3rio u1rit ur3iz ur2l url5ing. ur4no uros4\\nur4pe ur4pi urs5er ur5tes ur3the urti4 ur4tie u3ru 2us u5sad u5san us4ap usc2\\nus3ci use5a u5sia u3sic us4lin us1p us5sl us5tere us1tr u2su usur4 uta4b u3tat\\n4ute. 4utel 4uten uten4i 4u1t2i uti5liz u3tine ut3ing ution5a u4tis 5u5tiz u4t1l\\nut5of uto5g uto5matic u5ton u4tou uts4 u3u uu4m u1v2 uxu3 uz4e 1va 5va. 2v1a4b\\nvac5il vac3u vag4 va4ge va5lie val5o val1u va5mo va5niz va5pi var5ied 3vat 4ve.\\n4ved veg3 v3el. vel3li ve4lo v4ely ven3om v5enue v4erd 5vere. v4erel v3eren\\nver5enc v4eres ver3ie vermi4n 3verse ver3th v4e2s 4ves. ves4te ve4te vet3er\\nve4ty vi5ali 5vian 5vide. 5vided 4v3iden 5vides 5vidi v3if vi5gn vik4 2vil\\n5vilit v3i3liz v1in 4vi4na v2inc vin5d 4ving vio3l v3io4r vi1ou vi4p vi5ro\\nvis3it vi3so vi3su 4viti vit3r 4vity 3viv 5vo. voi4 3vok vo4la v5ole 5volt 3volv\\nvom5i vor5ab vori4 vo4ry vo4ta 4votee 4vv4 v4y w5abl 2wac wa5ger wag5o wait5\\nw5al. wam4 war4t was4t wa1te wa5ver w1b wea5rie weath3 wed4n weet3 wee5v wel4l\\nw1er west3 w3ev whi4 wi2 wil2 will5in win4de win4g wir4 3wise with3 wiz5 w4k\\nwl4es wl3in w4no 1wo2 wom1 wo5ven w5p wra4 wri4 writa4 w3sh ws4l ws4pe w5s4t 4wt\\nwy4 x1a xac5e x4ago xam3 x4ap xas5 x3c2 x1e xe4cuto x2ed xer4i xe5ro x1h xhi2\\nxhil5 xhu4 x3i xi5a xi5c xi5di x4ime xi5miz x3o x4ob x3p xpan4d xpecto5 xpe3d\\nx1t2 x3ti x1u xu3a xx4 y5ac 3yar4 y5at y1b y1c y2ce yc5er y3ch ych4e ycom4 ycot4\\ny1d y5ee y1er y4erf yes4 ye4t y5gi 4y3h y1i y3la ylla5bl y3lo y5lu ymbol5 yme4\\nympa3 yn3chr yn5d yn5g yn5ic 5ynx y1o4 yo5d y4o5g yom4 yo5net y4ons y4os y4ped\\nyper5 yp3i y3po y4poc yp2ta y5pu yra5m yr5ia y3ro yr4r ys4c y3s2e ys3ica ys3io\\n3ysis y4so yss4 ys1t ys3ta ysur4 y3thin yt3ic y1w za1 z5a2b zar2 4zb 2ze ze4n\\nze4p z1er ze3ro zet4 2z1i z4il z4is 5zl 4zm 1zo zo4m zo5ol zte4 4z1z2 z4zy\\n.con5gr .de5riva .dri5v4 .eth1y6l1 .eu4ler .ev2 .ever5si5b .ga4s1om1 .ge4ome\\n.ge5ot1 .he3mo1 .he3p6a .he3roe .in5u2t .kil2n3i .ko6r1te1 .le6ices .me4ga1l\\n.met4ala .mim5i2c1 .mi1s4ers .ne6o3f .noe1th .non1e2m .poly1s .post1am .pre1am\\n.rav5en1o .semi5 .sem4ic .semid6 .semip4 .semir4 .sem6is4 .semiv4 .sph6in1\\n.spin1o .ta5pes1tr .te3legr .to6pog .to2q .un3at5t .un5err5 .vi2c3ar .we2b1l\\n.re1e4c a5bolic a2cabl af6fish am1en3ta5b anal6ys ano5a2c ans5gr ans3v anti1d\\nan3ti1n2 anti1re a4pe5able ar3che5t ar2range as5ymptot ath3er1o1s at6tes.\\naugh4tl au5li5f av3iou back2er. ba6r1onie ba1thy bbi4t be2vie bi5d2if bil2lab\\nbio5m bi1orb bio1rh b1i3tive blan2d1 blin2d1 blon2d2 bor1no5 bo2t1u1l brus4q\\nbus6i2er bus6i2es buss4ing but2ed. but4ted cad5e1m cat1a1s2 4chs. chs3hu chie5vo\\ncig3a3r cin2q cle4ar co6ph1o3n cous2ti cri3tie croc1o1d cro5e2co c2tro3me6c\\n1cu2r1ance 2d3alone data1b dd5a5b d2d5ib de4als. de5clar1 de2c5lina de3fin3iti\\nde2mos des3ic de2tic dic1aid dif5fra 3di1methy di2ren di2rer 2d1lead 2d1li2e\\n3do5word dren1a5l drif2t1a d1ri3pleg5 drom3e5d d3tab du2al. du1op1o1l ea4n3ies\\ne3chas edg1l ed1uling eli2t1is e1loa en1dix eo3grap 1e6p3i3neph1 e2r3i4an.\\ne3spac6i eth1y6l1ene 5eu2clid1 feb1rua fermi1o 3fich fit5ted. fla1g6el flow2er.\\n3fluor gen2cy. ge3o1d ght1we g1lead get2ic. 4g1lish 5glo5bin 1g2nac gnet1ism\\ngno5mo g2n1or. g2noresp 2g1o4n3i1za graph5er. griev1 g1utan hair1s ha2p3ar5r\\nhatch1 hex2a3 hite3sid h3i5pel1a4 hnau3z ho6r1ic. h2t1eou hypo1tha id4ios\\nifac1et ign4it ignit1er i4jk im3ped3a infra1s2 i5nitely. irre6v3oc i1tesima\\nith5i2l itin5er5ar janu3a japan1e2s je1re1m 1ke6ling 1ki5netic 1kovian k3sha\\nla4c3i5e lai6n3ess lar5ce1n l3chai l3chil6d1 lead6er. lea4s1a 1lec3ta6b\\nle3g6en2dre 1le1noid lith1o5g ll1fl l2l3ish l5mo3nell lo1bot1o1 lo2ges. load4ed.\\nload6er. l3tea lth5i2ly lue1p 1lunk3er 1lum5bia. 3lyg1a1mi ly5styr ma1la1p m2an.\\nman3u1sc mar1gin1 medi2c med3i3cin medio6c1 me3gran3 m2en. 3mi3da5b 3milita\\nmil2l1ag mil5li5li mi6n3is. mi1n2ut1er mi1n2ut1est m3ma1b 5maph1ro1 5moc1ra1t\\nmo5e2las mol1e5c mon4ey1l mono3ch mo4no1en moro6n5is mono1s6 moth4et2 m1ou3sin\\nm5shack2 mu2dro mul2ti5u n3ar4chs. n3ch2es1t ne3back 2ne1ski n1dieck nd3thr\\nnfi6n3ites 4n5i4an. nge5nes ng1ho ng1spr nk3rup n5less 5noc3er1os nom1a6l\\nnom5e1no n1o1mist non1eq non1i4so 5nop1oly. no1vemb ns5ceiv ns4moo ntre1p\\nobli2g1 o3chas odel3li odit1ic oerst2 oke1st o3les3ter oli3gop1o1 o1lo3n4om\\no3mecha6 onom1ic o3norma o3no2t1o3n o3nou op1ism. or4tho3ni4t orth1ri or5tively\\no4s3pher o5test1er o5tes3tor oth3e1o1s ou3ba3do o6v3i4an. oxi6d1ic pal6mat\\nparag6ra4 par4a1le param4 para3me pee2v1 phi2l3ant phi5lat1e3l pi2c1a3d pli2c1ab\\npli5nar poin3ca 1pole. poly1e po3lyph1ono 1prema3c pre1neu pres2pli pro2cess\\nproc3i3ty. pro2g1e 3pseu2d pseu3d6o3d2 pseu3d6o3f2 pto3mat4 p5trol3 pu5bes5c\\nquain2t1e qu6a3si3 quasir6 quasis6 quin5tes5s qui3v4ar r1abolic 3rab1o1loi\\nra3chu r3a3dig radi1o6g r2amen 3ra4m5e1triz ra3mou ra5n2has ra1or r3bin1ge\\nre2c3i1pr rec5t6ang re4t1ribu r3ial. riv1o1l 6rk. rk1ho r1krau 6rks. r5le5qu\\nro1bot1 ro5e2las ro5epide1 ro3mesh ro1tron r3pau5li rse1rad1i r1thou r1treu\\nr1veil rz1sc sales3c sales5w 5sa3par5il sca6p1er sca2t1ol s4chitz schro1ding1\\n1sci2utt scrap4er. scy4th1 sem1a1ph se3mes1t se1mi6t5ic sep3temb shoe1st sid2ed.\\nside5st side5sw si5resid sky1sc 3slova1kia 3s2og1a1my so2lute 3s2pace 1s2pacin\\nspe3cio spher1o spi2c1il spokes5w sports3c sports3w s3qui3to s2s1a3chu1 ss3hat\\ns2s3i4an. s5sign5a3b 1s2tamp s2t1ant5shi star3tli sta1ti st5b 1stor1ab strat1a1g\\nstrib5ut st5scr stu1pi4d1 styl1is su2per1e6 1sync 1syth3i2 swimm6 5tab1o1lism\\nta3gon. talk1a5 t1a1min t6ap6ath 5tar2rh tch1c tch3i1er t1cr teach4er. tele2g\\ntele1r6o 3ter1gei ter2ic. t3ess2es tha4l1am tho3don th1o5gen1i tho1k2er thy4l1an\\nthy3sc 2t3i4an. ti2n3o1m t1li2er tolo2gy tot3ic trai3tor1 tra1vers travers3a3b\\ntreach1e tr4ial. 3tro1le1um trof4ic. tro3fit tro1p2is 3trop1o5les 3trop1o5lis\\nt1ro1pol3it tsch3ie ttrib1ut1 turn3ar t1wh ty2p5al ua3drati uad1ratu u5do3ny\\nuea1m u2r1al. uri4al. us2er. v1ativ v1oir5du1 va6guer vaude3v 1verely. v1er1eig\\nves1tite vi1vip3a3r voice1p waste3w6a2 wave1g4 w3c week1n wide5sp wo4k1en\\nwrap3aro writ6er. x1q xquis3 y5che3d ym5e5try y1stro yes5ter1y z3ian. z3o1phr\\nz2z3w\\n';","","var TREE = {};","","// Compiling the patterns","PATTERNS = PATTERNS.trim().replace(/\\n/g, ' ').split(' ');","","// Building the tree","for (var i = 0, l = PATTERNS.length; i < l; i++) {","  var pattern = PATTERNS[i],","      characters = pattern.replace(/\\d/g, ''),","      points = pattern.split(/[.a-z]/).map(function (d) {","    return +d || 0;","  });","","  var branch = TREE;","","  for (var c = 0, m = characters.length; c < m; c++) {","    var character = characters[c];","","    if (!(character in branch)) branch[character] = {};","    branch = branch[character];","  }","  branch.points = points;","}","","// Cleaning up patterns from memory","PATTERNS = null;","","/**"," * Function returning the hyphenation of the given word."," *"," * @param  {string} word - The word to hyphenate."," * @return {array}       - The word's parts."," */","function liang(word) {","","  // If the word is too short, it doesn't need to be hyphenated","  if (word.length <= 4) return [word];","","  // Checking whether the word is an exception","  var exception = EXCEPTIONS[word.toLowerCase()];","","  if (exception) return exception;","","  // Retrieving the stored points","  var code = '.' + word.toLowerCase() + '.',","      points = (0, _vectors.vec)(code.length + 1, 0);","","  for (var _i = 0, _l = code.length; _i < _l; _i++) {","    var _branch = TREE;","","    for (var j = _i; j < _l; j++) {","      var _character = code[j];","","      if (_character in _branch) {","        _branch = _branch[_character];","","        if (_branch.points) {","          for (var k = 0, n = _branch.points.length; k < n; k++) {","            points[_i + k] = Math.max(points[_i + k], _branch.points[k]);","          }","        }","      } else {","        break;","      }","    }","  }","","  // No hyphens in the first two characters or the last two","  points[1] = 0;","  points[2] = 0;","  points[points.length - 2] = 0;","  points[points.length - 3] = 0;","","  // Building the tokens","  var tokens = [''];","","  for (var _i2 = 0, _l2 = word.length; _i2 < _l2; _i2++) {","    tokens[tokens.length - 1] += word[_i2];","    if (points[_i2 + 2] % 2) tokens.push('');","  }","","  return tokens;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"8":1,"13":1,"48":1,"50":1,"53":1,"56":1,"57":4938,"60":25798,"63":4938,"65":4938,"66":20860,"68":20860,"69":20860,"71":4938,"75":1,"83":1,"86":0,"89":0,"91":0,"94":0,"97":0,"98":0,"100":0,"101":0,"103":0,"104":0,"106":0,"107":0,"108":0,"112":0,"118":0,"119":0,"120":0,"121":0,"124":0,"126":0,"127":0,"128":0,"131":0,"133":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/sentences/punkt.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/sentences/punkt.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":2,"10":0,"11":2,"12":2,"13":2,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":1,"39":0,"40":1,"41":1,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":1,"58":1,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":1,"70":1,"71":1,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":1,"95":0,"96":1,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":1,"107":1,"108":1,"109":1,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":1,"142":0,"143":0,"144":0,"145":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":1,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":1,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":1,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":1,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":1,"238":0,"239":1,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":1,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":1,"315":0,"316":0,"317":0,"318":1,"319":1,"320":1,"321":1,"322":0,"323":0,"324":0,"325":0,"326":1,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":1,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":1,"366":0,"367":0,"368":0,"369":1,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":1,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":1,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":1,"407":0,"408":0,"409":0,"410":0,"411":0,"412":1,"413":0,"414":0,"415":0,"416":0,"417":0,"418":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,2],"5":[2,0],"6":[2,2],"7":[2,0],"8":[2,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0,0,0,0,0,0],"64":[0,0],"65":[0,0],"66":[0,0,0,0],"67":[0,0],"68":[0,0],"69":[0,0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0,0],"98":[0,0],"99":[0,0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0,0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0]},"f":{"1":0,"2":2,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},"fnMap":{"1":{"name":"_possibleConstructorReturn","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":48}}},"2":{"name":"_inherits","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}}},"3":{"name":"_toConsumableArray","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}}},"4":{"name":"_classCallCheck","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":48}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":28},"end":{"line":83,"column":40}}},"6":{"name":"FrequencyDistribution","line":84,"loc":{"start":{"line":84,"column":2},"end":{"line":84,"column":35}}},"7":{"name":"add","line":99,"loc":{"start":{"line":99,"column":40},"end":{"line":99,"column":60}}},"8":{"name":"get","line":113,"loc":{"start":{"line":113,"column":40},"end":{"line":113,"column":60}}},"9":{"name":"values","line":124,"loc":{"start":{"line":124,"column":43},"end":{"line":124,"column":61}}},"10":{"name":"(anonymous_10)","line":138,"loc":{"start":{"line":138,"column":62},"end":{"line":138,"column":74}}},"11":{"name":"PunktLanguageVariables","line":139,"loc":{"start":{"line":139,"column":2},"end":{"line":139,"column":36}}},"12":{"name":"tokenizeWords","line":183,"loc":{"start":{"line":183,"column":51},"end":{"line":183,"column":82}}},"13":{"name":"(anonymous_13)","line":198,"loc":{"start":{"line":198,"column":22},"end":{"line":198,"column":34}}},"14":{"name":"PunktParameters","line":199,"loc":{"start":{"line":199,"column":2},"end":{"line":199,"column":29}}},"15":{"name":"addOrthographicContext","line":228,"loc":{"start":{"line":228,"column":53},"end":{"line":228,"column":97}}},"16":{"name":"(anonymous_16)","line":257,"loc":{"start":{"line":257,"column":38},"end":{"line":257,"column":50}}},"17":{"name":"PunktToken","line":258,"loc":{"start":{"line":258,"column":2},"end":{"line":258,"column":30}}},"18":{"name":"typeNoPeriod","line":289,"loc":{"start":{"line":289,"column":38},"end":{"line":289,"column":62}}},"19":{"name":"typeNoSentencePeriod","line":302,"loc":{"start":{"line":302,"column":46},"end":{"line":302,"column":78}}},"20":{"name":"firstUpper","line":314,"loc":{"start":{"line":314,"column":36},"end":{"line":314,"column":58}}},"21":{"name":"firstLower","line":325,"loc":{"start":{"line":325,"column":36},"end":{"line":325,"column":58}}},"22":{"name":"firstCase","line":336,"loc":{"start":{"line":336,"column":35},"end":{"line":336,"column":56}}},"23":{"name":"toString","line":349,"loc":{"start":{"line":349,"column":34},"end":{"line":349,"column":54}}},"24":{"name":"(anonymous_24)","line":380,"loc":{"start":{"line":380,"column":46},"end":{"line":380,"column":58}}},"25":{"name":"PunktBaseClass","line":381,"loc":{"start":{"line":381,"column":2},"end":{"line":381,"column":35}}},"26":{"name":"tokenizeWords","line":404,"loc":{"start":{"line":404,"column":43},"end":{"line":404,"column":72}}},"27":{"name":"_annotateFirstPass","line":444,"loc":{"start":{"line":444,"column":48},"end":{"line":444,"column":84}}},"28":{"name":"dunningLogLikelihood","line":486,"loc":{"start":{"line":486,"column":0},"end":{"line":486,"column":43}}},"29":{"name":"colLogLikelihood","line":510,"loc":{"start":{"line":510,"column":0},"end":{"line":510,"column":39}}},"30":{"name":"(anonymous_30)","line":537,"loc":{"start":{"line":537,"column":42},"end":{"line":537,"column":69}}},"31":{"name":"PunktTrainer","line":540,"loc":{"start":{"line":540,"column":2},"end":{"line":540,"column":33}}},"32":{"name":"_getOrthographyData","line":600,"loc":{"start":{"line":600,"column":47},"end":{"line":600,"column":84}}},"33":{"name":"_reclassifyAbbreviationType","line":656,"loc":{"start":{"line":656,"column":55},"end":{"line":656,"column":98}}},"34":{"name":"_isRareAbbreviationType","line":713,"loc":{"start":{"line":713,"column":51},"end":{"line":713,"column":109}}},"35":{"name":"_isPotentialCollocation","line":759,"loc":{"start":{"line":759,"column":51},"end":{"line":759,"column":109}}},"36":{"name":"_findCollocations","line":770,"loc":{"start":{"line":770,"column":45},"end":{"line":770,"column":74}}},"37":{"name":"_isPotentialSentenceStarter","line":816,"loc":{"start":{"line":816,"column":55},"end":{"line":816,"column":114}}},"38":{"name":"_findSentenceStarters","line":832,"loc":{"start":{"line":832,"column":49},"end":{"line":832,"column":82}}},"39":{"name":"train","line":871,"loc":{"start":{"line":871,"column":33},"end":{"line":871,"column":54}}},"40":{"name":"finalize","line":972,"loc":{"start":{"line":972,"column":36},"end":{"line":972,"column":56}}},"41":{"name":"getParams","line":1011,"loc":{"start":{"line":1011,"column":37},"end":{"line":1011,"column":58}}},"42":{"name":"(anonymous_42)","line":1027,"loc":{"start":{"line":1027,"column":62},"end":{"line":1027,"column":90}}},"43":{"name":"PunktSentenceTokenizer","line":1030,"loc":{"start":{"line":1030,"column":2},"end":{"line":1030,"column":42}}},"44":{"name":"_orthographicHeuristic","line":1053,"loc":{"start":{"line":1053,"column":60},"end":{"line":1053,"column":99}}},"45":{"name":"_annotateSecondPass","line":1089,"loc":{"start":{"line":1089,"column":57},"end":{"line":1089,"column":94}}},"46":{"name":"_annotateTokens","line":1176,"loc":{"start":{"line":1176,"column":53},"end":{"line":1176,"column":86}}},"47":{"name":"_textContainsSentenceBreak","line":1203,"loc":{"start":{"line":1203,"column":64},"end":{"line":1203,"column":106}}},"48":{"name":"_slicesFromText","line":1225,"loc":{"start":{"line":1225,"column":53},"end":{"line":1225,"column":84}}},"49":{"name":"_realignBoundaries","line":1271,"loc":{"start":{"line":1271,"column":56},"end":{"line":1271,"column":98}}},"50":{"name":"spanTokenize","line":1311,"loc":{"start":{"line":1311,"column":50},"end":{"line":1311,"column":78}}},"51":{"name":"tokenize","line":1331,"loc":{"start":{"line":1331,"column":46},"end":{"line":1331,"column":70}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":145}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":240}},"5":{"start":{"line":10,"column":50},"end":{"line":10,"column":151}},"6":{"start":{"line":10,"column":63},"end":{"line":10,"column":149}},"7":{"start":{"line":10,"column":152},"end":{"line":10,"column":238}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":494}},"9":{"start":{"line":12,"column":43},"end":{"line":12,"column":208}},"10":{"start":{"line":12,"column":106},"end":{"line":12,"column":206}},"11":{"start":{"line":12,"column":209},"end":{"line":12,"column":373}},"12":{"start":{"line":12,"column":374},"end":{"line":12,"column":492}},"13":{"start":{"line":12,"column":390},"end":{"line":12,"column":492}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":195}},"15":{"start":{"line":14,"column":35},"end":{"line":14,"column":193}},"16":{"start":{"line":14,"column":61},"end":{"line":14,"column":145}},"17":{"start":{"line":14,"column":126},"end":{"line":14,"column":143}},"18":{"start":{"line":14,"column":146},"end":{"line":14,"column":158}},"19":{"start":{"line":14,"column":168},"end":{"line":14,"column":191}},"20":{"start":{"line":16,"column":0},"end":{"line":16,"column":153}},"21":{"start":{"line":16,"column":50},"end":{"line":16,"column":151}},"22":{"start":{"line":16,"column":92},"end":{"line":16,"column":149}},"23":{"start":{"line":46,"column":0},"end":{"line":46,"column":14}},"24":{"start":{"line":58,"column":0},"end":{"line":63,"column":26}},"25":{"start":{"line":65,"column":0},"end":{"line":66,"column":58}},"26":{"start":{"line":68,"column":0},"end":{"line":75,"column":2}},"27":{"start":{"line":83,"column":0},"end":{"line":129,"column":4}},"28":{"start":{"line":84,"column":2},"end":{"line":89,"column":3}},"29":{"start":{"line":85,"column":4},"end":{"line":85,"column":49}},"30":{"start":{"line":87,"column":4},"end":{"line":87,"column":21}},"31":{"start":{"line":88,"column":4},"end":{"line":88,"column":15}},"32":{"start":{"line":99,"column":2},"end":{"line":103,"column":4}},"33":{"start":{"line":100,"column":4},"end":{"line":100,"column":49}},"34":{"start":{"line":101,"column":4},"end":{"line":101,"column":25}},"35":{"start":{"line":102,"column":4},"end":{"line":102,"column":13}},"36":{"start":{"line":113,"column":2},"end":{"line":115,"column":4}},"37":{"start":{"line":114,"column":4},"end":{"line":114,"column":35}},"38":{"start":{"line":124,"column":2},"end":{"line":126,"column":4}},"39":{"start":{"line":125,"column":4},"end":{"line":125,"column":36}},"40":{"start":{"line":128,"column":2},"end":{"line":128,"column":31}},"41":{"start":{"line":138,"column":0},"end":{"line":188,"column":4}},"42":{"start":{"line":139,"column":2},"end":{"line":173,"column":3}},"43":{"start":{"line":140,"column":4},"end":{"line":140,"column":50}},"44":{"start":{"line":143,"column":4},"end":{"line":143,"column":48}},"45":{"start":{"line":146,"column":4},"end":{"line":146,"column":46}},"46":{"start":{"line":149,"column":4},"end":{"line":149,"column":62}},"47":{"start":{"line":152,"column":4},"end":{"line":152,"column":53}},"48":{"start":{"line":155,"column":4},"end":{"line":155,"column":59}},"49":{"start":{"line":158,"column":4},"end":{"line":158,"column":74}},"50":{"start":{"line":160,"column":4},"end":{"line":163,"column":90}},"51":{"start":{"line":165,"column":4},"end":{"line":165,"column":216}},"52":{"start":{"line":167,"column":4},"end":{"line":167,"column":65}},"53":{"start":{"line":170,"column":4},"end":{"line":170,"column":117}},"54":{"start":{"line":172,"column":4},"end":{"line":172,"column":65}},"55":{"start":{"line":183,"column":2},"end":{"line":185,"column":4}},"56":{"start":{"line":184,"column":4},"end":{"line":184,"column":46}},"57":{"start":{"line":187,"column":2},"end":{"line":187,"column":32}},"58":{"start":{"line":198,"column":0},"end":{"line":235,"column":4}},"59":{"start":{"line":199,"column":2},"end":{"line":217,"column":3}},"60":{"start":{"line":200,"column":4},"end":{"line":200,"column":43}},"61":{"start":{"line":203,"column":4},"end":{"line":203,"column":39}},"62":{"start":{"line":208,"column":4},"end":{"line":208,"column":34}},"63":{"start":{"line":212,"column":4},"end":{"line":212,"column":38}},"64":{"start":{"line":216,"column":4},"end":{"line":216,"column":34}},"65":{"start":{"line":228,"column":2},"end":{"line":232,"column":4}},"66":{"start":{"line":229,"column":4},"end":{"line":229,"column":73}},"67":{"start":{"line":230,"column":4},"end":{"line":230,"column":43}},"68":{"start":{"line":231,"column":4},"end":{"line":231,"column":16}},"69":{"start":{"line":234,"column":2},"end":{"line":234,"column":25}},"70":{"start":{"line":242,"column":0},"end":{"line":246,"column":29}},"71":{"start":{"line":257,"column":0},"end":{"line":354,"column":4}},"72":{"start":{"line":258,"column":2},"end":{"line":279,"column":3}},"73":{"start":{"line":259,"column":4},"end":{"line":259,"column":88}},"74":{"start":{"line":261,"column":4},"end":{"line":261,"column":38}},"75":{"start":{"line":264,"column":4},"end":{"line":264,"column":25}},"76":{"start":{"line":265,"column":4},"end":{"line":265,"column":57}},"77":{"start":{"line":266,"column":4},"end":{"line":266,"column":71}},"78":{"start":{"line":269,"column":4},"end":{"line":269,"column":47}},"79":{"start":{"line":270,"column":4},"end":{"line":270,"column":47}},"80":{"start":{"line":271,"column":4},"end":{"line":271,"column":45}},"81":{"start":{"line":272,"column":4},"end":{"line":272,"column":41}},"82":{"start":{"line":273,"column":4},"end":{"line":273,"column":54}},"83":{"start":{"line":274,"column":4},"end":{"line":274,"column":50}},"84":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"85":{"start":{"line":277,"column":6},"end":{"line":277,"column":26}},"86":{"start":{"line":289,"column":2},"end":{"line":292,"column":4}},"87":{"start":{"line":290,"column":4},"end":{"line":290,"column":91}},"88":{"start":{"line":290,"column":61},"end":{"line":290,"column":91}},"89":{"start":{"line":291,"column":4},"end":{"line":291,"column":21}},"90":{"start":{"line":302,"column":2},"end":{"line":305,"column":4}},"91":{"start":{"line":303,"column":4},"end":{"line":303,"column":55}},"92":{"start":{"line":303,"column":28},"end":{"line":303,"column":55}},"93":{"start":{"line":304,"column":4},"end":{"line":304,"column":21}},"94":{"start":{"line":314,"column":2},"end":{"line":316,"column":4}},"95":{"start":{"line":315,"column":4},"end":{"line":315,"column":82}},"96":{"start":{"line":325,"column":2},"end":{"line":327,"column":4}},"97":{"start":{"line":326,"column":4},"end":{"line":326,"column":82}},"98":{"start":{"line":336,"column":2},"end":{"line":340,"column":4}},"99":{"start":{"line":337,"column":4},"end":{"line":337,"column":42}},"100":{"start":{"line":337,"column":27},"end":{"line":337,"column":42}},"101":{"start":{"line":338,"column":4},"end":{"line":338,"column":42}},"102":{"start":{"line":338,"column":27},"end":{"line":338,"column":42}},"103":{"start":{"line":339,"column":4},"end":{"line":339,"column":18}},"104":{"start":{"line":349,"column":2},"end":{"line":351,"column":4}},"105":{"start":{"line":350,"column":4},"end":{"line":350,"column":23}},"106":{"start":{"line":353,"column":2},"end":{"line":353,"column":20}},"107":{"start":{"line":361,"column":0},"end":{"line":369,"column":36}},"108":{"start":{"line":380,"column":0},"end":{"line":468,"column":4}},"109":{"start":{"line":381,"column":2},"end":{"line":392,"column":3}},"110":{"start":{"line":382,"column":4},"end":{"line":382,"column":42}},"111":{"start":{"line":384,"column":4},"end":{"line":388,"column":81}},"112":{"start":{"line":390,"column":4},"end":{"line":390,"column":25}},"113":{"start":{"line":391,"column":4},"end":{"line":391,"column":21}},"114":{"start":{"line":404,"column":2},"end":{"line":429,"column":4}},"115":{"start":{"line":405,"column":4},"end":{"line":405,"column":31}},"116":{"start":{"line":407,"column":4},"end":{"line":408,"column":20}},"117":{"start":{"line":410,"column":4},"end":{"line":426,"column":5}},"118":{"start":{"line":411,"column":6},"end":{"line":411,"column":33}},"119":{"start":{"line":413,"column":6},"end":{"line":425,"column":7}},"120":{"start":{"line":414,"column":8},"end":{"line":414,"column":50}},"121":{"start":{"line":416,"column":8},"end":{"line":416,"column":99}},"122":{"start":{"line":418,"column":8},"end":{"line":418,"column":31}},"123":{"start":{"line":420,"column":8},"end":{"line":422,"column":9}},"124":{"start":{"line":421,"column":10},"end":{"line":421,"column":48}},"125":{"start":{"line":424,"column":8},"end":{"line":424,"column":30}},"126":{"start":{"line":428,"column":4},"end":{"line":428,"column":18}},"127":{"start":{"line":444,"column":2},"end":{"line":465,"column":4}},"128":{"start":{"line":445,"column":4},"end":{"line":462,"column":5}},"129":{"start":{"line":446,"column":6},"end":{"line":447,"column":32}},"130":{"start":{"line":449,"column":6},"end":{"line":461,"column":7}},"131":{"start":{"line":450,"column":8},"end":{"line":450,"column":35}},"132":{"start":{"line":451,"column":13},"end":{"line":461,"column":7}},"133":{"start":{"line":452,"column":8},"end":{"line":452,"column":30}},"134":{"start":{"line":453,"column":13},"end":{"line":461,"column":7}},"135":{"start":{"line":454,"column":8},"end":{"line":454,"column":50}},"136":{"start":{"line":456,"column":8},"end":{"line":460,"column":9}},"137":{"start":{"line":457,"column":10},"end":{"line":457,"column":36}},"138":{"start":{"line":459,"column":10},"end":{"line":459,"column":37}},"139":{"start":{"line":464,"column":4},"end":{"line":464,"column":16}},"140":{"start":{"line":467,"column":2},"end":{"line":467,"column":24}},"141":{"start":{"line":486,"column":0},"end":{"line":496,"column":1}},"142":{"start":{"line":487,"column":2},"end":{"line":488,"column":16}},"143":{"start":{"line":490,"column":2},"end":{"line":491,"column":79}},"144":{"start":{"line":493,"column":2},"end":{"line":493,"column":59}},"145":{"start":{"line":495,"column":2},"end":{"line":495,"column":25}},"146":{"start":{"line":510,"column":0},"end":{"line":527,"column":1}},"147":{"start":{"line":511,"column":2},"end":{"line":513,"column":30}},"148":{"start":{"line":515,"column":2},"end":{"line":516,"column":77}},"149":{"start":{"line":518,"column":2},"end":{"line":518,"column":19}},"150":{"start":{"line":519,"column":2},"end":{"line":519,"column":75}},"151":{"start":{"line":519,"column":16},"end":{"line":519,"column":75}},"152":{"start":{"line":521,"column":2},"end":{"line":521,"column":19}},"153":{"start":{"line":522,"column":2},"end":{"line":522,"column":89}},"154":{"start":{"line":522,"column":16},"end":{"line":522,"column":89}},"155":{"start":{"line":524,"column":2},"end":{"line":524,"column":61}},"156":{"start":{"line":526,"column":2},"end":{"line":526,"column":25}},"157":{"start":{"line":537,"column":0},"end":{"line":1017,"column":18}},"158":{"start":{"line":538,"column":2},"end":{"line":538,"column":43}},"159":{"start":{"line":540,"column":2},"end":{"line":576,"column":3}},"160":{"start":{"line":541,"column":4},"end":{"line":541,"column":40}},"161":{"start":{"line":543,"column":4},"end":{"line":545,"column":70}},"162":{"start":{"line":548,"column":4},"end":{"line":548,"column":86}},"163":{"start":{"line":550,"column":4},"end":{"line":550,"column":28}},"164":{"start":{"line":554,"column":4},"end":{"line":554,"column":50}},"165":{"start":{"line":557,"column":4},"end":{"line":557,"column":31}},"166":{"start":{"line":561,"column":4},"end":{"line":561,"column":57}},"167":{"start":{"line":565,"column":4},"end":{"line":565,"column":61}},"168":{"start":{"line":569,"column":4},"end":{"line":569,"column":33}},"169":{"start":{"line":574,"column":4},"end":{"line":574,"column":27}},"170":{"start":{"line":575,"column":4},"end":{"line":575,"column":17}},"171":{"start":{"line":600,"column":2},"end":{"line":633,"column":4}},"172":{"start":{"line":601,"column":4},"end":{"line":601,"column":29}},"173":{"start":{"line":603,"column":4},"end":{"line":632,"column":5}},"174":{"start":{"line":604,"column":6},"end":{"line":604,"column":28}},"175":{"start":{"line":609,"column":6},"end":{"line":609,"column":77}},"176":{"start":{"line":609,"column":57},"end":{"line":609,"column":77}},"177":{"start":{"line":613,"column":6},"end":{"line":613,"column":73}},"178":{"start":{"line":613,"column":53},"end":{"line":613,"column":73}},"179":{"start":{"line":617,"column":6},"end":{"line":617,"column":46}},"180":{"start":{"line":620,"column":6},"end":{"line":620,"column":70}},"181":{"start":{"line":622,"column":6},"end":{"line":622,"column":63}},"182":{"start":{"line":622,"column":16},"end":{"line":622,"column":63}},"183":{"start":{"line":625,"column":6},"end":{"line":631,"column":7}},"184":{"start":{"line":626,"column":8},"end":{"line":626,"column":95}},"185":{"start":{"line":626,"column":50},"end":{"line":626,"column":70}},"186":{"start":{"line":626,"column":75},"end":{"line":626,"column":95}},"187":{"start":{"line":627,"column":13},"end":{"line":631,"column":7}},"188":{"start":{"line":628,"column":8},"end":{"line":628,"column":28}},"189":{"start":{"line":630,"column":8},"end":{"line":630,"column":29}},"190":{"start":{"line":656,"column":2},"end":{"line":696,"column":4}},"191":{"start":{"line":657,"column":4},"end":{"line":657,"column":23}},"192":{"start":{"line":661,"column":4},"end":{"line":661,"column":72}},"193":{"start":{"line":661,"column":60},"end":{"line":661,"column":72}},"194":{"start":{"line":663,"column":4},"end":{"line":670,"column":5}},"195":{"start":{"line":664,"column":6},"end":{"line":664,"column":63}},"196":{"start":{"line":664,"column":51},"end":{"line":664,"column":63}},"197":{"start":{"line":665,"column":6},"end":{"line":665,"column":31}},"198":{"start":{"line":666,"column":6},"end":{"line":666,"column":19}},"199":{"start":{"line":668,"column":6},"end":{"line":668,"column":64}},"200":{"start":{"line":668,"column":52},"end":{"line":668,"column":64}},"201":{"start":{"line":669,"column":6},"end":{"line":669,"column":20}},"202":{"start":{"line":673,"column":4},"end":{"line":674,"column":57}},"203":{"start":{"line":680,"column":4},"end":{"line":681,"column":54}},"204":{"start":{"line":683,"column":4},"end":{"line":683,"column":130}},"205":{"start":{"line":689,"column":4},"end":{"line":691,"column":115}},"206":{"start":{"line":693,"column":4},"end":{"line":693,"column":51}},"207":{"start":{"line":695,"column":4},"end":{"line":695,"column":32}},"208":{"start":{"line":713,"column":2},"end":{"line":742,"column":4}},"209":{"start":{"line":714,"column":4},"end":{"line":714,"column":79}},"210":{"start":{"line":714,"column":66},"end":{"line":714,"column":79}},"211":{"start":{"line":718,"column":4},"end":{"line":718,"column":51}},"212":{"start":{"line":722,"column":4},"end":{"line":722,"column":81}},"213":{"start":{"line":724,"column":4},"end":{"line":724,"column":89}},"214":{"start":{"line":724,"column":76},"end":{"line":724,"column":89}},"215":{"start":{"line":728,"column":4},"end":{"line":739,"column":7}},"216":{"start":{"line":728,"column":64},"end":{"line":728,"column":76}},"217":{"start":{"line":734,"column":9},"end":{"line":739,"column":7}},"218":{"start":{"line":735,"column":8},"end":{"line":736,"column":64}},"219":{"start":{"line":738,"column":8},"end":{"line":738,"column":77}},"220":{"start":{"line":738,"column":65},"end":{"line":738,"column":77}},"221":{"start":{"line":741,"column":4},"end":{"line":741,"column":17}},"222":{"start":{"line":759,"column":2},"end":{"line":761,"column":4}},"223":{"start":{"line":760,"column":4},"end":{"line":760,"column":226}},"224":{"start":{"line":770,"column":2},"end":{"line":799,"column":4}},"225":{"start":{"line":771,"column":4},"end":{"line":772,"column":21}},"226":{"start":{"line":774,"column":4},"end":{"line":796,"column":5}},"227":{"start":{"line":775,"column":6},"end":{"line":775,"column":26}},"228":{"start":{"line":780,"column":6},"end":{"line":782,"column":33}},"229":{"start":{"line":784,"column":6},"end":{"line":784,"column":60}},"230":{"start":{"line":784,"column":51},"end":{"line":784,"column":60}},"231":{"start":{"line":786,"column":6},"end":{"line":788,"column":83}},"232":{"start":{"line":790,"column":6},"end":{"line":795,"column":7}},"233":{"start":{"line":792,"column":8},"end":{"line":792,"column":86}},"234":{"start":{"line":794,"column":8},"end":{"line":794,"column":113}},"235":{"start":{"line":794,"column":88},"end":{"line":794,"column":113}},"236":{"start":{"line":798,"column":4},"end":{"line":798,"column":19}},"237":{"start":{"line":816,"column":2},"end":{"line":822,"column":4}},"238":{"start":{"line":821,"column":4},"end":{"line":821,"column":112}},"239":{"start":{"line":832,"column":2},"end":{"line":855,"column":4}},"240":{"start":{"line":833,"column":4},"end":{"line":834,"column":21}},"241":{"start":{"line":836,"column":4},"end":{"line":852,"column":5}},"242":{"start":{"line":837,"column":6},"end":{"line":837,"column":26}},"243":{"start":{"line":839,"column":6},"end":{"line":839,"column":26}},"244":{"start":{"line":839,"column":17},"end":{"line":839,"column":26}},"245":{"start":{"line":841,"column":6},"end":{"line":842,"column":47}},"246":{"start":{"line":845,"column":6},"end":{"line":845,"column":49}},"247":{"start":{"line":845,"column":40},"end":{"line":845,"column":49}},"248":{"start":{"line":847,"column":6},"end":{"line":847,"column":104}},"249":{"start":{"line":849,"column":6},"end":{"line":851,"column":7}},"250":{"start":{"line":850,"column":8},"end":{"line":850,"column":33}},"251":{"start":{"line":854,"column":4},"end":{"line":854,"column":19}},"252":{"start":{"line":871,"column":2},"end":{"line":962,"column":4}},"253":{"start":{"line":872,"column":4},"end":{"line":872,"column":92}},"254":{"start":{"line":876,"column":4},"end":{"line":876,"column":42}},"255":{"start":{"line":878,"column":4},"end":{"line":878,"column":27}},"256":{"start":{"line":882,"column":4},"end":{"line":889,"column":5}},"257":{"start":{"line":883,"column":6},"end":{"line":884,"column":28}},"258":{"start":{"line":886,"column":6},"end":{"line":886,"column":31}},"259":{"start":{"line":888,"column":6},"end":{"line":888,"column":53}},"260":{"start":{"line":888,"column":29},"end":{"line":888,"column":53}},"261":{"start":{"line":892,"column":4},"end":{"line":892,"column":46}},"262":{"start":{"line":894,"column":4},"end":{"line":917,"column":5}},"263":{"start":{"line":895,"column":6},"end":{"line":895,"column":69}},"264":{"start":{"line":897,"column":6},"end":{"line":897,"column":28}},"265":{"start":{"line":897,"column":19},"end":{"line":897,"column":28}},"266":{"start":{"line":899,"column":6},"end":{"line":901,"column":28}},"267":{"start":{"line":904,"column":6},"end":{"line":916,"column":7}},"268":{"start":{"line":905,"column":8},"end":{"line":909,"column":9}},"269":{"start":{"line":906,"column":10},"end":{"line":906,"column":58}},"270":{"start":{"line":908,"column":10},"end":{"line":908,"column":95}},"271":{"start":{"line":908,"column":28},"end":{"line":908,"column":95}},"272":{"start":{"line":911,"column":8},"end":{"line":915,"column":9}},"273":{"start":{"line":912,"column":10},"end":{"line":912,"column":61}},"274":{"start":{"line":914,"column":10},"end":{"line":914,"column":95}},"275":{"start":{"line":914,"column":28},"end":{"line":914,"column":95}},"276":{"start":{"line":921,"column":4},"end":{"line":921,"column":36}},"277":{"start":{"line":925,"column":4},"end":{"line":925,"column":37}},"278":{"start":{"line":928,"column":4},"end":{"line":930,"column":5}},"279":{"start":{"line":929,"column":6},"end":{"line":929,"column":63}},"280":{"start":{"line":929,"column":37},"end":{"line":929,"column":63}},"281":{"start":{"line":934,"column":4},"end":{"line":956,"column":5}},"282":{"start":{"line":935,"column":6},"end":{"line":936,"column":38}},"283":{"start":{"line":938,"column":6},"end":{"line":938,"column":60}},"284":{"start":{"line":938,"column":51},"end":{"line":938,"column":60}},"285":{"start":{"line":941,"column":6},"end":{"line":945,"column":7}},"286":{"start":{"line":942,"column":8},"end":{"line":942,"column":71}},"287":{"start":{"line":944,"column":8},"end":{"line":944,"column":81}},"288":{"start":{"line":944,"column":26},"end":{"line":944,"column":81}},"289":{"start":{"line":948,"column":6},"end":{"line":948,"column":115}},"290":{"start":{"line":948,"column":69},"end":{"line":948,"column":115}},"291":{"start":{"line":951,"column":6},"end":{"line":955,"column":7}},"292":{"start":{"line":952,"column":8},"end":{"line":952,"column":101}},"293":{"start":{"line":954,"column":8},"end":{"line":954,"column":48}},"294":{"start":{"line":959,"column":4},"end":{"line":959,"column":34}},"295":{"start":{"line":959,"column":18},"end":{"line":959,"column":34}},"296":{"start":{"line":961,"column":4},"end":{"line":961,"column":16}},"297":{"start":{"line":972,"column":2},"end":{"line":1002,"column":4}},"298":{"start":{"line":973,"column":4},"end":{"line":973,"column":41}},"299":{"start":{"line":974,"column":4},"end":{"line":974,"column":56}},"300":{"start":{"line":976,"column":4},"end":{"line":984,"column":5}},"301":{"start":{"line":977,"column":6},"end":{"line":979,"column":38}},"302":{"start":{"line":981,"column":6},"end":{"line":981,"column":45}},"303":{"start":{"line":983,"column":6},"end":{"line":983,"column":78}},"304":{"start":{"line":983,"column":24},"end":{"line":983,"column":78}},"305":{"start":{"line":986,"column":4},"end":{"line":986,"column":37}},"306":{"start":{"line":987,"column":4},"end":{"line":987,"column":48}},"307":{"start":{"line":989,"column":4},"end":{"line":998,"column":5}},"308":{"start":{"line":990,"column":6},"end":{"line":992,"column":35}},"309":{"start":{"line":995,"column":6},"end":{"line":995,"column":41}},"310":{"start":{"line":997,"column":6},"end":{"line":997,"column":102}},"311":{"start":{"line":997,"column":24},"end":{"line":997,"column":102}},"312":{"start":{"line":1000,"column":4},"end":{"line":1000,"column":26}},"313":{"start":{"line":1001,"column":4},"end":{"line":1001,"column":16}},"314":{"start":{"line":1011,"column":2},"end":{"line":1014,"column":4}},"315":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":41}},"316":{"start":{"line":1012,"column":25},"end":{"line":1012,"column":41}},"317":{"start":{"line":1013,"column":4},"end":{"line":1013,"column":23}},"318":{"start":{"line":1016,"column":2},"end":{"line":1016,"column":22}},"319":{"start":{"line":1027,"column":0},"end":{"line":1343,"column":18}},"320":{"start":{"line":1028,"column":2},"end":{"line":1028,"column":54}},"321":{"start":{"line":1030,"column":2},"end":{"line":1037,"column":3}},"322":{"start":{"line":1031,"column":4},"end":{"line":1031,"column":50}},"323":{"start":{"line":1033,"column":4},"end":{"line":1033,"column":79}},"324":{"start":{"line":1035,"column":4},"end":{"line":1035,"column":27}},"325":{"start":{"line":1036,"column":4},"end":{"line":1036,"column":18}},"326":{"start":{"line":1053,"column":2},"end":{"line":1076,"column":4}},"327":{"start":{"line":1056,"column":4},"end":{"line":1056,"column":52}},"328":{"start":{"line":1056,"column":39},"end":{"line":1056,"column":52}},"329":{"start":{"line":1058,"column":4},"end":{"line":1058,"column":80}},"330":{"start":{"line":1063,"column":4},"end":{"line":1065,"column":5}},"331":{"start":{"line":1064,"column":6},"end":{"line":1064,"column":18}},"332":{"start":{"line":1070,"column":4},"end":{"line":1072,"column":5}},"333":{"start":{"line":1071,"column":6},"end":{"line":1071,"column":19}},"334":{"start":{"line":1075,"column":4},"end":{"line":1075,"column":21}},"335":{"start":{"line":1089,"column":2},"end":{"line":1164,"column":4}},"336":{"start":{"line":1091,"column":4},"end":{"line":1163,"column":5}},"337":{"start":{"line":1092,"column":6},"end":{"line":1093,"column":36}},"338":{"start":{"line":1096,"column":6},"end":{"line":1096,"column":29}},"339":{"start":{"line":1096,"column":22},"end":{"line":1096,"column":29}},"340":{"start":{"line":1099,"column":6},"end":{"line":1099,"column":46}},"341":{"start":{"line":1099,"column":37},"end":{"line":1099,"column":46}},"342":{"start":{"line":1101,"column":6},"end":{"line":1103,"column":50}},"343":{"start":{"line":1110,"column":6},"end":{"line":1110,"column":51}},"344":{"start":{"line":1111,"column":6},"end":{"line":1115,"column":7}},"345":{"start":{"line":1112,"column":8},"end":{"line":1112,"column":43}},"346":{"start":{"line":1113,"column":8},"end":{"line":1113,"column":41}},"347":{"start":{"line":1114,"column":8},"end":{"line":1114,"column":17}},"348":{"start":{"line":1120,"column":6},"end":{"line":1138,"column":7}},"349":{"start":{"line":1124,"column":8},"end":{"line":1124,"column":71}},"350":{"start":{"line":1126,"column":8},"end":{"line":1129,"column":9}},"351":{"start":{"line":1127,"column":10},"end":{"line":1127,"column":44}},"352":{"start":{"line":1128,"column":10},"end":{"line":1128,"column":19}},"353":{"start":{"line":1134,"column":8},"end":{"line":1137,"column":9}},"354":{"start":{"line":1135,"column":10},"end":{"line":1135,"column":44}},"355":{"start":{"line":1136,"column":10},"end":{"line":1136,"column":19}},"356":{"start":{"line":1143,"column":6},"end":{"line":1162,"column":7}},"357":{"start":{"line":1147,"column":8},"end":{"line":1147,"column":72}},"358":{"start":{"line":1149,"column":8},"end":{"line":1153,"column":9}},"359":{"start":{"line":1150,"column":10},"end":{"line":1150,"column":45}},"360":{"start":{"line":1151,"column":10},"end":{"line":1151,"column":43}},"361":{"start":{"line":1152,"column":10},"end":{"line":1152,"column":19}},"362":{"start":{"line":1158,"column":8},"end":{"line":1161,"column":9}},"363":{"start":{"line":1159,"column":10},"end":{"line":1159,"column":45}},"364":{"start":{"line":1160,"column":10},"end":{"line":1160,"column":43}},"365":{"start":{"line":1176,"column":2},"end":{"line":1188,"column":4}},"366":{"start":{"line":1180,"column":4},"end":{"line":1180,"column":36}},"367":{"start":{"line":1185,"column":4},"end":{"line":1185,"column":37}},"368":{"start":{"line":1187,"column":4},"end":{"line":1187,"column":16}},"369":{"start":{"line":1203,"column":2},"end":{"line":1215,"column":4}},"370":{"start":{"line":1204,"column":4},"end":{"line":1204,"column":42}},"371":{"start":{"line":1207,"column":4},"end":{"line":1207,"column":33}},"372":{"start":{"line":1210,"column":4},"end":{"line":1212,"column":5}},"373":{"start":{"line":1211,"column":6},"end":{"line":1211,"column":47}},"374":{"start":{"line":1211,"column":35},"end":{"line":1211,"column":47}},"375":{"start":{"line":1214,"column":4},"end":{"line":1214,"column":17}},"376":{"start":{"line":1225,"column":2},"end":{"line":1256,"column":4}},"377":{"start":{"line":1226,"column":4},"end":{"line":1227,"column":73}},"378":{"start":{"line":1229,"column":4},"end":{"line":1229,"column":22}},"379":{"start":{"line":1231,"column":4},"end":{"line":1250,"column":5}},"380":{"start":{"line":1232,"column":6},"end":{"line":1235,"column":42}},"381":{"start":{"line":1237,"column":6},"end":{"line":1249,"column":7}},"382":{"start":{"line":1238,"column":8},"end":{"line":1238,"column":64}},"383":{"start":{"line":1240,"column":8},"end":{"line":1248,"column":9}},"384":{"start":{"line":1243,"column":10},"end":{"line":1243,"column":56}},"385":{"start":{"line":1247,"column":10},"end":{"line":1247,"column":52}},"386":{"start":{"line":1253,"column":4},"end":{"line":1253,"column":42}},"387":{"start":{"line":1255,"column":4},"end":{"line":1255,"column":18}},"388":{"start":{"line":1271,"column":2},"end":{"line":1299,"column":4}},"389":{"start":{"line":1272,"column":4},"end":{"line":1272,"column":23}},"390":{"start":{"line":1274,"column":4},"end":{"line":1274,"column":20}},"391":{"start":{"line":1276,"column":4},"end":{"line":1296,"column":5}},"392":{"start":{"line":1277,"column":6},"end":{"line":1278,"column":33}},"393":{"start":{"line":1280,"column":6},"end":{"line":1280,"column":60}},"394":{"start":{"line":1282,"column":6},"end":{"line":1285,"column":7}},"395":{"start":{"line":1283,"column":8},"end":{"line":1283,"column":87}},"396":{"start":{"line":1283,"column":56},"end":{"line":1283,"column":87}},"397":{"start":{"line":1284,"column":8},"end":{"line":1284,"column":17}},"398":{"start":{"line":1287,"column":6},"end":{"line":1287,"column":112}},"399":{"start":{"line":1289,"column":6},"end":{"line":1295,"column":7}},"400":{"start":{"line":1290,"column":8},"end":{"line":1290,"column":94}},"401":{"start":{"line":1291,"column":8},"end":{"line":1291,"column":48}},"402":{"start":{"line":1293,"column":8},"end":{"line":1293,"column":20}},"403":{"start":{"line":1294,"column":8},"end":{"line":1294,"column":87}},"404":{"start":{"line":1294,"column":56},"end":{"line":1294,"column":87}},"405":{"start":{"line":1298,"column":4},"end":{"line":1298,"column":21}},"406":{"start":{"line":1311,"column":2},"end":{"line":1319,"column":4}},"407":{"start":{"line":1312,"column":4},"end":{"line":1312,"column":101}},"408":{"start":{"line":1314,"column":4},"end":{"line":1314,"column":44}},"409":{"start":{"line":1316,"column":4},"end":{"line":1316,"column":74}},"410":{"start":{"line":1316,"column":27},"end":{"line":1316,"column":74}},"411":{"start":{"line":1318,"column":4},"end":{"line":1318,"column":18}},"412":{"start":{"line":1331,"column":2},"end":{"line":1340,"column":4}},"413":{"start":{"line":1332,"column":4},"end":{"line":1332,"column":101}},"414":{"start":{"line":1334,"column":4},"end":{"line":1335,"column":23}},"415":{"start":{"line":1337,"column":4},"end":{"line":1339,"column":5}},"416":{"start":{"line":1338,"column":6},"end":{"line":1338,"column":79}},"417":{"start":{"line":1339,"column":5},"end":{"line":1339,"column":22}},"418":{"start":{"line":1342,"column":2},"end":{"line":1342,"column":32}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":50},"end":{"line":10,"column":50}},{"start":{"line":10,"column":50},"end":{"line":10,"column":50}}]},"2":{"line":10,"type":"cond-expr","locations":[{"start":{"line":10,"column":226},"end":{"line":10,"column":230}},{"start":{"line":10,"column":233},"end":{"line":10,"column":237}}]},"3":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":159},"end":{"line":10,"column":163}},{"start":{"line":10,"column":168},"end":{"line":10,"column":192}},{"start":{"line":10,"column":196},"end":{"line":10,"column":222}}]},"4":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":43},"end":{"line":12,"column":43}},{"start":{"line":12,"column":43},"end":{"line":12,"column":43}}]},"5":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":47},"end":{"line":12,"column":79}},{"start":{"line":12,"column":83},"end":{"line":12,"column":102}}]},"6":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":244},"end":{"line":12,"column":254}},{"start":{"line":12,"column":258},"end":{"line":12,"column":278}}]},"7":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":374},"end":{"line":12,"column":374}},{"start":{"line":12,"column":374},"end":{"line":12,"column":374}}]},"8":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":414},"end":{"line":12,"column":457}},{"start":{"line":12,"column":460},"end":{"line":12,"column":491}}]},"9":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":35},"end":{"line":14,"column":35}},{"start":{"line":14,"column":35},"end":{"line":14,"column":35}}]},"10":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":50},"end":{"line":16,"column":50}},{"start":{"line":16,"column":50},"end":{"line":16,"column":50}}]},"11":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":25},"end":{"line":100,"column":43}},{"start":{"line":100,"column":47},"end":{"line":100,"column":48}}]},"12":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":11},"end":{"line":114,"column":29}},{"start":{"line":114,"column":33},"end":{"line":114,"column":34}}]},"13":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":37},"end":{"line":229,"column":67}},{"start":{"line":229,"column":71},"end":{"line":229,"column":72}}]},"14":{"line":259,"type":"cond-expr","locations":[{"start":{"line":259,"column":70},"end":{"line":259,"column":82}},{"start":{"line":259,"column":85},"end":{"line":259,"column":87}}]},"15":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":17},"end":{"line":259,"column":37}},{"start":{"line":259,"column":41},"end":{"line":259,"column":67}}]},"16":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]},"17":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":8},"end":{"line":290,"column":28}},{"start":{"line":290,"column":32},"end":{"line":290,"column":59}}]},"18":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":4}},{"start":{"line":303,"column":4},"end":{"line":303,"column":4}}]},"19":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":11},"end":{"line":315,"column":30}},{"start":{"line":315,"column":34},"end":{"line":315,"column":81}}]},"20":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":11},"end":{"line":326,"column":30}},{"start":{"line":326,"column":34},"end":{"line":326,"column":81}}]},"21":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":4},"end":{"line":337,"column":4}},{"start":{"line":337,"column":4},"end":{"line":337,"column":4}}]},"22":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":4},"end":{"line":338,"column":4}},{"start":{"line":338,"column":4},"end":{"line":338,"column":4}}]},"23":{"line":384,"type":"binary-expr","locations":[{"start":{"line":384,"column":15},"end":{"line":384,"column":22}},{"start":{"line":384,"column":26},"end":{"line":384,"column":28}}]},"24":{"line":386,"type":"cond-expr","locations":[{"start":{"line":386,"column":41},"end":{"line":386,"column":69}},{"start":{"line":386,"column":72},"end":{"line":386,"column":81}}]},"25":{"line":388,"type":"cond-expr","locations":[{"start":{"line":388,"column":45},"end":{"line":388,"column":66}},{"start":{"line":388,"column":69},"end":{"line":388,"column":80}}]},"26":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":6},"end":{"line":413,"column":6}},{"start":{"line":413,"column":6},"end":{"line":413,"column":6}}]},"27":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":6},"end":{"line":449,"column":6}},{"start":{"line":449,"column":6},"end":{"line":449,"column":6}}]},"28":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":13},"end":{"line":451,"column":13}},{"start":{"line":451,"column":13},"end":{"line":451,"column":13}}]},"29":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":13},"end":{"line":453,"column":13}},{"start":{"line":453,"column":13},"end":{"line":453,"column":13}}]},"30":{"line":453,"type":"binary-expr","locations":[{"start":{"line":453,"column":17},"end":{"line":453,"column":34}},{"start":{"line":453,"column":38},"end":{"line":453,"column":60}}]},"31":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":8},"end":{"line":456,"column":8}},{"start":{"line":456,"column":8},"end":{"line":456,"column":8}}]},"32":{"line":456,"type":"binary-expr","locations":[{"start":{"line":456,"column":12},"end":{"line":456,"column":48}},{"start":{"line":456,"column":52},"end":{"line":456,"column":112}}]},"33":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":2},"end":{"line":519,"column":2}},{"start":{"line":519,"column":2},"end":{"line":519,"column":2}}]},"34":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":2},"end":{"line":522,"column":2}},{"start":{"line":522,"column":2},"end":{"line":522,"column":2}}]},"35":{"line":543,"type":"binary-expr","locations":[{"start":{"line":543,"column":16},"end":{"line":543,"column":23}},{"start":{"line":543,"column":27},"end":{"line":543,"column":29}}]},"36":{"line":545,"type":"cond-expr","locations":[{"start":{"line":545,"column":48},"end":{"line":545,"column":53}},{"start":{"line":545,"column":56},"end":{"line":545,"column":69}}]},"37":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":6},"end":{"line":609,"column":6}},{"start":{"line":609,"column":6},"end":{"line":609,"column":6}}]},"38":{"line":609,"type":"binary-expr","locations":[{"start":{"line":609,"column":10},"end":{"line":609,"column":30}},{"start":{"line":609,"column":34},"end":{"line":609,"column":55}}]},"39":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":6},"end":{"line":613,"column":6}},{"start":{"line":613,"column":6},"end":{"line":613,"column":6}}]},"40":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":10},"end":{"line":613,"column":25}},{"start":{"line":613,"column":29},"end":{"line":613,"column":51}}]},"41":{"line":620,"type":"binary-expr","locations":[{"start":{"line":620,"column":17},"end":{"line":620,"column":64}},{"start":{"line":620,"column":68},"end":{"line":620,"column":69}}]},"42":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":6},"end":{"line":622,"column":6}},{"start":{"line":622,"column":6},"end":{"line":622,"column":6}}]},"43":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":6},"end":{"line":625,"column":6}},{"start":{"line":625,"column":6},"end":{"line":625,"column":6}}]},"44":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":8},"end":{"line":626,"column":8}},{"start":{"line":626,"column":8},"end":{"line":626,"column":8}}]},"45":{"line":626,"type":"binary-expr","locations":[{"start":{"line":626,"column":14},"end":{"line":626,"column":28}},{"start":{"line":626,"column":32},"end":{"line":626,"column":47}}]},"46":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":13},"end":{"line":627,"column":13}},{"start":{"line":627,"column":13},"end":{"line":627,"column":13}}]},"47":{"line":627,"type":"binary-expr","locations":[{"start":{"line":627,"column":17},"end":{"line":627,"column":31}},{"start":{"line":627,"column":35},"end":{"line":627,"column":53}}]},"48":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":4},"end":{"line":661,"column":4}},{"start":{"line":661,"column":4},"end":{"line":661,"column":4}}]},"49":{"line":661,"type":"binary-expr","locations":[{"start":{"line":661,"column":8},"end":{"line":661,"column":30}},{"start":{"line":661,"column":34},"end":{"line":661,"column":58}}]},"50":{"line":663,"type":"if","locations":[{"start":{"line":663,"column":4},"end":{"line":663,"column":4}},{"start":{"line":663,"column":4},"end":{"line":663,"column":4}}]},"51":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":6},"end":{"line":664,"column":6}},{"start":{"line":664,"column":6},"end":{"line":664,"column":6}}]},"52":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":6},"end":{"line":668,"column":6}},{"start":{"line":668,"column":6},"end":{"line":668,"column":6}}]},"53":{"line":673,"type":"binary-expr","locations":[{"start":{"line":673,"column":24},"end":{"line":673,"column":41}},{"start":{"line":673,"column":45},"end":{"line":673,"column":47}}]},"54":{"line":691,"type":"cond-expr","locations":[{"start":{"line":691,"column":44},"end":{"line":691,"column":90}},{"start":{"line":691,"column":93},"end":{"line":691,"column":114}}]},"55":{"line":714,"type":"if","locations":[{"start":{"line":714,"column":4},"end":{"line":714,"column":4}},{"start":{"line":714,"column":4},"end":{"line":714,"column":4}}]},"56":{"line":714,"type":"binary-expr","locations":[{"start":{"line":714,"column":8},"end":{"line":714,"column":33}},{"start":{"line":714,"column":37},"end":{"line":714,"column":64}}]},"57":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":4},"end":{"line":724,"column":4}},{"start":{"line":724,"column":4},"end":{"line":724,"column":4}}]},"58":{"line":724,"type":"binary-expr","locations":[{"start":{"line":724,"column":8},"end":{"line":724,"column":47}},{"start":{"line":724,"column":51},"end":{"line":724,"column":74}}]},"59":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":4},"end":{"line":728,"column":4}},{"start":{"line":728,"column":4},"end":{"line":728,"column":4}}]},"60":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":9},"end":{"line":734,"column":9}},{"start":{"line":734,"column":9},"end":{"line":734,"column":9}}]},"61":{"line":738,"type":"if","locations":[{"start":{"line":738,"column":8},"end":{"line":738,"column":8}},{"start":{"line":738,"column":8},"end":{"line":738,"column":8}}]},"62":{"line":738,"type":"binary-expr","locations":[{"start":{"line":738,"column":12},"end":{"line":738,"column":34}},{"start":{"line":738,"column":38},"end":{"line":738,"column":63}}]},"63":{"line":760,"type":"binary-expr","locations":[{"start":{"line":760,"column":12},"end":{"line":760,"column":31}},{"start":{"line":760,"column":35},"end":{"line":760,"column":57}},{"start":{"line":760,"column":61},"end":{"line":760,"column":84}},{"start":{"line":760,"column":88},"end":{"line":760,"column":112}},{"start":{"line":760,"column":117},"end":{"line":760,"column":136}},{"start":{"line":760,"column":140},"end":{"line":760,"column":160}},{"start":{"line":760,"column":166},"end":{"line":760,"column":193}},{"start":{"line":760,"column":197},"end":{"line":760,"column":225}}]},"64":{"line":784,"type":"if","locations":[{"start":{"line":784,"column":6},"end":{"line":784,"column":6}},{"start":{"line":784,"column":6},"end":{"line":784,"column":6}}]},"65":{"line":790,"type":"if","locations":[{"start":{"line":790,"column":6},"end":{"line":790,"column":6}},{"start":{"line":790,"column":6},"end":{"line":790,"column":6}}]},"66":{"line":790,"type":"binary-expr","locations":[{"start":{"line":790,"column":10},"end":{"line":790,"column":24}},{"start":{"line":790,"column":28},"end":{"line":790,"column":42}},{"start":{"line":790,"column":46},"end":{"line":790,"column":72}},{"start":{"line":790,"column":76},"end":{"line":790,"column":120}}]},"67":{"line":794,"type":"if","locations":[{"start":{"line":794,"column":8},"end":{"line":794,"column":8}},{"start":{"line":794,"column":8},"end":{"line":794,"column":8}}]},"68":{"line":794,"type":"binary-expr","locations":[{"start":{"line":794,"column":12},"end":{"line":794,"column":29}},{"start":{"line":794,"column":33},"end":{"line":794,"column":86}}]},"69":{"line":821,"type":"binary-expr","locations":[{"start":{"line":821,"column":11},"end":{"line":821,"column":38}},{"start":{"line":821,"column":42},"end":{"line":821,"column":94}},{"start":{"line":821,"column":98},"end":{"line":821,"column":111}}]},"70":{"line":821,"type":"binary-expr","locations":[{"start":{"line":821,"column":44},"end":{"line":821,"column":66}},{"start":{"line":821,"column":70},"end":{"line":821,"column":93}}]},"71":{"line":839,"type":"if","locations":[{"start":{"line":839,"column":6},"end":{"line":839,"column":6}},{"start":{"line":839,"column":6},"end":{"line":839,"column":6}}]},"72":{"line":845,"type":"if","locations":[{"start":{"line":845,"column":6},"end":{"line":845,"column":6}},{"start":{"line":845,"column":6},"end":{"line":845,"column":6}}]},"73":{"line":849,"type":"if","locations":[{"start":{"line":849,"column":6},"end":{"line":849,"column":6}},{"start":{"line":849,"column":6},"end":{"line":849,"column":6}}]},"74":{"line":849,"type":"binary-expr","locations":[{"start":{"line":849,"column":10},"end":{"line":849,"column":28}},{"start":{"line":849,"column":32},"end":{"line":849,"column":105}}]},"75":{"line":872,"type":"cond-expr","locations":[{"start":{"line":872,"column":72},"end":{"line":872,"column":84}},{"start":{"line":872,"column":87},"end":{"line":872,"column":91}}]},"76":{"line":872,"type":"binary-expr","locations":[{"start":{"line":872,"column":19},"end":{"line":872,"column":39}},{"start":{"line":872,"column":43},"end":{"line":872,"column":69}}]},"77":{"line":888,"type":"if","locations":[{"start":{"line":888,"column":6},"end":{"line":888,"column":6}},{"start":{"line":888,"column":6},"end":{"line":888,"column":6}}]},"78":{"line":897,"type":"if","locations":[{"start":{"line":897,"column":6},"end":{"line":897,"column":6}},{"start":{"line":897,"column":6},"end":{"line":897,"column":6}}]},"79":{"line":904,"type":"if","locations":[{"start":{"line":904,"column":6},"end":{"line":904,"column":6}},{"start":{"line":904,"column":6},"end":{"line":904,"column":6}}]},"80":{"line":905,"type":"if","locations":[{"start":{"line":905,"column":8},"end":{"line":905,"column":8}},{"start":{"line":905,"column":8},"end":{"line":905,"column":8}}]},"81":{"line":908,"type":"if","locations":[{"start":{"line":908,"column":10},"end":{"line":908,"column":10}},{"start":{"line":908,"column":10},"end":{"line":908,"column":10}}]},"82":{"line":911,"type":"if","locations":[{"start":{"line":911,"column":8},"end":{"line":911,"column":8}},{"start":{"line":911,"column":8},"end":{"line":911,"column":8}}]},"83":{"line":914,"type":"if","locations":[{"start":{"line":914,"column":10},"end":{"line":914,"column":10}},{"start":{"line":914,"column":10},"end":{"line":914,"column":10}}]},"84":{"line":929,"type":"if","locations":[{"start":{"line":929,"column":6},"end":{"line":929,"column":6}},{"start":{"line":929,"column":6},"end":{"line":929,"column":6}}]},"85":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":6},"end":{"line":938,"column":6}},{"start":{"line":938,"column":6},"end":{"line":938,"column":6}}]},"86":{"line":938,"type":"binary-expr","locations":[{"start":{"line":938,"column":10},"end":{"line":938,"column":35}},{"start":{"line":938,"column":39},"end":{"line":938,"column":49}}]},"87":{"line":941,"type":"if","locations":[{"start":{"line":941,"column":6},"end":{"line":941,"column":6}},{"start":{"line":941,"column":6},"end":{"line":941,"column":6}}]},"88":{"line":944,"type":"if","locations":[{"start":{"line":944,"column":8},"end":{"line":944,"column":8}},{"start":{"line":944,"column":8},"end":{"line":944,"column":8}}]},"89":{"line":948,"type":"if","locations":[{"start":{"line":948,"column":6},"end":{"line":948,"column":6}},{"start":{"line":948,"column":6},"end":{"line":948,"column":6}}]},"90":{"line":951,"type":"if","locations":[{"start":{"line":951,"column":6},"end":{"line":951,"column":6}},{"start":{"line":951,"column":6},"end":{"line":951,"column":6}}]},"91":{"line":959,"type":"if","locations":[{"start":{"line":959,"column":4},"end":{"line":959,"column":4}},{"start":{"line":959,"column":4},"end":{"line":959,"column":4}}]},"92":{"line":983,"type":"if","locations":[{"start":{"line":983,"column":6},"end":{"line":983,"column":6}},{"start":{"line":983,"column":6},"end":{"line":983,"column":6}}]},"93":{"line":997,"type":"if","locations":[{"start":{"line":997,"column":6},"end":{"line":997,"column":6}},{"start":{"line":997,"column":6},"end":{"line":997,"column":6}}]},"94":{"line":1012,"type":"if","locations":[{"start":{"line":1012,"column":4},"end":{"line":1012,"column":4}},{"start":{"line":1012,"column":4},"end":{"line":1012,"column":4}}]},"95":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}},{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}}]},"96":{"line":1063,"type":"if","locations":[{"start":{"line":1063,"column":4},"end":{"line":1063,"column":4}},{"start":{"line":1063,"column":4},"end":{"line":1063,"column":4}}]},"97":{"line":1063,"type":"binary-expr","locations":[{"start":{"line":1063,"column":8},"end":{"line":1063,"column":26}},{"start":{"line":1063,"column":30},"end":{"line":1063,"column":48}},{"start":{"line":1063,"column":52},"end":{"line":1063,"column":77}}]},"98":{"line":1070,"type":"if","locations":[{"start":{"line":1070,"column":4},"end":{"line":1070,"column":4}},{"start":{"line":1070,"column":4},"end":{"line":1070,"column":4}}]},"99":{"line":1070,"type":"binary-expr","locations":[{"start":{"line":1070,"column":8},"end":{"line":1070,"column":26}},{"start":{"line":1070,"column":31},"end":{"line":1070,"column":49}},{"start":{"line":1070,"column":53},"end":{"line":1070,"column":78}}]},"100":{"line":1096,"type":"if","locations":[{"start":{"line":1096,"column":6},"end":{"line":1096,"column":6}},{"start":{"line":1096,"column":6},"end":{"line":1096,"column":6}}]},"101":{"line":1099,"type":"if","locations":[{"start":{"line":1099,"column":6},"end":{"line":1099,"column":6}},{"start":{"line":1099,"column":6},"end":{"line":1099,"column":6}}]},"102":{"line":1111,"type":"if","locations":[{"start":{"line":1111,"column":6},"end":{"line":1111,"column":6}},{"start":{"line":1111,"column":6},"end":{"line":1111,"column":6}}]},"103":{"line":1120,"type":"if","locations":[{"start":{"line":1120,"column":6},"end":{"line":1120,"column":6}},{"start":{"line":1120,"column":6},"end":{"line":1120,"column":6}}]},"104":{"line":1120,"type":"binary-expr","locations":[{"start":{"line":1120,"column":11},"end":{"line":1120,"column":36}},{"start":{"line":1120,"column":40},"end":{"line":1120,"column":61}},{"start":{"line":1120,"column":66},"end":{"line":1120,"column":81}}]},"105":{"line":1126,"type":"if","locations":[{"start":{"line":1126,"column":8},"end":{"line":1126,"column":8}},{"start":{"line":1126,"column":8},"end":{"line":1126,"column":8}}]},"106":{"line":1134,"type":"if","locations":[{"start":{"line":1134,"column":8},"end":{"line":1134,"column":8}},{"start":{"line":1134,"column":8},"end":{"line":1134,"column":8}}]},"107":{"line":1134,"type":"binary-expr","locations":[{"start":{"line":1134,"column":12},"end":{"line":1134,"column":34}},{"start":{"line":1134,"column":38},"end":{"line":1134,"column":80}}]},"108":{"line":1143,"type":"if","locations":[{"start":{"line":1143,"column":6},"end":{"line":1143,"column":6}},{"start":{"line":1143,"column":6},"end":{"line":1143,"column":6}}]},"109":{"line":1143,"type":"binary-expr","locations":[{"start":{"line":1143,"column":10},"end":{"line":1143,"column":24}},{"start":{"line":1143,"column":28},"end":{"line":1143,"column":56}}]},"110":{"line":1149,"type":"if","locations":[{"start":{"line":1149,"column":8},"end":{"line":1149,"column":8}},{"start":{"line":1149,"column":8},"end":{"line":1149,"column":8}}]},"111":{"line":1158,"type":"if","locations":[{"start":{"line":1158,"column":8},"end":{"line":1158,"column":8}},{"start":{"line":1158,"column":8},"end":{"line":1158,"column":8}}]},"112":{"line":1158,"type":"binary-expr","locations":[{"start":{"line":1158,"column":12},"end":{"line":1158,"column":44}},{"start":{"line":1158,"column":48},"end":{"line":1158,"column":62}},{"start":{"line":1158,"column":66},"end":{"line":1158,"column":88}},{"start":{"line":1158,"column":92},"end":{"line":1158,"column":147}}]},"113":{"line":1211,"type":"if","locations":[{"start":{"line":1211,"column":6},"end":{"line":1211,"column":6}},{"start":{"line":1211,"column":6},"end":{"line":1211,"column":6}}]},"114":{"line":1237,"type":"if","locations":[{"start":{"line":1237,"column":6},"end":{"line":1237,"column":6}},{"start":{"line":1237,"column":6},"end":{"line":1237,"column":6}}]},"115":{"line":1240,"type":"if","locations":[{"start":{"line":1240,"column":8},"end":{"line":1240,"column":8}},{"start":{"line":1240,"column":8},"end":{"line":1240,"column":8}}]},"116":{"line":1282,"type":"if","locations":[{"start":{"line":1282,"column":6},"end":{"line":1282,"column":6}},{"start":{"line":1282,"column":6},"end":{"line":1282,"column":6}}]},"117":{"line":1283,"type":"if","locations":[{"start":{"line":1283,"column":8},"end":{"line":1283,"column":8}},{"start":{"line":1283,"column":8},"end":{"line":1283,"column":8}}]},"118":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":6},"end":{"line":1289,"column":6}},{"start":{"line":1289,"column":6},"end":{"line":1289,"column":6}}]},"119":{"line":1294,"type":"if","locations":[{"start":{"line":1294,"column":8},"end":{"line":1294,"column":8}},{"start":{"line":1294,"column":8},"end":{"line":1294,"column":8}}]},"120":{"line":1312,"type":"cond-expr","locations":[{"start":{"line":1312,"column":81},"end":{"line":1312,"column":93}},{"start":{"line":1312,"column":96},"end":{"line":1312,"column":100}}]},"121":{"line":1312,"type":"binary-expr","locations":[{"start":{"line":1312,"column":28},"end":{"line":1312,"column":48}},{"start":{"line":1312,"column":52},"end":{"line":1312,"column":78}}]},"122":{"line":1316,"type":"if","locations":[{"start":{"line":1316,"column":4},"end":{"line":1316,"column":4}},{"start":{"line":1316,"column":4},"end":{"line":1316,"column":4}}]},"123":{"line":1332,"type":"cond-expr","locations":[{"start":{"line":1332,"column":81},"end":{"line":1332,"column":93}},{"start":{"line":1332,"column":96},"end":{"line":1332,"column":100}}]},"124":{"line":1332,"type":"binary-expr","locations":[{"start":{"line":1332,"column":28},"end":{"line":1332,"column":48}},{"start":{"line":1332,"column":52},"end":{"line":1332,"column":78}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.PunktSentenceTokenizer = exports.PunktTrainer = exports.PunktBaseClass = exports.PunktToken = exports.PunktLanguageVariables = undefined;","","var _helpers = require('../../helpers');","","function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }","","function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }","","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /* eslint no-console: 0 */","/**"," * Talisman tokenizers/sentences/punkt"," * ===================================="," *"," * The Punkt unsupervised sentence tokenizer. Note that this is a port of the"," * nltk version of the trainer written in python. This means I did not try"," * too much to change the code architecture and sticked quite directly to"," * the original implementation's classes etc."," *"," * TODO: the architecture can be changed a bit to fit JS more and allow for"," * easier customization."," *"," * [Reference]:"," * http://www.nltk.org/_modules/nltk/tokenize/punkt.html"," *"," * [Article]:"," * Kiss, Tibor and Strunk, Jan (2006): Unsupervised Multilingual Sentence"," * Boundary Detection.  Computational Linguistics 32: 485-525."," */","","","/**"," * Hash separator."," *"," * Note: this is necessary because of JavaScript's lack of tuples and the"," * derived possibility to use tuples as object keys. (ES6 Map won't resolve"," * the issue either since the key comparison is done through reference"," * comparison & not by hashing)."," */","var SEP = '‡';","","/**"," * Orthographic context constants."," *"," * BEG = beginning"," * MID = middle"," * UNK = unknown"," * UC = uppercase"," * LC = lowercase"," * NC = no case"," */","var ORTHO_BEG_UC = 1 << 1,","    ORTHO_MID_UC = 1 << 2,","    ORTHO_UNK_UC = 1 << 3,","    ORTHO_BEG_LC = 1 << 4,","    ORTHO_MID_LC = 1 << 5,","    ORTHO_UNK_LC = 1 << 6;","","var ORTHO_UC = ORTHO_BEG_UC + ORTHO_MID_UC + ORTHO_UNK_UC,","    ORTHO_LC = ORTHO_BEG_LC + ORTHO_MID_LC + ORTHO_UNK_LC;","","var ORTHO_MAP = {","  'initial§upper': ORTHO_BEG_UC,","  'internal§upper': ORTHO_MID_UC,","  'unknown§upper': ORTHO_UNK_UC,","  'initial§lower': ORTHO_BEG_LC,","  'internal§lower': ORTHO_MID_LC,","  'unknown§lower': ORTHO_UNK_LC","};","","/**"," * Class representing a basic frequency distribution."," *"," * @constructor"," */","","var FrequencyDistribution = function () {","  function FrequencyDistribution() {","    _classCallCheck(this, FrequencyDistribution);","","    this.counts = {};","    this.N = 0;","  }","","  /**","   * Method used to add a single value to the distribution.","   *","   * @param  {string} value          - The value to add.","   * @return {FrequencyDistribution} - Itself for chaining purposes.","   */","","","  FrequencyDistribution.prototype.add = function add(value) {","    this.counts[value] = this.counts[value] || 0;","    this.counts[value]++;","    this.N++;","  };","","  /**","   * Method used to get the frequency for a single value.","   *","   * @param  {string} value - The targeted value.","   * @return {number}       - The frequency for the given value.","   */","","","  FrequencyDistribution.prototype.get = function get(value) {","    return this.counts[value] || 0;","  };","","  /**","   * Method used to get the unique values stored by the distribution.","   *","   * @return {array} - An array of the unique values.","   */","","","  FrequencyDistribution.prototype.values = function values() {","    return Object.keys(this.counts);","  };","","  return FrequencyDistribution;","}();","","/**"," * Class representing language dependent variables."," *"," * @constructor"," */","","","var PunktLanguageVariables = exports.PunktLanguageVariables = function () {","  function PunktLanguageVariables() {","    _classCallCheck(this, PunktLanguageVariables);","","    // Characters which are candidates for sentence boundaries","    this.sentenceEndCharacters = new Set('.?!');","","    // Internal punctuation","    this.internalPunctuation = new Set(',:;');","","    // Boundary realignement","    this.reBoundaryRealignment = /[\"')\\]}]+?(?:\\s+|(?=--)|$)/;","","    // Excluding some characters from starting word tokens","    this.reWordStart = /[^\\(\"\\`{\\[:;&\\#\\*@\\)}\\]\\-,]/;","","    // Characters that cannot appear within a word","    this.reNonWordCharacters = /(?:[?!)\";}\\]\\*:@\\'\\({\\[])/;","","    // Hyphen & ellipsis are multi-character punctuation","    this.reMultiCharacterPunctuation = /(?:\\-{2,}|\\.{2,}|(?:\\.\\s){2,}\\.)/;","","    var nonWord = this.reNonWordCharacters.source,","        multiChar = this.reMultiCharacterPunctuation.source,","        wordStart = this.reWordStart.source,","        sentEndChars = [].concat(_toConsumableArray(this.sentenceEndCharacters)).join('');","","    var wordTokenizerPattern = ['(', multiChar, '|', '(?=' + wordStart + ')\\\\S+?', '(?=', '\\\\s|', '$|', nonWord + '|' + multiChar + '|', ',(?=$|\\\\s|' + nonWord + '|' + multiChar + ')', ')', '|', '\\\\S', ')'].join('');","","    this.reWordTokenizer = new RegExp(wordTokenizerPattern, 'g');","","    // After token is $1 and next token is $2","    var periodContextPattern = ['\\\\S*', '[' + sentEndChars + ']', '(?=(', nonWord, '|', '\\\\s+(\\\\S+)', '))'].join('');","","    this.rePeriodContext = new RegExp(periodContextPattern, 'g');","  }","","  /**","   * Method used to tokenize the words in the given string.","   *","   * @param  {string} string - String to tokenize.","   * @return {array}         - An array of matches.","   */","","","  PunktLanguageVariables.prototype.tokenizeWords = function tokenizeWords(string) {","    return string.match(this.reWordTokenizer);","  };","","  return PunktLanguageVariables;","}();","","/**"," * Class storing the data used to perform sentence boundary detection with the"," * Punkt algorithm."," *"," * @constructor"," */","","","var PunktParameters = function () {","  function PunktParameters() {","    _classCallCheck(this, PunktParameters);","","    // A set of word types for known abbreviations.","    this.abbreviationTypes = new Set();","","    // A set of word type tuples for known common collocations where the first","    // word ends in a period ('S. Bach', for instance is a common collocation","    // in a text discussing 'Johann S. Bach').","    this.collocations = new Set();","","    // A set of word types for words that often appear at the beginning of","    // sentences.","    this.sentenceStarters = new Set();","","    // A dictionary mapping word types to the the set of orthographic contexts","    // that word type appears in.","    this.orthographicContext = {};","  }","","  /**","   * Method used to add a context to the given word type.","   *","   * @param  {string}         type - The word type.","   * @param  {number}         flag - The context's flag.","   * @return {PunktParameter}      - Returns itself for chaining purposes.","   */","","","  PunktParameters.prototype.addOrthographicContext = function addOrthographicContext(type, flag) {","    this.orthographicContext[type] = this.orthographicContext[type] || 0;","    this.orthographicContext[type] |= flag;","    return this;","  };","","  return PunktParameters;","}();","","/**"," * Regular expressions used by the tokens."," */","","","var RE_ELLIPSIS = /^\\.\\.+$/,","    RE_NUMERIC = /^-?[\\.,]?\\d[\\d,\\.-]*\\.?$/,","    RE_INITIAL = /^[^\\W\\d]\\.$/,","    RE_ALPHA = /^[^\\W\\d]+$/,","    RE_NON_PUNCT = /[^\\W\\d]/;","","/**"," * Class representing a token of text with annotations produced during"," * sentence boundary detection."," *"," * @constructor"," * @param {string} string - The token's string."," * @param {params} object - Custom flags."," */","","var PunktToken = exports.PunktToken = function () {","  function PunktToken(string) {","    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};","","    _classCallCheck(this, PunktToken);","","    // Properties","    this.string = string;","    this.periodFinal = string[string.length - 1] === '.';","    this.type = string.toLowerCase().replace(RE_NUMERIC, '##number##');","","    // TODO: this is fishy, since it collides with ellipsis. Maybe refine","    this.isEllipsis = RE_ELLIPSIS.test(string);","    this.isNumber = this.type === '##number##';","    this.isInitial = RE_INITIAL.test(string);","    this.isAlpha = RE_ALPHA.test(string);","    this.isNonPunctuation = RE_NON_PUNCT.test(string);","    this.isInitialAlpha = /^[^\\W\\d]/.test(string);","","    for (var k in params) {","      this[k] = params[k];","    }","  }","","  /**","   * Method used to retrieve the token's type with its final period removed if","   * it has one.","   *","   * @return {string}","   */","","","  PunktToken.prototype.typeNoPeriod = function typeNoPeriod() {","    if (this.type.length > 1 && this.type.slice(-1) === '.') return this.type.slice(0, -1);","    return this.type;","  };","","  /**","   * Method used to retrieve the token's type with its final period removed if","   * it is marked as a sentence break.","   *","   * @return {string}","   */","","","  PunktToken.prototype.typeNoSentencePeriod = function typeNoSentencePeriod() {","    if (this.sentenceBreak) return this.typeNoPeriod();","    return this.type;","  };","","  /**","   * Method used to return whether the token's first character is uppercase.","   *","   * @return {boolean}","   */","","","  PunktToken.prototype.firstUpper = function firstUpper() {","    return this.isInitialAlpha && this.string[0] === this.string[0].toUpperCase();","  };","","  /**","   * Method used to return whether the token's first character is lowercase.","   *","   * @return {boolean}","   */","","","  PunktToken.prototype.firstLower = function firstLower() {","    return this.isInitialAlpha && this.string[0] === this.string[0].toLowerCase();","  };","","  /**","   * Method used to return the token's first character's case.","   *","   * @return {string} - \"lower\" or \"upper\".","   */","","","  PunktToken.prototype.firstCase = function firstCase() {","    if (this.firstLower()) return 'lower';","    if (this.firstUpper()) return 'upper';","    return 'none';","  };","","  /**","   * Method used for string coercion.","   *","   * @return {string} - The token's string representation.","   */","","","  PunktToken.prototype.toString = function toString() {","    return this.string;","  };","","  return PunktToken;","}();","","/**"," * Customization variables."," */","","","var ABBREV = 0.3,","    IGNORE_ABBREV_PENALTY = false,","    ABBREV_BACKOFF = 5,","    COLLOCATION = 7.88,","    SENT_STARTER = 30,","    INCLUDE_ALL_COLLOCS = false,","    INCLUDE_ABBREV_COLLOCS = false,","    MIN_COLLOC_FREQ = 1,","    PUNCTUATION = new Set(';:,.!?');","","/**"," * Punkt abstract class used by both the Trainer & the Tokenizer classes."," *"," * @constructor"," * @param {object}                 [options]        - Instantiation options."," * @param {PunktLanguageVariables} [options.vars]   - Language variables."," * @param {PunktParameters}        [options.params] - Parameters"," */","","var PunktBaseClass = exports.PunktBaseClass = function () {","  function PunktBaseClass(options) {","    _classCallCheck(this, PunktBaseClass);","","    var _ref = options || {},","        _ref$vars = _ref.vars,","        vars = _ref$vars === undefined ? new PunktLanguageVariables() : _ref$vars,","        _ref$params = _ref.params,","        params = _ref$params === undefined ? new PunktParameters() : _ref$params;","","    this.params = params;","    this.vars = vars;","  }","","  /**","   * Method used to tokenize the given text into tokens, using the Punkt word","   * segmentation regular expression, and generate the resulting list of","   * tokens.","   *","   * @param  {string} text - The raw text to tokenize.","   * @return {array}       - The resulting tokens.","   */","","","  PunktBaseClass.prototype.tokenizeWords = function tokenizeWords(text) {","    var paragraphStart = false;","","    var lines = text.split(/\\r?\\n/g),","        tokens = [];","","    for (var i = 0, l = lines.length; i < l; i++) {","      var line = lines[i].trim();","","      if (line) {","        var words = this.vars.tokenizeWords(line);","","        tokens.push(new PunktToken(words[0], { lineStart: true, paragraphStart: paragraphStart }));","","        paragraphStart = false;","","        for (var j = 1, m = words.length; j < m; j++) {","          tokens.push(new PunktToken(words[j]));","        }","      } else {","        paragraphStart = true;","      }","    }","","    return tokens;","  };","","  /**","   * Method used to perform the first pass of token annotation, which makes","   * decisions based purely based of the word type of each word:","   *   - \"?\", \"!\", and \".\" are marked as sentence breaks.","   *   - sequences of two or more periods are marked as ellipsis.","   *   - any word ending in \".\" that is a known abbreviation is marked as such.","   *   - any othe word ending in \".\" is marked as a sentence break.","   *","   * @param  {array} tokens   - The tokens to annotate.","   * @return {PunktBaseClass} - Returns itself for chaining purposes.","   */","","","  PunktBaseClass.prototype._annotateFirstPass = function _annotateFirstPass(tokens) {","    for (var i = 0, l = tokens.length; i < l; i++) {","      var token = tokens[i],","          string = token.string;","","      if (this.vars.sentenceEndCharacters.has(string)) {","        token.sentenceBreak = true;","      } else if (token.isEllipsis) {","        token.ellipsis = true;","      } else if (token.periodFinal && !string.endsWith('..')) {","        var t = string.slice(0, -1).toLowerCase();","","        if (this.params.abbreviationTypes.has(t) || this.params.abbreviationTypes.has(t.split('-').slice(-1)[0])) {","          token.abbreviation = true;","        } else {","          token.sentenceBreak = true;","        }","      }","    }","","    return this;","  };","","  return PunktBaseClass;","}();","","/**"," * Miscellaneous helpers."," */","","/**"," * Computing the Dunning log-likelihood ratio scores for abbreviation"," * candidates."," *"," * @param {number} a  - Count of <a>."," * @param {number} b  - Count of <b>."," * @param {number} ab - Count of <ab>."," * @param {number} N  - Number of elements in the distribution."," * @return {number}   - The log-likelihood."," */","","","function dunningLogLikelihood(a, b, ab, N) {","  var p1 = b / N,","      p2 = 0.99;","","  var nullHypothesis = ab * Math.log(p1) + (a - ab) * Math.log(1 - p1),","      alternativeHyphothesis = ab * Math.log(p2) + (a - ab) * Math.log(1 - p2);","","  var likelihood = nullHypothesis - alternativeHyphothesis;","","  return -2 * likelihood;","}","","/**"," * A function that wil just compute log-likelihood estimate, in the original"," * paper, it's described in algorithm 6 and 7."," *"," * Note: this SHOULD be the original Dunning log-likelihood values."," *"," * @param {number} a  - Count of <a>."," * @param {number} b  - Count of <b>."," * @param {number} ab - Count of <ab>."," * @param {number} N  - Number of elements in the distribution."," * @return {number}   - The log-likelihood."," */","function colLogLikelihood(a, b, ab, N) {","  var p = b / N,","      p1 = ab / a,","      p2 = (b - ab) / (N - a);","","  var summand1 = ab * Math.log(p) + (a - ab) * Math.log(1 - p),","      summand2 = (b - ab) * Math.log(p) + (N - a - b + ab) * Math.log(1 - p);","","  var summand3 = 0;","  if (a !== ab) summand3 = ab * Math.log(p1) + (a - ab) * Math.log(1 - p1);","","  var summand4 = 0;","  if (b !== ab) summand4 = (b - ab) * Math.log(p2) + (N - a - b + ab) * Math.log(1 - p2);","","  var likelihood = summand1 + summand2 - summand3 - summand4;","","  return -2 * likelihood;","}","","/**"," * Class representing the Punkt trainer."," *"," * @constructor"," * @param {object}  [options]         - Instantiation options."," * @param {boolean} [options.verbose] - Should the trainer log information?"," */","","var PunktTrainer = exports.PunktTrainer = function (_PunktBaseClass) {","  _inherits(PunktTrainer, _PunktBaseClass);","","  function PunktTrainer(options) {","    _classCallCheck(this, PunktTrainer);","","    var _ref2 = options || {},","        _ref2$verbose = _ref2.verbose,","        verbose = _ref2$verbose === undefined ? false : _ref2$verbose;","","    // Should the trainer log information?","    var _this = _possibleConstructorReturn(this, _PunktBaseClass.call(this, options));","","    _this.verbose = verbose;","","    // A frequency distribution giving the frequenct of each case-normalized","    // token type in the training data.","    _this.typeFdist = new FrequencyDistribution();","","    // Number of words ending in period in the training data.","    _this.periodTokenCount = 0;","","    // A frequency distribution giving the frequency of all bigrams in the","    // training data where the first word ends in a period.","    _this.collocationFdist = new FrequencyDistribution();","","    // A frequency distribution givin the frequency of all bigrams in the","    // training data where the first word ends in a period.","    _this.sentenceStarterFdist = new FrequencyDistribution();","","    // The total number of sentence breaks identified in training, used for","    // calculating the frequent sentence starter heuristic.","    _this.sentenceBreakCount = 0;","","    // A flag controlling whether the training has been finalized by finding","    // collocations and sentence starters, or whether training still needs to be","    // finalized","    _this.finalized = true;","    return _this;","  }","","  /**---------------------------------------------------------------------------","   * Overhead reduction.","   **---------------------------------------------------------------------------","   */","","  // TODO: figure out this part","","  /**---------------------------------------------------------------------------","   * Orthographic data.","   **---------------------------------------------------------------------------","   */","","  /**","   * Method used to collect information about whether each token type occurs","   * with different case patterns (i) overall, (ii) at sentence-initial","   * positions, and (iii) at sentence-internal positions.","   *","   * @param  {array}   tokens - Training tokens.","   * @return {PunktTrainer}        - Returns itself for chaining purposes.","   */","","","  PunktTrainer.prototype._getOrthographyData = function _getOrthographyData(tokens) {","    var context = 'internal';","","    for (var i = 0, l = tokens.length; i < l; i++) {","      var token = tokens[i];","","      // If we encounter a paragraph break, then it's a good sign that it's","      // a sentence break. But err on the side of caution (by not positing","      // a sentence break) if we just saw an abbreviation.","      if (token.paragraphStart && context !== 'unknown') context = 'initial';","","      // If we are at the beginning of a line, then we can't decide between","      // \"internal\" and \"initial\"","      if (token.lineStart && context === 'internal') context = 'unknown';","","      // Find the case-normalized type of the token. If it's a sentence-final","      // token, strip off the period.","      var type = token.typeNoSentencePeriod();","","      // Update the orthographic context table.","      var flag = ORTHO_MAP[context + '\\xA7' + token.firstCase()] || 0;","","      if (flag) this.params.addOrthographicContext(type, flag);","","      // Decide whether the newt word is at a sentence boundary","      if (token.sentenceBreak) {","        if (!(token.isNumber || token.isInitial)) context = 'initial';else context = 'unknown';","      } else if (token.ellipsis || token.abbreviation) {","        context = 'unknown';","      } else {","        context = 'internal';","      }","    }","  };","","  /**---------------------------------------------------------------------------","   * Abbreviation.","   **---------------------------------------------------------------------------","   */","","  /**","   * Method used to reclassify the given token's type if:","   *   - it is period-final and not a know abbreviation","   *   - it is not period-final and is otherwise a known abbreviation by","   *     checking whether its previous classification still holds according to","   *     the heuristics of section 3.","   *","   * @param  {string} type - A token type.","   * @return {array|null}  - Returns a triple containing the following:","   *         {string}        [0]: the abbreviation.","   *         {number}        [1]: log-likelihood with penalties applied.","   *         {boolean}       [2]: whether the present type is a candidate for","   *                              inclusion or exclusion as an abbreviation.","   */","","","  PunktTrainer.prototype._reclassifyAbbreviationType = function _reclassifyAbbreviationType(type) {","    var isAdd = void 0;","","    // Check some basic conditions, to rule out words that are clearly not","    // abbreviation types.","    if (type === '##number##\"' || !RE_NON_PUNCT.test(type)) return null;","","    if (type.endsWith('.')) {","      if (this.params.abbreviationTypes.has(type)) return null;","      type = type.slice(0, -1);","      isAdd = true;","    } else {","      if (!this.params.abbreviationTypes.has(type)) return null;","      isAdd = false;","    }","","    // Count how many periods & nonperiods are in the candidate type.","    var periodsCount = (type.match(/\\./g) || []).length + 1,","        nonPeriodsCount = type.length - periodsCount + 1;","","    // Let <a> be the candidate without the period, and <b> be the period.","    // Find a log likelihood ratio that indicates whether <ab> occurs as a","    // single unit (high value of ll), or as two independent units <a> and <b>","    // (low value of ll)","    var withPeriodCount = this.typeFdist.get(type + '.'),","        withoutPeriodCount = this.typeFdist.get(type);","","    var ll = dunningLogLikelihood(withPeriodCount + withoutPeriodCount, this.periodTokenCount, withPeriodCount, this.typeFdist.N);","","    // Apply three scaling factors to \"tweak\" the basic log-likelihood ratio:","    //   * fLength: long word => less likely to be an abbreviation","    //   * fPeriods: more periods => more likely to be an abbreviation","    //   * fPenalty: penalize occurences without a period","    var fLength = Math.exp(-nonPeriodsCount),","        fPeriods = periodsCount,","        fPenalty = !IGNORE_ABBREV_PENALTY ? Math.pow(nonPeriodsCount, -withoutPeriodCount) : IGNORE_ABBREV_PENALTY;","","    var score = ll * fLength * fPeriods * fPenalty;","","    return [type, score, isAdd];","  };","","  /**","   * Method determining whether we stand before a rare abbreviation. A word","   * type is counted as a rare abbreviation if:","   *   - it's not already marked as an abbreviation","   *   - it occurs fewer than ABBREV_BACKOFF times","   *   - either it is followed by a sentence-internal punctuation mark, OR its","   *     is followed by a lower-case word that sometimes appears with upper-case","   *     but never occurs with lower case at the beginning of sentences.","   *","   * @param  {PunktToken} currentToken - The token.","   * @param  {PunktToken} nextToken    - The next token.","   * @return {boolean}","   */","","","  PunktTrainer.prototype._isRareAbbreviationType = function _isRareAbbreviationType(currentToken, nextToken) {","    if (currentToken.abbreviation || !currentToken.sentenceBreak) return false;","","    // Find the case-normalized type of the token. If it's a sentence-final","    // token, strip off the period.","    var type = currentToken.typeNoSentencePeriod();","","    // Proceed only if the type hasn't been categorized as an abbreviation","    // already, and is sufficiently rare.","    var count = this.typeFdist.get(type) + this.typeFdist.get(type.slice(0, -1));","","    if (this.params.abbreviationTypes.has(type) || count >= ABBREV_BACKOFF) return false;","","    // Record this type as an abbreviation if the next token is a","    // sentence-internal punctuation mark.","    if (this.vars.internalPunctuation.has(nextToken.string[0])) return true;","","    // Record this type as an abbreviation if the next token:","    //   (i) starts with a lower case letter,","    //   (ii) sometimes occurs with an uppercase letter,","    //   (iii) nevers occurs with an uppercase letter sentence-internally","    else if (nextToken.firstLower()) {","        var nextType = nextToken.typeNoSentencePeriod(),","            context = this.params.orthographicContext[nextType];","","        if (context & ORTHO_BEG_UC && !(context & ORTHO_MID_UC)) return true;","      }","","    return false;","  };","","  /**---------------------------------------------------------------------------","   * Collocation finder.","   **---------------------------------------------------------------------------","   */","","  /**","   * Method used to determine whether the pair of tokens may form","   * a collocation given log-likelihood statistics.","   *","   * @param  {PunktToken} firstToken  - first The token.","   * @param  {PunktToken} secondToken - The second token.","   * @return {boolean}","   */","","","  PunktTrainer.prototype._isPotentialCollocation = function _isPotentialCollocation(firstToken, secondToken) {","    return (INCLUDE_ALL_COLLOCS || INCLUDE_ABBREV_COLLOCS && firstToken.abbreviation || firstToken.sentenceBreak && (firstToken.isNumber || firstToken.isInitial)) && firstToken.isNonPunctuation && secondToken.isNonPunctuation;","  };","","  /**","   * Method used to generate likely collocations and their log-likelihood.","   *","   * @return {array} - An array of results.","   */","","","  PunktTrainer.prototype._findCollocations = function _findCollocations() {","    var types = this.collocationFdist.values(),","        results = [];","","    for (var i = 0, l = types.length; i < l; i++) {","      var hash = types[i];","","      // NOTE: beware memory reduction here!","      // TODO: check that it works properly","","      var _hash$split = hash.split(SEP),","          type1 = _hash$split[0],","          type2 = _hash$split[1];","","      if (this.params.sentenceStarters.has(type2)) continue;","","      var colCount = this.collocationFdist.get(hash),","          type1Count = this.typeFdist.get(type1) + this.typeFdist.get(type1 + '.'),","          type2Count = this.typeFdist.get(type2) + this.typeFdist.get(type2 + '.');","","      if (type1Count > 1 && type2Count > 1 && MIN_COLLOC_FREQ < colCount && colCount <= Math.min(type1Count, type2Count)) {","","        var ll = colLogLikelihood(type1Count, type2Count, colCount, this.typeFdist.N);","","        if (ll >= COLLOCATION && this.typeFdist.N / type1Count > type2Count / colCount) results.push([hash, ll]);","      }","    }","","    return results;","  };","","  /**---------------------------------------------------------------------------","   * Sentence starter finder.","   **---------------------------------------------------------------------------","   */","","  /**","   * Method returning whether, given a token and the token that precedes it if","   * it seems clear that the token is beginning a sentence.","   *","   * @param  {PunktToken} token         - The token.","   * @param  {PunktToken} previousToken - The previous token.","   * @return {boolean}","   */","","","  PunktTrainer.prototype._isPotentialSentenceStarter = function _isPotentialSentenceStarter(token, previousToken) {","","    // If a token (i) is preceded by a sentence break that is not a potential","    // ordinal number or initial, and (ii) is alphabetic, then it is a","    // sentence starter.","    return previousToken.sentenceBreak && !(previousToken.isNumber || previousToken.isInitial) && token.isAlpha;","  };","","  /**","   * Method using collocation heuristics for each candidate token to determine","   * if it frequently starts sentences.","   *","   * @return {array} - An array of results.","   */","","","  PunktTrainer.prototype._findSentenceStarters = function _findSentenceStarters() {","    var types = this.sentenceStarterFdist.values(),","        results = [];","","    for (var i = 0, l = types.length; i < l; i++) {","      var type = types[i];","","      if (!type) continue;","","      var typeAtBreakCount = this.sentenceStarterFdist.get(type),","          typeCount = this.typeFdist.get(type);","","      // This is needed after memory reduction methods","      if (typeCount < typeAtBreakCount) continue;","","      var ll = colLogLikelihood(this.sentenceBreakCount, typeCount, typeAtBreakCount, this.typeFdist.N);","","      if (ll >= SENT_STARTER && this.typeFdist.N / this.sentenceBreakCount > typeCount / typeAtBreakCount) {","        results.push([type, ll]);","      }","    }","","    return results;","  };","","  /**---------------------------------------------------------------------------","   * Training methods.","   **---------------------------------------------------------------------------","   */","","  /**","   * Method used to train a model based on the given text.","   *","   * @param  {string}  text     - The training text.","   * @param  {boolean} finalize - Whether to finalize the training or not.","   * @return {PunktTrainer}     - Returns itself for chaining purposes.","   */","","","  PunktTrainer.prototype.train = function train(text) {","    var finalize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;","","","    // First we need to tokenize the words","    var tokens = this.tokenizeWords(text);","","    this.finalized = false;","","    // Find the frequency of each case-normalized type.","    // Also record the number of tokens ending in periods.","    for (var i = 0, l = tokens.length; i < l; i++) {","      var token = tokens[i],","          type = token.type;","","      this.typeFdist.add(type);","","      if (token.periodFinal) this.periodTokenCount++;","    }","","    // Look for new abbreviations, and for types that no longer are","    var uniqueTypes = this.typeFdist.values();","","    for (var _i = 0, _l = uniqueTypes.length; _i < _l; _i++) {","      var result = this._reclassifyAbbreviationType(uniqueTypes[_i]);","","      if (!result) continue;","","      var abbreviation = result[0],","          score = result[1],","          isAdd = result[2];","","","      if (score >= ABBREV) {","        if (isAdd) {","          this.params.abbreviationTypes.add(abbreviation);","","          if (this.verbose) console.log('Added abbreviation: [' + score + '] ' + abbreviation);","        }","      } else {","        if (!isAdd) {","          this.params.abbreviationTypes.delete(abbreviation);","","          if (this.verbose) console.log('Remove abbreviation [' + score + '] ' + abbreviation);","        }","      }","    }","","    // Make a preliminary pass through the document, marking likely sentence","    // breaks, abbreviations, and ellipsis tokens.","    this._annotateFirstPass(tokens);","","    // Check what context each word type can appear in, given the case of its","    // first letter.","    this._getOrthographyData(tokens);","","    // We need total number of sentence breaks to find sentence starters","    for (var _i2 = 0, _l2 = tokens.length; _i2 < _l2; _i2++) {","      if (tokens[_i2].sentenceBreak) this.sentenceBreakCount++;","    }","","    // The remaining heuristics relate to pairs of tokens where the first ends","    // in a period.","    for (var _i3 = 0, _l3 = tokens.length; _i3 < _l3; _i3++) {","      var currentToken = tokens[_i3],","          nextToken = tokens[_i3 + 1];","","      if (!currentToken.periodFinal || !nextToken) continue;","","      // If the first token a rare abbreviation?","      if (this._isRareAbbreviationType(currentToken, nextToken)) {","        this.params.abbreviationTypes.add(currentToken.typeNoPeriod());","","        if (this.verbose) console.log('Rare abbreviation: ' + currentToken.type);","      }","","      // Does the second token have a high likelihood of starting a sentence?","      if (this._isPotentialSentenceStarter(nextToken, currentToken)) this.sentenceStarterFdist.add(nextToken.type);","","      // Is this bigram a potential collocation?","      if (this._isPotentialCollocation(currentToken, nextToken)) {","        var hashedBigram = [currentToken.typeNoPeriod(), nextToken.typeNoSentencePeriod()].join(SEP);","","        this.collocationFdist.add(hashedBigram);","      }","    }","","    // Should we finalize?","    if (finalize) this.finalize();","","    return this;","  };","","  /**","   * Method using the data that has been gathered in training to determine","   * likely collocations and sentence starters.","   *","   * @return {PunktTrainer} - Returns itself for chaining purposes.","   */","","","  PunktTrainer.prototype.finalize = function finalize() {","    this.params.sentenceStarters.clear();","    var sentenceStarters = this._findSentenceStarters();","","    for (var i = 0, l = sentenceStarters.length; i < l; i++) {","      var _sentenceStarters$i = sentenceStarters[i],","          type = _sentenceStarters$i[0],","          ll = _sentenceStarters$i[1];","","      this.params.sentenceStarters.add(type);","","      if (this.verbose) console.log('Sentence starter: [' + ll + '] ' + type);","    }","","    this.params.collocations.clear();","    var collocations = this._findCollocations();","","    for (var _i4 = 0, _l4 = collocations.length; _i4 < _l4; _i4++) {","      var _collocations$_i = collocations[_i4],","          hash = _collocations$_i[0],","          ll = _collocations$_i[1];","","","      this.params.collocations.add(hash);","","      if (this.verbose) console.log('Collocation: [' + ll + '] (' + hash.split(SEP).join(', ') + ')');","    }","","    this.finalized = true;","    return this;","  };","","  /**","   * Method returning the parameters found by the trainer.","   *","   * @return {PunktParameters} - The parameters.","   */","","","  PunktTrainer.prototype.getParams = function getParams() {","    if (!this.finalized) this.finalize();","    return this.params;","  };","","  return PunktTrainer;","}(PunktBaseClass);","","/**"," * Class representing the Punkt sentence tokenizer."," *"," * @constructor"," * @param {PunktParameters} params - Parameters to use to perform tokenization."," */","","","var PunktSentenceTokenizer = exports.PunktSentenceTokenizer = function (_PunktBaseClass2) {","  _inherits(PunktSentenceTokenizer, _PunktBaseClass2);","","  function PunktSentenceTokenizer(params) {","    _classCallCheck(this, PunktSentenceTokenizer);","","    var _this2 = _possibleConstructorReturn(this, _PunktBaseClass2.call(this));","","    _this2.params = params;","    return _this2;","  }","","  /**---------------------------------------------------------------------------","   * Annotation methods.","   **---------------------------------------------------------------------------","   */","","  /**","   * Method used to decide whether the given token is the first token in a","   * sentence.","   *","   * @param  {PunktToken}     token - The considered token.","   * @return {boolean|string}       - The decision","   */","","","  PunktSentenceTokenizer.prototype._orthographicHeuristic = function _orthographicHeuristic(token) {","","    // Sentences don't start with punctuation marks","    if (PUNCTUATION.has(token.string)) return false;","","    var context = this.params.orthographicContext[token.typeNoSentencePeriod()];","","    // If the word is capitalized, occurs at least once with a lower-case first","    // letter, and never occurs with an upper-case first letter sentence","    // internally, then it's a sentence starter.","    if (token.firstUpper() && context & ORTHO_LC && !(context & ORTHO_MID_UC)) {","      return true;","    }","","    // If the word is lower-case, and either (a) we have seen it used with","    // upper-case, or (b) we have never seen it used sentence-initially with","    // lower-case, then it's not a sentence starter.","    if (token.firstLower() && (context & ORTHO_UC || !(context & ORTHO_BEG_LC))) {","      return false;","    }","","    // Otherwise, we are not really sure","    return 'unknown';","  };","","  /**","   * Method used to perform the second pass of annotation by performing","   * a token-based classification (section 4) over the given tokens, making","   * use of the orthographic heuristic (4.1.1), collocation heuristic (4.1.2)","   * and frequent sentence starter heuristic (4.1.3).","   *","   * @param  {array}                  tokens - Tokens to annotate.","   * @return {PunktSentenceTokenizer}        - Returns itself for chaining.","   */","","","  PunktSentenceTokenizer.prototype._annotateSecondPass = function _annotateSecondPass(tokens) {","","    for (var i = 0, l = tokens.length; i < l; i++) {","      var currentToken = tokens[i],","          nextToken = tokens[i + 1];","","      // Is it the last token? We can't do anything then.","      if (!nextToken) return;","","      // We only care about words ending in periods.","      if (!currentToken.periodFinal) continue;","","      var currentType = currentToken.typeNoPeriod(),","          nextType = nextToken.typeNoSentencePeriod(),","          tokenIsInitial = currentToken.isInitial;","","      // [4.1.2. Collocation Heuristic]: If there is a collocation between","      // the word before and after the period, then label the token as an","      // abbreviation and NOT a sentence break. Note that collocations with","      // frequent sentence starters as their second word are excluded in","      // training.","      var hash = [currentType, nextType].join(SEP);","      if (this.params.collocations.has(hash)) {","        currentToken.sentenceBreak = false;","        currentToken.abbreviation = true;","        continue;","      }","","      // [4.2. Token-Based Reclassification of Abbreviation]: If the token","      // is an abbreviation or an ellipsis, then decide whether we should","      // also classify it as a sentence break.","      if ((currentToken.abbreviation || currentToken.ellipsis) && !tokenIsInitial) {","","        // [4.1.1. Orthographic Heuristic]: Check if there is orthographic","        // evidence about whether the next word starts a sentence or not.","        var isSentenceStarter = this._orthographicHeuristic(nextToken);","","        if (isSentenceStarter === true) {","          currentToken.sentenceBreak = true;","          continue;","        }","","        // [4.1.3. Frequent Sentence Starter Heuristic]: If the next word","        // is capitalized, and is a member of the frequent-sentence-starters","        // list, then label token a sentence break.","        if (nextToken.firstUpper() && this.params.sentenceStarters.has(nextType)) {","          currentToken.sentenceBreak = true;","          continue;","        }","      }","","      // [4.3. Token-Based Detection of Initials and Ordinals]: Check if any","      // initials or ordinals tokens are marked as sentence breaks should be","      // reclassified as abbreviations.","      if (tokenIsInitial || currentType === '##number##') {","","        // [4.1.1. Orthographic Heuristic]: Check if there is orthographic","        // evidence about whether the next word starts a sentence or not.","        var _isSentenceStarter = this._orthographicHeuristic(nextToken);","","        if (_isSentenceStarter === false) {","          currentToken.sentenceBreak = false;","          currentToken.abbreviation = true;","          continue;","        }","","        // Special heuristic for initials: if orthographic heuristic is","        // unknown, and next word is always capitalized, then mark as","        // abbreviation (\"J. Bach\", for instance).","        if (_isSentenceStarter === 'unknown' && tokenIsInitial && nextToken.firstUpper() && !(this.params.orthographicContext[nextType] & ORTHO_LC)) {","          currentToken.sentenceBreak = false;","          currentToken.abbreviation = true;","        }","      }","    }","  };","","  /**","   * Given a set of tokens augmented with markers for line-start and","   * paragraph-start, returns those tokens with full annotation including","   * predicted sentence breaks.","   *","   * @param  {array}                  tokens - Tokens to annotate.","   * @return {PunktSentenceTokenizer}        - Returns itself for chaining.","   */","","","  PunktSentenceTokenizer.prototype._annotateTokens = function _annotateTokens(tokens) {","","    // Make a preliminary pass through the document, marking likely sentence","    // breaks, abbreviations, and ellipsis tokens.","    this._annotateFirstPass(tokens);","","    // Make a second pass through the document, using token context info","    // to change our preliminary decisions about where sentence breaks,","    // abbreviations, and ellipsis occurs.","    this._annotateSecondPass(tokens);","","    return this;","  };","","  /**---------------------------------------------------------------------------","   * Tokenization methods.","   **---------------------------------------------------------------------------","   */","","  /**","   * Method returning whether the given text includes a sentence break.","   *","   * @param  {string}  text - Text to analyze.","   * @return {boolean}","   */","","","  PunktSentenceTokenizer.prototype._textContainsSentenceBreak = function _textContainsSentenceBreak(text) {","    var tokens = this.tokenizeWords(text);","","    // Let's annotate the tokens","    this._annotateTokens(tokens);","","    // Ignoring last token (l - 1)","    for (var i = 0, l = tokens.length - 1; i < l; i++) {","      if (tokens[i].sentenceBreak) return true;","    }","","    return false;","  };","","  /**","   * Method used to slice the given text according to the language variables.","   *","   * @param  {string} text - Text to slice.","   * @return {array}       - The slices.","   */","","","  PunktSentenceTokenizer.prototype._slicesFromText = function _slicesFromText(text) {","    var slices = [],","        matches = (0, _helpers.findall)(this.vars.rePeriodContext, text);","","    var lastBreak = 0;","","    for (var i = 0, l = matches.length; i < l; i++) {","      var match = matches[i],","          afterToken = match[1],","          nextToken = match[2],","          context = match[0] + afterToken;","","      if (this._textContainsSentenceBreak(context)) {","        slices.push([lastBreak, match.index + match[0].length]);","","        if (nextToken) {","","          // Next sentence starts after whitespace","          lastBreak = match.index + match[0].length + 1;","        } else {","","          // Next sentence starts at the following punctuation","          lastBreak = match.index + match[0].length;","        }","      }","    }","","    // Last slice","    slices.push([lastBreak, text.length]);","","    return slices;","  };","","  /**","   * Method used to attempt to realign punctuation that falls after the period","   * but should otherwise be included in the same sentence.","   *","   * Example: \"(Sent1.) Sent2.\" will otherwise be split as:","   * [\"(Sent1.\", \") Sent2.\"] instead of [\"(Sent1.)\", \"Sent2.\"].","   *","   * @param  {string} text   - Text to realign.","   * @param  {array}  slices - Slices of text.","   * @return {array}         - Realigned pieces.","   */","","","  PunktSentenceTokenizer.prototype._realignBoundaries = function _realignBoundaries(text, slices) {","    var realigned = [];","","    var realign = 0;","","    for (var i = 0, l = slices.length; i < l; i++) {","      var slice1 = slices[i],","          slice2 = slices[i + 1];","","      var realignedSlice = [slice1[0] + realign, slice1[1]];","","      if (!slice2) {","        if (text.substring.apply(text, realignedSlice)) realigned.push(realignedSlice);","        continue;","      }","","      var match = text.substring.apply(text, _toConsumableArray(slice2)).match(this.vars.reBoundaryRealignment);","","      if (match) {","        realigned.push([realignedSlice[0], slice2[0] + match[0].replace(/\\s*$/g, '').length]);","        realign = match.index + match[0].length;","      } else {","        realign = 0;","        if (text.substring.apply(text, realignedSlice)) realigned.push(realignedSlice);","      }","    }","","    return realigned;","  };","","  /**","   * Method returning a list of the spans of sentences in the text.","   *","   * @param  {string}  text               - Text to tokenize into sentences.","   * @param  {boolean} realignBoundaries  - Should the tokenizer realign","   *                                        boundaries?","   * @return {array}                      - The array of sentences.","   */","","","  PunktSentenceTokenizer.prototype.spanTokenize = function spanTokenize(text) {","    var realignBoundaries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;","","    var slices = this._slicesFromText(text);","","    if (realignBoundaries) slices = this._realignBoundaries(text, slices);","","    return slices;","  };","","  /**","   * Method used to tokenize the given text.","   *","   * @param  {string}  text               - Text to tokenize into sentences.","   * @param  {boolean} realignBoundaries  - Should the tokenizer realign","   *                                        boundaries?","   * @return {array}                      - The array of sentences.","   */","","","  PunktSentenceTokenizer.prototype.tokenize = function tokenize(text) {","    var realignBoundaries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;","","    var spans = this.spanTokenize(text, realignBoundaries),","        sentences = [];","","    for (var i = 0, l = spans.length; i < l; i++) {","      sentences.push(text.substring.apply(text, _toConsumableArray(spans[i])));","    }return sentences;","  };","","  return PunktSentenceTokenizer;","}(PunktBaseClass);"],"l":{"3":1,"6":1,"8":1,"10":1,"12":2,"14":1,"16":1,"46":1,"58":1,"65":1,"68":1,"83":1,"84":1,"85":0,"87":0,"88":0,"99":1,"100":0,"101":0,"102":0,"113":1,"114":0,"124":1,"125":0,"128":1,"138":1,"139":1,"140":0,"143":0,"146":0,"149":0,"152":0,"155":0,"158":0,"160":0,"165":0,"167":0,"170":0,"172":0,"183":1,"184":0,"187":1,"198":1,"199":1,"200":0,"203":0,"208":0,"212":0,"216":0,"228":1,"229":0,"230":0,"231":0,"234":1,"242":1,"257":1,"258":1,"259":0,"261":0,"264":0,"265":0,"266":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"276":0,"277":0,"289":1,"290":0,"291":0,"302":1,"303":0,"304":0,"314":1,"315":0,"325":1,"326":0,"336":1,"337":0,"338":0,"339":0,"349":1,"350":0,"353":1,"361":1,"380":1,"381":1,"382":0,"384":0,"390":0,"391":0,"404":1,"405":0,"407":0,"410":0,"411":0,"413":0,"414":0,"416":0,"418":0,"420":0,"421":0,"424":0,"428":0,"444":1,"445":0,"446":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"456":0,"457":0,"459":0,"464":0,"467":1,"486":1,"487":0,"490":0,"493":0,"495":0,"510":1,"511":0,"515":0,"518":0,"519":0,"521":0,"522":0,"524":0,"526":0,"537":1,"538":1,"540":1,"541":0,"543":0,"548":0,"550":0,"554":0,"557":0,"561":0,"565":0,"569":0,"574":0,"575":0,"600":1,"601":0,"603":0,"604":0,"609":0,"613":0,"617":0,"620":0,"622":0,"625":0,"626":0,"627":0,"628":0,"630":0,"656":1,"657":0,"661":0,"663":0,"664":0,"665":0,"666":0,"668":0,"669":0,"673":0,"680":0,"683":0,"689":0,"693":0,"695":0,"713":1,"714":0,"718":0,"722":0,"724":0,"728":0,"734":0,"735":0,"738":0,"741":0,"759":1,"760":0,"770":1,"771":0,"774":0,"775":0,"780":0,"784":0,"786":0,"790":0,"792":0,"794":0,"798":0,"816":1,"821":0,"832":1,"833":0,"836":0,"837":0,"839":0,"841":0,"845":0,"847":0,"849":0,"850":0,"854":0,"871":1,"872":0,"876":0,"878":0,"882":0,"883":0,"886":0,"888":0,"892":0,"894":0,"895":0,"897":0,"899":0,"904":0,"905":0,"906":0,"908":0,"911":0,"912":0,"914":0,"921":0,"925":0,"928":0,"929":0,"934":0,"935":0,"938":0,"941":0,"942":0,"944":0,"948":0,"951":0,"952":0,"954":0,"959":0,"961":0,"972":1,"973":0,"974":0,"976":0,"977":0,"981":0,"983":0,"986":0,"987":0,"989":0,"990":0,"995":0,"997":0,"1000":0,"1001":0,"1011":1,"1012":0,"1013":0,"1016":1,"1027":1,"1028":1,"1030":1,"1031":0,"1033":0,"1035":0,"1036":0,"1053":1,"1056":0,"1058":0,"1063":0,"1064":0,"1070":0,"1071":0,"1075":0,"1089":1,"1091":0,"1092":0,"1096":0,"1099":0,"1101":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1120":0,"1124":0,"1126":0,"1127":0,"1128":0,"1134":0,"1135":0,"1136":0,"1143":0,"1147":0,"1149":0,"1150":0,"1151":0,"1152":0,"1158":0,"1159":0,"1160":0,"1176":1,"1180":0,"1185":0,"1187":0,"1203":1,"1204":0,"1207":0,"1210":0,"1211":0,"1214":0,"1225":1,"1226":0,"1229":0,"1231":0,"1232":0,"1237":0,"1238":0,"1240":0,"1243":0,"1247":0,"1253":0,"1255":0,"1271":1,"1272":0,"1274":0,"1276":0,"1277":0,"1280":0,"1282":0,"1283":0,"1284":0,"1287":0,"1289":0,"1290":0,"1291":0,"1293":0,"1294":0,"1298":0,"1311":1,"1312":0,"1314":0,"1316":0,"1318":0,"1331":1,"1332":0,"1334":0,"1337":0,"1338":0,"1339":0,"1342":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/syllables/legalipy.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/syllables/legalipy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":1,"83":0,"84":1,"85":0,"86":0,"87":1,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0,0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"_classCallCheck","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}}},"2":{"name":"clean","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":21}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":52},"end":{"line":58,"column":64}}},"4":{"name":"LegalipyTokenizer","line":59,"loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":31}}},"5":{"name":"train","line":78,"loc":{"start":{"line":78,"column":38},"end":{"line":78,"column":61}}},"6":{"name":"finalize","line":114,"loc":{"start":{"line":114,"column":41},"end":{"line":114,"column":61}}},"7":{"name":"(anonymous_7)","line":128,"loc":{"start":{"line":128,"column":24},"end":{"line":128,"column":41}}},"8":{"name":"tokenize","line":149,"loc":{"start":{"line":149,"column":41},"end":{"line":149,"column":65}}},"9":{"name":"_export","line":211,"loc":{"start":{"line":211,"column":39},"end":{"line":211,"column":58}}},"10":{"name":"toJSON","line":223,"loc":{"start":{"line":223,"column":39},"end":{"line":223,"column":57}}},"11":{"name":"_import","line":236,"loc":{"start":{"line":236,"column":39},"end":{"line":236,"column":63}}},"12":{"name":"defaultTokenizer","line":252,"loc":{"start":{"line":252,"column":0},"end":{"line":252,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":153}},"6":{"start":{"line":11,"column":50},"end":{"line":11,"column":151}},"7":{"start":{"line":11,"column":92},"end":{"line":11,"column":149}},"8":{"start":{"line":30,"column":0},"end":{"line":34,"column":23}},"9":{"start":{"line":46,"column":0},"end":{"line":48,"column":1}},"10":{"start":{"line":47,"column":2},"end":{"line":47,"column":75}},"11":{"start":{"line":58,"column":0},"end":{"line":242,"column":4}},"12":{"start":{"line":59,"column":2},"end":{"line":66,"column":3}},"13":{"start":{"line":60,"column":4},"end":{"line":60,"column":45}},"14":{"start":{"line":63,"column":4},"end":{"line":63,"column":26}},"15":{"start":{"line":64,"column":4},"end":{"line":64,"column":28}},"16":{"start":{"line":65,"column":4},"end":{"line":65,"column":27}},"17":{"start":{"line":78,"column":2},"end":{"line":105,"column":4}},"18":{"start":{"line":80,"column":4},"end":{"line":80,"column":139}},"19":{"start":{"line":80,"column":24},"end":{"line":80,"column":139}},"20":{"start":{"line":82,"column":4},"end":{"line":82,"column":20}},"21":{"start":{"line":85,"column":4},"end":{"line":99,"column":5}},"22":{"start":{"line":86,"column":6},"end":{"line":86,"column":35}},"23":{"start":{"line":88,"column":6},"end":{"line":98,"column":7}},"24":{"start":{"line":89,"column":8},"end":{"line":89,"column":23}},"25":{"start":{"line":91,"column":8},"end":{"line":95,"column":9}},"26":{"start":{"line":92,"column":10},"end":{"line":92,"column":32}},"27":{"start":{"line":94,"column":10},"end":{"line":94,"column":62}},"28":{"start":{"line":94,"column":35},"end":{"line":94,"column":51}},"29":{"start":{"line":94,"column":56},"end":{"line":94,"column":62}},"30":{"start":{"line":97,"column":8},"end":{"line":97,"column":38}},"31":{"start":{"line":97,"column":19},"end":{"line":97,"column":38}},"32":{"start":{"line":102,"column":4},"end":{"line":102,"column":85}},"33":{"start":{"line":104,"column":4},"end":{"line":104,"column":16}},"34":{"start":{"line":114,"column":2},"end":{"line":137,"column":4}},"35":{"start":{"line":115,"column":4},"end":{"line":115,"column":21}},"36":{"start":{"line":117,"column":4},"end":{"line":117,"column":26}},"37":{"start":{"line":120,"column":4},"end":{"line":120,"column":68}},"38":{"start":{"line":123,"column":4},"end":{"line":125,"column":5}},"39":{"start":{"line":124,"column":6},"end":{"line":124,"column":62}},"40":{"start":{"line":124,"column":43},"end":{"line":124,"column":62}},"41":{"start":{"line":128,"column":4},"end":{"line":131,"column":7}},"42":{"start":{"line":129,"column":6},"end":{"line":129,"column":62}},"43":{"start":{"line":129,"column":28},"end":{"line":129,"column":62}},"44":{"start":{"line":130,"column":6},"end":{"line":130,"column":62}},"45":{"start":{"line":130,"column":28},"end":{"line":130,"column":62}},"46":{"start":{"line":134,"column":4},"end":{"line":134,"column":28}},"47":{"start":{"line":136,"column":4},"end":{"line":136,"column":16}},"48":{"start":{"line":149,"column":2},"end":{"line":202,"column":4}},"49":{"start":{"line":150,"column":4},"end":{"line":150,"column":167}},"50":{"start":{"line":150,"column":25},"end":{"line":150,"column":167}},"51":{"start":{"line":152,"column":4},"end":{"line":152,"column":58}},"52":{"start":{"line":154,"column":4},"end":{"line":154,"column":23}},"53":{"start":{"line":156,"column":4},"end":{"line":199,"column":5}},"54":{"start":{"line":157,"column":6},"end":{"line":157,"column":27}},"55":{"start":{"line":159,"column":6},"end":{"line":161,"column":35}},"56":{"start":{"line":164,"column":6},"end":{"line":196,"column":7}},"57":{"start":{"line":165,"column":8},"end":{"line":166,"column":50}},"58":{"start":{"line":168,"column":8},"end":{"line":168,"column":53}},"59":{"start":{"line":170,"column":8},"end":{"line":195,"column":9}},"60":{"start":{"line":172,"column":10},"end":{"line":172,"column":54}},"61":{"start":{"line":174,"column":10},"end":{"line":177,"column":11}},"62":{"start":{"line":175,"column":12},"end":{"line":175,"column":38}},"63":{"start":{"line":176,"column":12},"end":{"line":176,"column":21}},"64":{"start":{"line":178,"column":15},"end":{"line":195,"column":9}},"65":{"start":{"line":180,"column":10},"end":{"line":194,"column":11}},"66":{"start":{"line":181,"column":12},"end":{"line":181,"column":56}},"67":{"start":{"line":182,"column":17},"end":{"line":194,"column":11}},"68":{"start":{"line":183,"column":12},"end":{"line":183,"column":56}},"69":{"start":{"line":184,"column":12},"end":{"line":184,"column":31}},"70":{"start":{"line":185,"column":17},"end":{"line":194,"column":11}},"71":{"start":{"line":186,"column":12},"end":{"line":186,"column":56}},"72":{"start":{"line":187,"column":17},"end":{"line":194,"column":11}},"73":{"start":{"line":188,"column":12},"end":{"line":188,"column":40}},"74":{"start":{"line":189,"column":12},"end":{"line":189,"column":45}},"75":{"start":{"line":191,"column":12},"end":{"line":191,"column":40}},"76":{"start":{"line":192,"column":12},"end":{"line":192,"column":45}},"77":{"start":{"line":193,"column":12},"end":{"line":193,"column":37}},"78":{"start":{"line":198,"column":6},"end":{"line":198,"column":41}},"79":{"start":{"line":201,"column":4},"end":{"line":201,"column":21}},"80":{"start":{"line":211,"column":2},"end":{"line":215,"column":4}},"81":{"start":{"line":212,"column":4},"end":{"line":214,"column":6}},"82":{"start":{"line":223,"column":2},"end":{"line":225,"column":4}},"83":{"start":{"line":224,"column":4},"end":{"line":224,"column":25}},"84":{"start":{"line":236,"column":2},"end":{"line":239,"column":4}},"85":{"start":{"line":237,"column":4},"end":{"line":237,"column":20}},"86":{"start":{"line":238,"column":4},"end":{"line":238,"column":40}},"87":{"start":{"line":241,"column":2},"end":{"line":241,"column":27}},"88":{"start":{"line":252,"column":0},"end":{"line":262,"column":1}},"89":{"start":{"line":253,"column":2},"end":{"line":253,"column":42}},"90":{"start":{"line":254,"column":2},"end":{"line":254,"column":26}},"91":{"start":{"line":255,"column":2},"end":{"line":255,"column":23}},"92":{"start":{"line":257,"column":2},"end":{"line":257,"column":43}},"93":{"start":{"line":259,"column":2},"end":{"line":261,"column":3}},"94":{"start":{"line":260,"column":4},"end":{"line":260,"column":49}},"95":{"start":{"line":261,"column":3},"end":{"line":261,"column":20}},"96":{"start":{"line":263,"column":0},"end":{"line":263,"column":36}},"97":{"start":{"line":264,"column":0},"end":{"line":264,"column":65}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":50},"end":{"line":11,"column":50}},{"start":{"line":11,"column":50},"end":{"line":11,"column":50}}]},"2":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"3":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":6},"end":{"line":88,"column":6}},{"start":{"line":88,"column":6},"end":{"line":88,"column":6}}]},"4":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":10},"end":{"line":94,"column":10}},{"start":{"line":94,"column":10},"end":{"line":94,"column":10}}]},"5":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":8}},{"start":{"line":97,"column":8},"end":{"line":97,"column":8}}]},"6":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":6},"end":{"line":124,"column":6}},{"start":{"line":124,"column":6},"end":{"line":124,"column":6}}]},"7":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":6}},{"start":{"line":129,"column":6},"end":{"line":129,"column":6}}]},"8":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]},"9":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"10":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":22},"end":{"line":152,"column":43}},{"start":{"line":152,"column":47},"end":{"line":152,"column":49}}]},"11":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"12":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":8}},{"start":{"line":170,"column":8},"end":{"line":170,"column":8}}]},"13":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":10},"end":{"line":174,"column":10}},{"start":{"line":174,"column":10},"end":{"line":174,"column":10}}]},"14":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":15},"end":{"line":178,"column":15}},{"start":{"line":178,"column":15},"end":{"line":178,"column":15}}]},"15":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":10},"end":{"line":180,"column":10}},{"start":{"line":180,"column":10},"end":{"line":180,"column":10}}]},"16":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":17},"end":{"line":182,"column":17}},{"start":{"line":182,"column":17},"end":{"line":182,"column":17}}]},"17":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":21},"end":{"line":182,"column":44}},{"start":{"line":182,"column":48},"end":{"line":182,"column":71}},{"start":{"line":182,"column":75},"end":{"line":182,"column":112}},{"start":{"line":182,"column":116},"end":{"line":182,"column":139}},{"start":{"line":182,"column":143},"end":{"line":182,"column":189}},{"start":{"line":182,"column":193},"end":{"line":182,"column":216}},{"start":{"line":182,"column":220},"end":{"line":182,"column":266}},{"start":{"line":182,"column":270},"end":{"line":182,"column":293}}]},"18":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":17},"end":{"line":185,"column":17}},{"start":{"line":185,"column":17},"end":{"line":185,"column":17}}]},"19":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":21},"end":{"line":185,"column":39}},{"start":{"line":185,"column":43},"end":{"line":185,"column":55}}]},"20":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":17},"end":{"line":187,"column":17}},{"start":{"line":187,"column":17},"end":{"line":187,"column":17}}]},"21":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":21},"end":{"line":187,"column":39}},{"start":{"line":187,"column":43},"end":{"line":187,"column":54}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.LegalipyTokenizer = undefined;","exports.default = defaultTokenizer;","","var _frequencies = require('../../stats/frequencies');","","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**","                                                                                                                                                           * Talisman tokenizers/syllables/legalipyanguage-independent syllabification from raw text based on the Onset","                                                                                                                                                           * Maximization Principle (principle of legality).","                                                                                                                                                           *","                                                                                                                                                           * [Reference]:","                                                                                                                                                           * https://github.com/henchc/LegaliPy","                                                                                                                                                           * http://syllabipy.com/index.php/legalipy-demo/","                                                                                                                                                           *","                                                                                                                                                           * [Author]:","                                                                                                                                                           * Christopher Hench (UC Berkeley)","                                                                                                                                                           */","","","/**"," * Constants."," */","var VOWELS_STRING = 'aeiouyàáâäæãåāèéêëēėęîïíīįìôöòóœøōõûüùúūůÿ',","    VOWELS_RE = new RegExp('[' + VOWELS_STRING + ']', 'g'),","    VOWELS = new Set(VOWELS_STRING),","    PUNCTUATION_RE = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~]/g,","    THRESHOLD = 0.0002;","","/**"," * Helpers."," */","","/**"," * Function used to clean the word and prepare it for the trainer."," *"," * @param  {string} word - The target word."," * @return {string}      - The cleaned word."," */","function clean(word) {","  return word.toLowerCase().replace(PUNCTUATION_RE, '').replace(/\\d/g, '');","}","","/**"," * Class representing the Legalipy tokenizer. Must be trained before use by"," * providing text tokens in which we will search for relevant onsets."," *"," * @constructor"," * @param {object} options - Possible options."," */","","var LegalipyTokenizer = exports.LegalipyTokenizer = function () {","  function LegalipyTokenizer() {","    _classCallCheck(this, LegalipyTokenizer);","","    // Properties","    this.frequencies = {};","    this.onsets = new Set();","    this.finalized = false;","  }","","  /**","   * Method used to train the onsets.","   *","   * @param  {array}             tokens - Word tokens.","   * @return {LegalipyTokenizer}        - Returns itself for chaining.","   *","   * @throws {Error} - Will throw if the tokenizer has finalized its training.","   */","","","  LegalipyTokenizer.prototype.train = function train(tokens) {","","    if (this.finalized) throw new Error('talisman/tokenizers/syllables/legalipy.train: the tokenizer has already finalized its training.');","","    var onsets = [];","","    // Iterating through the tokens","    for (var i = 0, l = tokens.length; i < l; i++) {","      var token = clean(tokens[i]);","","      if (token) {","        var onset = '';","","        for (var j = 0, m = token.length; j < m; j++) {","          var letter = token[j];","","          if (!VOWELS.has(letter)) onset += letter;else break;","        }","","        if (onset) onsets.push(onset);","      }","    }","","    // Updating frequencies","    this.frequencies = (0, _frequencies.updateFrequencies)(this.frequencies, onsets);","","    return this;","  };","","  /**","   * Method used to finalize the training.","   *","   * @return {LegalipyTokenizer} - Returns itself for chaining.","   */","","","  LegalipyTokenizer.prototype.finalize = function finalize() {","    var _this = this;","","    this.finalized = true;","","    // Computing relative frequencies of the onsets","    this.frequencies = (0, _frequencies.relative)(this.frequencies);","","    // Keeping onsets whose frequency is superior to threshold","    for (var k in this.frequencies) {","      if (this.frequencies[k] > THRESHOLD) this.onsets.add(k);","    }","","    // Adding shorter subsets of onsets longer than 2 characters","    this.onsets.forEach(function (onset) {","      if (onset.length > 2) _this.onsets.add(onset.slice(-2));","      if (onset.length > 3) _this.onsets.add(onset.slice(-3));","    });","","    // Releasing frequencies from memory","    this.frequencies = null;","","    return this;","  };","","  /**","   * Method used to tokenize words into syllables once trained.","   *","   * @param  {string} word - Target word.","   * @return {array}       - An array of syllables.","   *","   * @throws {Error} - Will throw if the tokenizer hasn't finalized its training.","   */","","","  LegalipyTokenizer.prototype.tokenize = function tokenize(word) {","    if (!this.finalized) throw new Error('talisman/tokenizers/syllables/legalipy.train: you should finalize the tokenizer\\'s training before being able to tokenize.');","","    var vowelCount = (word.match(VOWELS_RE) || []).length;","","    var syllables = [];","","    if (vowelCount <= 1) {","      syllables.push(word);","    } else {","      var currentSyllable = '',","          onsetBinary = false,","          newSyllableBinary = true;","","      // Iterating on the letters in reverse","      for (var i = word.length - 1; i >= 0; i--) {","        var originalLetter = word[i],","            letter = originalLetter.toLowerCase();","","        var syllable = currentSyllable.toLowerCase();","","        if (newSyllableBinary) {","","          currentSyllable = originalLetter + syllable;","","          if (VOWELS.has(letter)) {","            newSyllableBinary = false;","            continue;","          }","        } else if (!newSyllableBinary) {","","          if (!syllable) {","            currentSyllable = originalLetter + syllable;","          } else if (this.onsets.has(letter) && VOWELS.has(syllable[0]) || this.onsets.has(letter + syllable[0]) && VOWELS.has(syllable[1]) || this.onsets.has(letter + syllable.slice(0, 2)) && VOWELS.has(syllable[2]) || this.onsets.has(letter + syllable.slice(0, 3)) && VOWELS.has(syllable[3])) {","            currentSyllable = originalLetter + syllable;","            onsetBinary = true;","          } else if (VOWELS.has(letter) && !onsetBinary) {","            currentSyllable = originalLetter + syllable;","          } else if (VOWELS.has(letter) && onsetBinary) {","            syllables.unshift(syllable);","            currentSyllable = originalLetter;","          } else {","            syllables.unshift(syllable);","            currentSyllable = originalLetter;","            newSyllableBinary = true;","          }","        }","      }","","      syllables.unshift(currentSyllable);","    }","","    return syllables;","  };","","  /**","   * Method used to export the tokenizer's onsets.","   *","   * @return {object} - An object containing the necessary metadata.","   */","","","  LegalipyTokenizer.prototype.export = function _export() {","    return {","      onsets: Array.from(this.onsets)","    };","  };","","  /**","   * Method used to force JSON.stringify to format the tokenizer using the","   * #.export method.","   */","","","  LegalipyTokenizer.prototype.toJSON = function toJSON() {","    return this.export();","  };","","  /**","   * Method used to import an existing model instead of having to train the","   * tokenizer.","   *","   * @param  {object}            model - The model to import.","   * @return {LegalipyTokenizer}       - Returns itself for chaining.","   */","","","  LegalipyTokenizer.prototype.import = function _import(model) {","    this.finalize();","    this.onsets = new Set(model.onsets);","  };","","  return LegalipyTokenizer;","}();","","/**"," * Function that can be used to tokenize a series of word tokens on the fly."," *"," * @param  {array} tokens - Word tokens."," * @return {array}        - A list of word tokenized as syllables."," */","","","function defaultTokenizer(tokens) {","  var tokenizer = new LegalipyTokenizer();","  tokenizer.train(tokens);","  tokenizer.finalize();","","  var newTokens = new Array(tokens.length);","","  for (var i = 0, l = tokens.length; i < l; i++) {","    newTokens[i] = tokenizer.tokenize(tokens[i]);","  }return newTokens;","}","module.exports = exports['default'];","exports['default'].LegalipyTokenizer = exports.LegalipyTokenizer;"],"l":{"3":1,"6":1,"7":1,"9":1,"11":1,"30":1,"46":1,"47":0,"58":1,"59":1,"60":0,"63":0,"64":0,"65":0,"78":1,"80":0,"82":0,"85":0,"86":0,"88":0,"89":0,"91":0,"92":0,"94":0,"97":0,"102":0,"104":0,"114":1,"115":0,"117":0,"120":0,"123":0,"124":0,"128":0,"129":0,"130":0,"134":0,"136":0,"149":1,"150":0,"152":0,"154":0,"156":0,"157":0,"159":0,"164":0,"165":0,"168":0,"170":0,"172":0,"174":0,"175":0,"176":0,"178":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"191":0,"192":0,"193":0,"198":0,"201":0,"211":1,"212":0,"223":1,"224":0,"236":1,"237":0,"238":0,"241":1,"252":1,"253":0,"254":0,"255":0,"257":0,"259":0,"260":0,"261":0,"263":1,"264":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/syllables/sonoripy.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/syllables/sonoripy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1,"22":1,"23":0,"24":1,"25":1,"26":1,"27":4,"28":4,"29":26,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":1,"61":1,"62":1,"63":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[1,0],"5":[0,1],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":1,"4":4,"5":26,"6":0},"fnMap":{"1":{"name":"strip","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":23}}},"2":{"name":"merge","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":39}}},"3":{"name":"createTokenizer","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":34}}},"4":{"name":"(anonymous_4)","line":96,"loc":{"start":{"line":96,"column":20},"end":{"line":96,"column":40}}},"5":{"name":"(anonymous_5)","line":100,"loc":{"start":{"line":100,"column":20},"end":{"line":100,"column":38}}},"6":{"name":"(anonymous_6)","line":114,"loc":{"start":{"line":114,"column":9},"end":{"line":114,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"4":{"start":{"line":29,"column":0},"end":{"line":33,"column":2}},"5":{"start":{"line":46,"column":0},"end":{"line":48,"column":1}},"6":{"start":{"line":47,"column":2},"end":{"line":47,"column":68}},"7":{"start":{"line":59,"column":0},"end":{"line":74,"column":1}},"8":{"start":{"line":60,"column":2},"end":{"line":61,"column":17}},"9":{"start":{"line":63,"column":2},"end":{"line":71,"column":3}},"10":{"start":{"line":64,"column":4},"end":{"line":64,"column":32}},"11":{"start":{"line":66,"column":4},"end":{"line":70,"column":5}},"12":{"start":{"line":67,"column":6},"end":{"line":67,"column":142}},"13":{"start":{"line":67,"column":33},"end":{"line":67,"column":51}},"14":{"start":{"line":67,"column":56},"end":{"line":67,"column":142}},"15":{"start":{"line":69,"column":6},"end":{"line":69,"column":104}},"16":{"start":{"line":69,"column":33},"end":{"line":69,"column":70}},"17":{"start":{"line":69,"column":75},"end":{"line":69,"column":104}},"18":{"start":{"line":73,"column":2},"end":{"line":73,"column":23}},"19":{"start":{"line":83,"column":0},"end":{"line":184,"column":1}},"20":{"start":{"line":84,"column":2},"end":{"line":84,"column":26}},"21":{"start":{"line":86,"column":2},"end":{"line":86,"column":36}},"22":{"start":{"line":88,"column":2},"end":{"line":88,"column":106}},"23":{"start":{"line":88,"column":18},"end":{"line":88,"column":106}},"24":{"start":{"line":90,"column":2},"end":{"line":91,"column":34}},"25":{"start":{"line":94,"column":2},"end":{"line":94,"column":15}},"26":{"start":{"line":96,"column":2},"end":{"line":103,"column":5}},"27":{"start":{"line":97,"column":4},"end":{"line":98,"column":41}},"28":{"start":{"line":100,"column":4},"end":{"line":102,"column":7}},"29":{"start":{"line":101,"column":6},"end":{"line":101,"column":33}},"30":{"start":{"line":106,"column":2},"end":{"line":106,"column":51}},"31":{"start":{"line":114,"column":2},"end":{"line":183,"column":4}},"32":{"start":{"line":117,"column":4},"end":{"line":117,"column":37}},"33":{"start":{"line":120,"column":4},"end":{"line":120,"column":23}},"34":{"start":{"line":121,"column":4},"end":{"line":121,"column":27}},"35":{"start":{"line":123,"column":4},"end":{"line":130,"column":5}},"36":{"start":{"line":124,"column":6},"end":{"line":125,"column":45}},"37":{"start":{"line":127,"column":6},"end":{"line":127,"column":51}},"38":{"start":{"line":127,"column":38},"end":{"line":127,"column":51}},"39":{"start":{"line":129,"column":6},"end":{"line":129,"column":53}},"40":{"start":{"line":133,"column":4},"end":{"line":133,"column":23}},"41":{"start":{"line":136,"column":4},"end":{"line":136,"column":39}},"42":{"start":{"line":136,"column":25},"end":{"line":136,"column":39}},"43":{"start":{"line":138,"column":4},"end":{"line":138,"column":39}},"44":{"start":{"line":140,"column":4},"end":{"line":177,"column":5}},"45":{"start":{"line":141,"column":6},"end":{"line":145,"column":56}},"46":{"start":{"line":149,"column":6},"end":{"line":176,"column":11}},"47":{"start":{"line":150,"column":8},"end":{"line":150,"column":28}},"48":{"start":{"line":151,"column":8},"end":{"line":151,"column":33}},"49":{"start":{"line":155,"column":11},"end":{"line":176,"column":11}},"50":{"start":{"line":156,"column":10},"end":{"line":156,"column":30}},"51":{"start":{"line":157,"column":10},"end":{"line":157,"column":35}},"52":{"start":{"line":158,"column":10},"end":{"line":158,"column":24}},"53":{"start":{"line":159,"column":15},"end":{"line":176,"column":11}},"54":{"start":{"line":160,"column":10},"end":{"line":160,"column":35}},"55":{"start":{"line":161,"column":10},"end":{"line":161,"column":29}},"56":{"start":{"line":175,"column":12},"end":{"line":175,"column":32}},"57":{"start":{"line":180,"column":4},"end":{"line":180,"column":54}},"58":{"start":{"line":182,"column":4},"end":{"line":182,"column":25}},"59":{"start":{"line":189,"column":0},"end":{"line":189,"column":73}},"60":{"start":{"line":190,"column":0},"end":{"line":190,"column":35}},"61":{"start":{"line":191,"column":0},"end":{"line":191,"column":36}},"62":{"start":{"line":192,"column":0},"end":{"line":192,"column":41}},"63":{"start":{"line":193,"column":0},"end":{"line":193,"column":61}}},"branchMap":{"1":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"4":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":12},"end":{"line":84,"column":19}},{"start":{"line":84,"column":23},"end":{"line":84,"column":25}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"6":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":6}},{"start":{"line":127,"column":6},"end":{"line":127,"column":6}}]},"7":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":34},"end":{"line":129,"column":45}},{"start":{"line":129,"column":49},"end":{"line":129,"column":50}}]},"8":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"9":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":25},"end":{"line":144,"column":46}},{"start":{"line":144,"column":50},"end":{"line":144,"column":52}}]},"10":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":24},"end":{"line":145,"column":45}},{"start":{"line":145,"column":49},"end":{"line":145,"column":51}}]},"11":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]},"12":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":11},"end":{"line":155,"column":11}},{"start":{"line":155,"column":11},"end":{"line":155,"column":11}}]},"13":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":15},"end":{"line":155,"column":35}},{"start":{"line":155,"column":39},"end":{"line":155,"column":60}},{"start":{"line":155,"column":64},"end":{"line":155,"column":84}},{"start":{"line":155,"column":88},"end":{"line":155,"column":107}}]},"14":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":15},"end":{"line":159,"column":15}},{"start":{"line":159,"column":15},"end":{"line":159,"column":15}}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":19},"end":{"line":159,"column":37}},{"start":{"line":159,"column":41},"end":{"line":159,"column":60}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: false","});","exports.merge = merge;","exports.createTokenizer = createTokenizer;","/* eslint brace-style: 0 */","/**"," * Talisman tokenizers/syllables/sonoripy"," * ======================================="," *"," * Language-independent syllabification algorithm following the sonority"," * sequencing principle. As opposed to LegaliPy, this algorithm doesn't need"," * to be trained on word tokens but must be provided with the target"," * language's sonority hierarchy."," *"," * [Reference]:"," * https://github.com/henchc/SonoriPy"," *"," * [Authors]:"," * Christopher Hench (UC Berkeley)"," * Alex Estes"," */","","/**"," * Constants."," */","var DEFAULT_HIERARCHY = ['aeiouy', // Vowels      3pts","'lmnrw', // Nasals      2pts","'zvsf', // Fricatives  1pts","'bcdgtkpqxhj' // Stops       0pts","];","","/**"," * Helpers."," */","","/**"," * Function dropping some useless leading & trailing characters in the given"," * string."," *"," * @param  {string} string - Target string."," * @return {string}        - The stripped string."," */","function strip(string) {","  return string.replace(/(?:^[.:;?!()'\"]+)|(?:[.:;?!()'\"]+$)/g, '');","}","","/**"," * Function used to retokenize syllables tokens by avoiding parts that would"," * not have vowels at all by merging them with the precedent token."," *"," * @param  {RegExp} vowelsRegex - The regex used to test the presence of"," *                                vowels in the syllables."," * @param  {array}  syllables   - The tokens."," * @return {array}              - The merged tokens."," */","function merge(vowelsRegex, syllables) {","  var safeSyllables = [],","      front = '';","","  for (var i = 0, l = syllables.length; i < l; i++) {","    var syllable = syllables[i];","","    if (!vowelsRegex.test(syllable)) {","      if (!safeSyllables.length) front += syllable;else safeSyllables = safeSyllables.slice(0, -1).concat(safeSyllables.slice(-1) + syllable);","    } else {","      if (!safeSyllables.length) safeSyllables.push(front + syllable);else safeSyllables.push(syllable);","    }","  }","","  return safeSyllables;","}","","/**"," * Tokenizer function factory aiming at building the required function."," *"," * @param  {object}   options              - Possible options:"," * @param  {array}    [options.hierarchy]  - Target language's hierarchy."," * @return {function}                      - The tokenizer function."," */","function createTokenizer(options) {","  options = options || {};","","  var hierarchy = options.hierarchy;","","  if (!hierarchy) throw new Error('talisman/tokenizers/syllables/sonoripy: a hierachy must be provided.');","","  var vowels = hierarchy[0],","      vowelsSet = new Set(vowels);","","  // Creating the map of values","  var map = {};","","  hierarchy.forEach(function (level, i) {","    var letters = level.split(''),","        value = hierarchy.length - i - 1;","","    letters.forEach(function (letter) {","      return map[letter] = value;","    });","  });","","  // Creating a vowel regex","  var vowelsRegex = new RegExp('[' + vowels + ']');","","  /**","   * Created tokenizer function.","   *","   * @param  {string} word - The word to tokenize.","   * @return {array}       - The syllables as tokens.","   */","  return function (word) {","","    // Normalizing the word","    var normalizedWord = strip(word);","","    //-- 1) Tagging letters & counting vowels","    var vowelCount = 0;","    var taggedLetters = [];","","    for (var i = 0, l = normalizedWord.length; i < l; i++) {","      var letter = normalizedWord[i],","          lowerLetter = letter.toLowerCase();","","      if (vowelsSet.has(lowerLetter)) vowelCount++;","","      taggedLetters.push([letter, map[letter] || 0]);","    }","","    //-- 2) Dividing the syllables","    var syllables = [];","","    // If the word is monosyllabic, we can stop right there","    if (vowelCount <= 1) return [word];","","    var syllable = taggedLetters[0][0];","","    for (var _i = 1, _l = taggedLetters.length; _i < _l; _i++) {","      var _taggedLetters$_i = taggedLetters[_i],","          _letter = _taggedLetters$_i[0],","          value = _taggedLetters$_i[1],","          valueBefore = (taggedLetters[_i - 1] || [])[1],","          valueAfter = (taggedLetters[_i + 1] || [])[1];","","      // If we reached the end of the word","","      if (_i === _l - 1) {","        syllable += _letter;","        syllables.push(syllable);","      }","","      // Cases triggering syllable break","      else if (value === valueAfter && value === valueBefore || value === valueAfter && value < valueBefore) {","          syllable += _letter;","          syllables.push(syllable);","          syllable = '';","        } else if (value < valueAfter && value < valueBefore) {","          syllables.push(syllable);","          syllable = _letter;","        }","","        // Cases that do not trigger syllable break","        // (I dropped the condition & placed it as else because it hurts","        // performance otherwise)","        else /* if (","             (value < valueAfter && value > valueBefore) ||","             (value > valueAfter && value < valueBefore) ||","             (value > valueAfter && value > valueBefore) ||","             (value > valueAfter && value === valueBefore) ||","             (value === valueAfter && value > valueBefore) ||","             (value < valueAfter && value === valueBefore)","             ) */{","            syllable += _letter;","          }","    }","","    //-- 3) Ensuring we don't have a syllable without vowel","    var safeSyllables = merge(vowelsRegex, syllables);","","    return safeSyllables;","  };","}","","/**"," * Exporting a default version of the tokenizer."," */","var defaultTokenizer = createTokenizer({ hierarchy: DEFAULT_HIERARCHY });","exports.default = defaultTokenizer;","module.exports = exports['default'];","exports['default'].merge = exports.merge;","exports['default'].createTokenizer = exports.createTokenizer;"],"l":{"3":1,"6":1,"7":1,"29":1,"46":1,"47":0,"59":1,"60":0,"63":0,"64":0,"66":0,"67":0,"69":0,"73":0,"83":1,"84":1,"86":1,"88":1,"90":1,"94":1,"96":1,"97":4,"100":4,"101":26,"106":1,"114":1,"117":0,"120":0,"121":0,"123":0,"124":0,"127":0,"129":0,"133":0,"136":0,"138":0,"140":0,"141":0,"149":0,"150":0,"151":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"175":0,"180":0,"182":0,"189":1,"190":1,"191":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/tweets/casual.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/tweets/casual.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":23,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":33}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":50}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":57}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":41}},"7":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":30}},"9":{"start":{"line":22,"column":3},"end":{"line":22,"column":17}},"10":{"start":{"line":25,"column":0},"end":{"line":25,"column":40}},"11":{"start":{"line":27,"column":0},"end":{"line":27,"column":45}},"12":{"start":{"line":43,"column":0},"end":{"line":43,"column":51}},"13":{"start":{"line":48,"column":0},"end":{"line":48,"column":170}},"14":{"start":{"line":52,"column":0},"end":{"line":55,"column":101}},"15":{"start":{"line":57,"column":0},"end":{"line":78,"column":171}},"16":{"start":{"line":82,"column":0},"end":{"line":83,"column":38}},"17":{"start":{"line":91,"column":0},"end":{"line":91,"column":36}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","exports.default = function (tweet) {","","  // Fixing HTML entities","  tweet = ENTITIES.decode(tweet);","","  // Shorten problematic sequences of characters","  var safeText = tweet.replace(HANG_RE, '$1$1$1');","","  // Actual tokenizing","  var matches = (0, _helpers.findall)(WORD_RE, safeText);","","  var tokens = new Array(matches.length);","","  for (var i = 0, l = matches.length; i < l; i++) {","    tokens[i] = matches[i][0];","  }return tokens;","};","","var _helpers = require('../../helpers');","","var _htmlEntities = require('html-entities');","","/**"," * Talisman tokenizers/tweets/casual"," * =================================="," *"," * Implementation of the Casual tweets tokenizer from the nltk project."," *"," * [Reference]:"," * http://www.nltk.org/api/nltk.tokenize.html#module-nltk.tokenize.casual"," *"," * [Authors]:"," * Christopher Potts"," * Ewan Klein"," * Pierpaolo Pantone"," */","var ENTITIES = new _htmlEntities.AllHtmlEntities();","","/**"," * Regexes."," */","var EMOTICONS = ['(?:', '[<>]?', '[:;=8]', '[\\\\-o*\\']?', '[)\\\\](\\\\[dDpP/:}{@|\\]', '|', '[)\\\\](\\\\[dDpP/:}{@|\\]', '[\\\\-o*\\']?', '[:;=8]', '[<>]?', '|', '<3', ')'].join('');","","// URL pattern due to John Gruber, modified by Tom Winzig. See","// https://gist.github.com/winzig/8894715","var URLS = ['(?:', 'https?:', '(?:', '\\\\/{1,3}', '|', '[a-z0-9%]', ')', '|', '[a-z0-9.\\\\-]+[.]', '(?:[a-z]{2,13})', '\\\\/', ')', '(?:', '[^\\\\s()<>{}\\\\[\\\\]]+', '|', '\\\\([^\\\\s()]*?\\\\([^\\\\s()]+\\\\)[^\\\\s()]*?\\\\)', '|', '\\\\([^\\\\s]+?\\\\)', ')+', '(?:', '\\\\([^\\\\s()]*?\\\\([^\\\\s()]+\\\\)[^\\\\s()]*?\\\\)', '|', '\\\\([^\\\\s]+?\\\\)', '|', '[^\\\\s`!()\\\\[\\\\]{};:\\'\".,<>?«»“”‘’]', ')', '|', '(?:',","// NOTE: Lookbehind doesn't work in JavaScript. Skipping this for now.","// '(?<!@)',","'[a-z0-9]+', '(?:[.\\\\-][a-z0-9]+)*', '[.]', '(?:[a-z]{2,13})', '\\\\b', '\\\\/?', '(?!@)', ')'].join('');","","var REGEXPS = [URLS,","","// Phone numbers","['(?:', '(?:', '\\\\+?[01]', '[\\\\-\\\\s.]*', ')?', '(?:', '[\\\\(]?', '\\\\d{3}', '[\\\\-\\\\s.)]*', ')?', '\\\\d{3}', '[\\\\-\\\\s.]*', '\\\\d{4}', ')'].join(''), EMOTICONS,","","// HTML Tags","'<[^>\\\\s]+>',","","// ASCII Arrows","'[\\\\-]+>|<[\\\\-]+',","","// Twitter Usernames","'(?:@[\\\\w_]+)',","","// Twitter hashtags","'(?:\\\\#+[\\\\w_]+[\\\\w\\'_\\\\-]*[\\\\w_]+)',","","// Email addresses","'[\\\\w.+-]+@[\\\\w-]+\\\\.(?:[\\\\w-]\\\\.?)+[\\\\w-]',","","// Remaining word types","['(?:[^\\\\W\\\\d_](?:[^\\\\W\\\\d_]|[\\'\\\\-_])+[^\\\\W\\\\d_])', '|', '(?:[+\\\\-]?\\d+[,/.:-]\\\\d+[+\\\\-]?)', '|', '(?:[\\\\w_]+)', '|', '(?:\\\\.(?:\\\\s*\\\\.){1,})', '|', '(?:\\\\S)'].join('')];","","// NOTE: build unicode support","","var WORD_RE = new RegExp('(' + REGEXPS.join('|') + ')', 'ig'),","    HANG_RE = /([^a-zA-Z0-9])\\1{3,}/g;","","/**"," * Function a single tweet into a sequence of tokens."," *"," * @param  {string} tweet - The tweet to tokenize."," * @return {array}        - The tokens."," */","module.exports = exports['default'];"],"l":{"3":1,"7":1,"10":0,"13":0,"16":0,"18":0,"20":0,"21":0,"22":0,"25":1,"27":1,"43":1,"48":1,"52":1,"57":1,"82":1,"91":1}},"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/words/treebank.js":{"path":"/home/travis/build/npmtest/node-npmtest-talisman/node_modules/talisman/tokenizers/words/treebank.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"applyContractions","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":60}}},"2":{"name":"applyRules","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":33}}},"3":{"name":"tokenize","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":24}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":37},"end":{"line":71,"column":54}}},"5":{"name":"(anonymous_5)","line":73,"loc":{"start":{"line":73,"column":12},"end":{"line":73,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":173}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":56}},"5":{"start":{"line":24,"column":0},"end":{"line":24,"column":68}},"6":{"start":{"line":26,"column":0},"end":{"line":30,"column":1}},"7":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":54}},"9":{"start":{"line":29,"column":3},"end":{"line":29,"column":15}},"10":{"start":{"line":35,"column":0},"end":{"line":35,"column":85}},"11":{"start":{"line":37,"column":0},"end":{"line":37,"column":211}},"12":{"start":{"line":39,"column":0},"end":{"line":39,"column":75}},"13":{"start":{"line":41,"column":0},"end":{"line":41,"column":168}},"14":{"start":{"line":43,"column":0},"end":{"line":47,"column":1}},"15":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"16":{"start":{"line":45,"column":4},"end":{"line":45,"column":50}},"17":{"start":{"line":46,"column":3},"end":{"line":46,"column":15}},"18":{"start":{"line":55,"column":0},"end":{"line":78,"column":1}},"19":{"start":{"line":58,"column":2},"end":{"line":58,"column":43}},"20":{"start":{"line":59,"column":2},"end":{"line":59,"column":39}},"21":{"start":{"line":60,"column":2},"end":{"line":60,"column":43}},"22":{"start":{"line":62,"column":2},"end":{"line":62,"column":26}},"23":{"start":{"line":64,"column":2},"end":{"line":64,"column":41}},"24":{"start":{"line":67,"column":2},"end":{"line":67,"column":59}},"25":{"start":{"line":68,"column":2},"end":{"line":68,"column":59}},"26":{"start":{"line":69,"column":2},"end":{"line":69,"column":62}},"27":{"start":{"line":71,"column":2},"end":{"line":75,"column":5}},"28":{"start":{"line":72,"column":4},"end":{"line":72,"column":24}},"29":{"start":{"line":74,"column":4},"end":{"line":74,"column":17}},"30":{"start":{"line":77,"column":2},"end":{"line":77,"column":16}},"31":{"start":{"line":79,"column":0},"end":{"line":79,"column":36}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.default = tokenize;","/**"," * Talisman tokenizers/words/treebank"," * ==================================="," *"," * Implementation of the Treebank word tokenizer."," *"," * [Original script]:"," * http://www.cis.upenn.edu/~treebank/tokenizer.sed"," */","","/**"," * Contractions."," */","var CONTRACTIONS2 = [/\\b(can)(not)\\b/gi, /\\b(d)('ye)\\b/gi, /\\b(gim)(me)\\b/gi, /\\b(gon)(na)\\b/gi, /\\b(got)(ta)\\b/gi, /\\b(lem)(me)\\b/gi, /\\b(mor)('n)\\b/gi, /\\b(wan)(na) \"/gi];","","var CONTRACTIONS3 = [/ ('t)(is)\\b/gi, / ('t)(was)\\b/gi];","","var CONTRACTIONS4 = [/\\b(whad)(dd)(ya)\\b/gi, /\\b(wha)(t)(cha)\\b/gi];","","function applyContractions(contractions, replacement, text) {","  for (var i = 0, l = contractions.length; i < l; i++) {","    text = text.replace(contractions[i], replacement);","  }return text;","}","","/**"," * Rules."," */","var STARTING_QUOTES = [[/^\"/g, '``'], [/(``)/g, ' $1 '], [/([ (\\[{<])\"/g, '$1 `` ']];","","var PONCTUATION = [[/([:,])([^\\d])/g, ' $1 $2'], [/([:,]$)/g, ' $1 '], [/\\.\\.\\./g, ' ... '], [/([;@#$%&])/g, ' $1 '], [/([^\\.])(\\.)([\\]\\)}>\"']*)\\s*$/g, '$1 $2$3 '], [/([?!])/g, ' $1 '], [/([^'])' /g, '$1 \\' ']];","","var PARENS_BRACKETS = [[/([\\]\\[\\(\\)\\{\\}\\<\\>])/g, ' $1 '], [/--/g, ' -- ']];","","var ENDING_QUOTES = [[/\"/g, ' \\'\\' '], [/(\\S)('')/g, '$1 $2 '], [/([^' ])('[sS]|'[mM]|'[dD]|') /g, '$1 $2 '], [/([^' ])('ll|'LL|'re|'RE|'ve|'VE|n't|N'T) /g, '$1 $2 ']];","","function applyRules(rules, text) {","  for (var i = 0, l = rules.length; i < l; i++) {","    text = text.replace(rules[i][0], rules[i][1]);","  }return text;","}","","/**"," * Function tokenizing raw sentences into words."," *"," * @param  {string} text       - The text to tokenize."," * @return {array}             - The tokens."," */","function tokenize(text) {","","  //-- 1) Applying rules","  text = applyRules(STARTING_QUOTES, text);","  text = applyRules(PONCTUATION, text);","  text = applyRules(PARENS_BRACKETS, text);","","  text = ' ' + text + ' ';","","  text = applyRules(ENDING_QUOTES, text);","","  //-- 2) Applying contractions","  text = applyContractions(CONTRACTIONS2, ' $1 $2 ', text);","  text = applyContractions(CONTRACTIONS3, ' $1 $2 ', text);","  text = applyContractions(CONTRACTIONS4, ' $1 $2 $3 ', text);","","  var tokens = text.split(/\\s+/).map(function (token) {","    return token.trim();","  }).filter(function (token) {","    return token;","  });","","  return tokens;","}","module.exports = exports['default'];"],"l":{"3":1,"6":1,"20":1,"22":1,"24":1,"26":1,"27":0,"28":0,"29":0,"35":1,"37":1,"39":1,"41":1,"43":1,"44":0,"45":0,"46":0,"55":1,"58":0,"59":0,"60":0,"62":0,"64":0,"67":0,"68":0,"69":0,"71":0,"72":0,"74":0,"77":0,"79":1}}}